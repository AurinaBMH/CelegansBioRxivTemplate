%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: CoexpressionMeasures.pdf
%%Creator: (Adobe Acrobat 17.12.0)
%%For: Aurina
%%CreationDate: 13/10/2017, 10:30
%%BoundingBox: 0 0 1089 897
%%HiResBoundingBox: 0 0 1088.9500 896.9551
%%CropBox: 0 0 1088.9500 896.9551
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 48997 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreatorTool="Adobe Illustrator CC 2015 (Macintosh)"
   xmp:CreateDate="2017-09-25T18:33:17+10:00"
   xmp:ModifyDate="2017-09-25T18:33:17+10:00"
   xmp:MetadataDate="2017-09-25T18:33:17+10:00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   dc:format="application/pdf"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:DocumentID="xmp.did:66bfa8c4-fe4b-4de0-af63-c6bd047b04c5"
   xmpMM:InstanceID="uuid:81c71066-a34a-1a4f-af5b-9112a6677257"
   xmpMM:OriginalDocumentID="uuid:5657d05b-8457-7649-8843-bec06bd2f697"
   pdf:Producer="Adobe PDF library 15.00">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="216"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qx78wIPMdz5R1Cy8u&#xA;Jy1i+RbS3l9RYRCLhxHJOXNSPSjZn+EM22wJxVT/AC5tfMdl5RstN8xR8NT07nZtL6vriaKBykEw&#xA;l2ZucIUkuqtWtQMVZLirsVdirsVdirsVdirsVdirsVdiqD1TU00+BZDDLcSO3GKGFGdmNC29AQoo&#xA;p3b5dSAVUv8AK+uatrCXFxeaXJptqCn1P1j+8cUIfkvUUZagkCoOKp5irsVeQ+atW/MOD82oINNk&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpTPg:MaxPageSize
    stDim:w="384.155792"
    stDim:h="316.425845"
    stDim:unit="Millimeters"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="Helvetica"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="10.0d4e1"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica.dfont"/>
     <rdf:li
      stFnt:fontName="Helvetica-Bold"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Bold"
      stFnt:fontType="TrueType"
      stFnt:versionString="10.0d4e1"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica.dfont"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">CoexpressionMeasures</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:6b58eb5d-a49b-c24e-b6ce-4c80cd59622e"
    stRef:documentID="xmp.did:cefd3246-a1f3-4cee-9e47-1b7807d074e9"
    stRef:originalDocumentID="uuid:5657d05b-8457-7649-8843-bec06bd2f697"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:70f0a203-ef29-43fb-8070-e2eb034d36eb"
      stEvt:when="2017-07-02T19:50:44+10:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2015 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:66bfa8c4-fe4b-4de0-af63-c6bd047b04c5"
      stEvt:when="2017-09-25T18:33:15+10:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2015 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 18 
/Lookup <~
z!"KM>!%KK!!*NJ*!/cL2!4&^,#lt#+!8Z''-OKqU+oUs<650Y)49,13CDR]cQnB!O<r_$5\PNn>f7!o
(p9>#+s4UF&~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -896.955 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 896.955 li
1088.95 896.955 li
1088.95 0 li
cp
clp
459.081 42.079 mo
70.081 42.079 li
70.081 385.079 li
459.081 385.079 li
cp
false sop
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
70.0807 385.079 mo
459.08 385.079 li
459.08 42.0787 li
70.0807 42.0787 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[388.999 0 0 343.001 70.0807 511.876 ]ct
snap_to_device
<<
/T 1
/W 150 
/H 150 
/M[150 0 0 -150 0 150 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
6kTM$!!3Q9"pP>7$j[+>!WW<.!W`?&!<<B*"pbP9"TSN2!=/`8$3:J7"9Sf1$47%C!W`K4!sf)4"pP5>
!tPG7!snl5.L6"b%0-S;!!N?)!!*?4!=T&5!rr?-"qh1B!=Af2$jmCK!!!N6#S-q?rW!3.!sT)@#RUnE
5R7Vs!X8]5!WWE)!!W]5"p>23#QOu.!>5S;!"&f.#7U\<"pb50#6G&0$j$V9!<W<)!XJu;!WWK-!WWK2
!<E*')@?TJ!!WN1":PD6#R187!<WE4!!<90!!**0rW4&A#R1\C!=9/8#RUSA!!3?)!sT27!X&]0!<W<&
HN4'L#Qb,2!"'&5!X8u4!<rN0"pP52$3UP5#QY)/$3C89"ptA4!<WK+"pbP:"qh%G"ptM@"onW-$jm(;
"T\f.$ip>4!!!?-$4R1D!=o84!WrE)$3LA7!<`E/#QXu/$jZh;#6=f+"U5J;!<<?,!WW6*"p=r1!WE(@
!<`T,!!3<2#QP;C"pPDA!<iH/"ptP8#R1>7$4I+A!!iu5!X]>C$4$V4"U5;9$jHe;!=oV@$318=%06M5
"p>24!!!$&&c`1A!=B/>!Y#28!=B)6#R(YG%gE(>%h&RH!WiQ7#R1J<"p=r4!<WE*$N:)2"pPD<!!*3H
!X8`9$4$nA#QtD;"q1J=!WW9&!!NQ-#QY88"p"]4!<EE'!ETU0!WrQ*!!<6-"oo&9!<<<)!!ii=!!<9&
!='#5!!rZ+!WW3(!!WQ,$3gP4#QY&0!t5G:!"&]=!"8l6!=0#6#QY,:!Xo8A!!j,?!WW<(!!*94!<R]R
"p4l5#lju,!WWK,!!3?3#RCV:!!WW1"oo&=$jlt<"p=o3#QXo.!<NN."pP&5!Wr].!!*9)!!EW5!!<<(
#QXr+"q1PA!=/Z4#RUh>!!*E6#QXu-!=]A;"p+f+":>,;$3gP4":+u-!XJc/$3CVC"pb2A#Qk22"p,5@
"onu3#RCbG!X],="TAE`!X9&5!!ic4!t#2;!<rf8"UG;=!"'>J#QP&;!X8o7"p,2D"9AK.%06P2"p"`/
!=/l8%0?_@!!3?)rW+VW"onW-!!*K.$3gS6!!!*$!<`T9$3gh>#7LqB"TST*"onZ1!!33+!X&Z2$j_:b
!s&H/#RUb:"pPD:$3gnE&d8I>!"&o@!"&`,!=T#3!XK&6!WW3$"p+i,"p5&2#Qk>7!=]27"onc-$3:/-
"98K6":,)1#R1_>!!!$$#RCD="oo&=$3CD4!s&Z7!!*'(&-Dq7#m1/."UG,/!WWK."pG&/!Wic1!"(4c
!!<Q0!W`</!<rl8":5D:"UG/0!<N<,!"8r7!WiK)!X8W.!<E9+&cr17!)F++$3:;3$igD9!=0#8!<<6&
!X9)8#R1;1!s8Z3!WiH."pb><#RU\=#64c-"U5&9"pbP9!!<<)$4Hq>!!<H-"pP,0!WiH2!=/Z+$k-):
!"T,:!X8].!t5A7%1NRC"ptA8"pb51#Qb,0!=B#4":>,9!!3K7!<N6'$4I=F$4R1F!=/l0"pYJB#Qt>5
&dS[E#R182"pP&7#Qau+#RCM<rW!u?!=])7!=Su2!!i`8!=0#8#Qk83#Rq+@$4$Y7!!rQ)"9Sc4!<H[9
!X]2;!!EB.$jHb6"pbA6#R185#Qb,/!Xo88"pb;8$31&-"ptA3!rr<&$igP?"pkJ9!>,A?!WW?(#QXu1
#6k/6"9];@!"8i0!=B#:%0d.?!WW<.&cht4$3:;6#QY#+!#GYC$jHt<$jlt?!s/l:!<rl3!!3-0#QP\B
$3L_H!"8o5!!!$.!!*-*#Qb89!sSf4rW)s(rW#e$"p"]/!!iW3$3U>0!WWW0"UG/6!!*'1#RCG4%1ERD
#RCG3"p5&0":>86!!iZ4$ig>7$jmFD#R(V=!t5M<"9Jc-!!30$#RCV7!!WH:!<*60!!<Q1#RLM3"qptD
%0d(L!X]88"p5&1%0utC"U=r+B*&&5"onZ($j$M8$46e8!!3-*!s&T+!!3?3"9f2>!!*95!<E?0!"',=
!!*'%!X]2=!WW6'"p"f,!=Ao0"oni3!!33&!!3<,&HN.H!s&Q4%gi::$j-\B!!*90!WW9-!!<<3$krmG
!X\u9!!E9%&ciC@"9Jo7!=]J:!B1&["onl4$3:>:!"9,?"p"i-#QXu4%0d"I#QXo+%0?_>!!3E5!WWQ-
$ig85!=0)6#QP&0"TeT&&dA[P!!<Q4#QOr-"pt\A!<NK9rWj5>"q:tF!X\r.!<<**$3gb9!!*K:$3UA2
"p4r+!Ab&i!=T#4!!W]7!<N6&#R1JB!X],3#QP,2&ci(9"pPD=!rr?(#R1k@%1N:A!=B/<!<E*'56;9"
"9Ju4#RCGC#QY&2!s&E,!!<9+!!WW0!Y#>B"p5;8#Qb83%gE"7!X8Z*$4$h=!=B5B!"B,4"onW-$k!(C
!!WK1!"'&8$3^>4&I8XD!=/Z/#Rgb7#R1;8":,G8#[.Q8"p"o1$3CD;#Rgb?"qM4K$4%%@&dSUB!"8o7
#mLM<"ptA2$47:D!<N?1!rrB&"onu1"pP2;!<E0)!s&H-!!3?)!!iZ,!XJf6#RCG4!<<-+!!!3($5N^N
!!Wc4"p"r0!!WE)$3:D4!X]>:#6"]Q"98H&"V1V7"pP&9!WWQ3"onZ0!XJi5#Qk&4"pbA@#QY8:!X8Z4
!r`3C$3gM2!!*'##QOr4&dSIB!!39(!<`B,"9nr/":,>7!WE?9!sf):!!*T9!X8u3!<N9+#5nTH!!3?3
#Qk>>"pbJ:!!iW+!!EB)"pP/2$jH\4#R185#RC>93Xc)l!W`<+#RCD="p,#8!<NT4"ono1!!33%"p"f+
%06e:$j-bB!=/l4!!Nc6!s&Z5!W`9&!!<6+rX&u7"TSZ,":,VE#S$b5%131A"p"`5"ptD9"ptE\!X&N.
!sf)3!!<<-!<N?4!t#&5!!*9)"q1S<$3CJ5#RCqM!<r]3"p#5=#R1P="ono3!!!E-#R1;2"onZ7!X8W*
!<<Q1"9AK3!!!N0!WW3$!<r]-!<W?.!<rQ5%13@M!W`9(!WW`3!!!-&!sS`1!=B/8!<EB.!s/ZR!rrN<
#QkD@#R:V8!!WE3"oo&5#m1G?"on]1!!*?+!Wr]1$31V9!)s"""onW-!<r`6!XK,5!!WE)!X8W6$3L8:
"q1P<#RU\>!=Af,!s&iA"pYD<!!**0!!Wc=$46h=!!iW5$j6P4"9Si0!!io?"p"i8!!!3/!!!%K!WWZ8
#RUS4!WW<("UG/8!!NQ4$46t;#7(SJ!!30(!t#&4!!*-&#R1;:!t#57#Rph:":,2=#R1D?#Rq"I$31,7
!=Ao;!t5A9!X/c.#RCVC!=Ai.#RCG>":>,/!rr?)!!iW1!s&E&!=B,A$3C27#6P&8!WiW2$31,2!!<9'
!<W6+FUSQY#Qk/7$3Lh?!XJu2"9Ac4"ono;!=/i0!Xo>8!WW6'"ptb=%0HSC!!iT+$3gb9!Wru<!!*'%
!rrN-!sT#3!!!3($ipe@!<E9(!!*</!=0#5!<<6,!"B2>"TS`9"pP)8!Y5\@!rr?-!"B8>!"8iB!WW3$
!!!9/"ptG4"p"]2$31>C#S$b5#RUe@$46eF%0le5&-)n8!!WN6!WWE*#Qb#-$3:&,/-,q\"ptbI$3CJ6
"p+i+$3C2?!ser4!WW3+"p#/A!!WW0!!ic1!W`Q-!!<-"!<NH("qUeB!=/i0!!WH4$3CA3%06GF$4%.Q
"pPJ9"p>8:"p+u5#QOl4!!!-+rW!34$3CD;"pb20rWXMO!<`B*"p#,:$46b9"p"o;"oo/;!=T;9$O@=M
!=Al8%/pSh"qLt?$ipM?$j$D7!!s):#Qt,7!=/c?!X\o.!!*-,$j$J?!!ic2!"9&3"pt>1$3:K_#R(J9
"pbD;!WW91"p>,2!!!*%!"&i;"pP)0!<EB*!X8o3"p>GB!!WW/!<iN1"p5&2!!Wl4!<<<+$3L>0!!W]0
!X\u5!WrT5#Qb)4#Qk&2!Y>D;"TSZ*#R1P9#QOu/"pb83$k31<!sAZ*!=Sr7!<<B.!=/`>"pPE<!!Wc3
$3186!!iW+"9o&9!=B>>!<<-$!WWW9$3gM:!!*'(!<rr:$k37<"pP/<!sSr:"pP&-%1!IF"p=r,%0ut7
#RUnA$3UV>!XK&5"p"`)!WrK."9Sf+!?_IO!!*-$!WWE*!WW3$$jHn:#QbG;$jZk6"98E'$3186!=T5@
!XSc*FTDLI!=B&6!<NT4&c`1C!<<B+%0-G2!=T#5$3:/9!sSr3!s/Z4!=Al1!sSf2$k*.<!!iu5#Qb>7
$ig\<!<N6.!WWE9!"&o2"pb20!<rN0!Wi?%!rrZ.!X\o3"pG24!<WT5"p"u:!<ET7"ptPD#RCDk!!Wi;
!!<B1!X8Z4!<rW,!sS`,$3:80%hJpN!<<-)!<WH-!sf5@"oni-&e#!G!t>51"oni-!rrB$#!`:k!WW6.
!!<K7!t##0#R(;7"9Jc-!<W</%13+A$k*+C!!!3-#R1>2$3gV7"ptA:!<rf:"98H'!!3-2"p4u["p"o:
"q1bA!W`Q/"p+u3!"&o7#Qk26%1!%C!X]><!!EN,$ipM5!<`N:!!3''!"/]28I>Fu#RCD7!!*9*!=B)@
&e50Q!X&W,!<``1$3g\7$jI%?$jZh;!<rW7$3gJ;!!<6*":,&5$j-J6!<rr4"p4o-!<<<(!<N]9!=B#8
!!!31#lXll$j$V6!"/l9!!*K=!!!H:!<<<5!<W?'!t#A:!"92A%0ch;!<iH6$31&5!!N]1"pP&7!!3-+
!rrB("9Su:$jm(7"p+c.#lXfM#R:hP!<r`6!seo/!<WB-!!iu;!sel6"pbD6!!*0%$jHnA!XBPN$jHnA
!!*?+!!WW7"p"f-"ptP9!<E0%rWkXk#RUV8#Qau3#Rg\8!=0,7!<N?*"p"i/$3LJ:!WrQ1!<EH:!s/Q/
!s/l6$4R1H!"'&;!!WW-!!ic5#lXf5"onZ*"9Si;!"fP@!=&N'&-2t9!=/]=!"&u3#RChM$j$\9"98E5
#R1J5rWXVJ!<NB)!WrE'#Qk2<!=]5?!<<-$!tYb>"pbG8"p"i6"p"r/rW+JS$3gJ2!!<E*"pP)2$3:>8
!!!''!=],2!t#5<":PJ8$4I(>#RUY7!snl+%L*=I"p5;8!WW6'$4I1GH3OKZ%g)h4!=/r8"onZ.!<<-%
#Qb>5!sf)2&dAUI"oni-$3gP4"ptbE"pbD:$31)/#Qt,1!W`K-!<E0#$3UP7"pP2;"pbD5$4dOG!=B)4
"9S].$3gq>!"&f2!<W<+":P>9":P;2"p"`5$31>;!WW6,$31,2r;dl=#QP8;!!<62"Tec1!rrH*"TSl:
!!*?,!Xo,2rW$7*#QP;6!t5S>!sT#4#Rph>$3h+D"p5&4%06k<$4I1D#R1P:$3:8:!<`W-!=0#@!=T;>
"p+u9!<<B+!<`K)!=B):%0-S:$46e9!=/r?!=]A9!<NZ8!!io9$kE=@rWkgj#QOr2!!!*$!=T;9!X8W)
!WWW>!rrZ8!XJc5!=/`2"pb51!WWK1#RUhE"98K("98iA#7V"@"pP,?!=T;9!!N9,1]\3j"ono/!=/Z+
#QOi5"p+c8"ono1!"B8>#RCY8"pb>8#R(86"pG#0$igP8%0-_>!<IWM$j[7C!!**'!W`9%!<rQ-#R1D;
"pbA:!XJc,#QOl.#QbG:"pt>2!W`?2!=Ao7"onc.$3189#QOi-!=/r3!s/N-!!Wl<!<r`.!"&c3!"&i9
!!ic<!WWZ0"9SW0"p,D;!!`]:!<r`1"onW(!X8u=!<iN/!<<B0"UKPX!<WZ0!s8Z+!<<3+!WW9&"oni/
$j7"J!<`T2!<<<)"pG87!rrB,$3L86!WrN1#6k50%0-A4!!*'$#QOi*$3ghB!!*<3$4HnD#QbGB$k*IK
%0HnB!!!3,$3gP9$j$J2!"'&;%gW4F"oo&5"oni.#RCV:"oo8>!!E3#2$X3c#RUV6"p"o8!!EW3"onZ2
"on]+$3L_<#QOl+!!!*1$3:J<"p4u6#QP&5!=T;>#Rge5#!i4j!Y#53!=Ju2$4I%=!WW<(#R1>5!<rQ6
$3^D6!<<6)!WiH,#m124!<``8!=/`6!!NQ-!!3?+$ig>5!=0#5IK9EU"p+f+!"K/6!!**+!!WE'"VLh9
!!ic2!<N?3$4$V9!!!T8!X\r;$4ROR#QXu6!!!$2$3U>9!!<9,"ptb@#R1_@!s/]9"U"o2!XJu7!Xo)4
%0cq8"ono5"UYS;$3CP?!W`H)$3ghE"98T+!"8i-#R1P9"pP,<70<_p#QP,;!X8o;!!!$(!<<-0%0HV8
$3:,2#mpY:!!!')"9Ju9":,54!>5A8!snu.!<<*.!XT&4!!!3-!<r`8$3L_9!]:)f#Rph=%0utA!<<-+
!<NH,!!*',!tPG?!!iZ.!<<3%#RCD6!!*?*&-rI@#6k20"9nr0-isGP!<N9+!!<Q/%13@@$4$e@"p"u2
!t5V=$3:D<$3UVC#S.=F#R:80"U55>!W`Z-"%`\&#QXo4!>#5?!!WN*!"oJ?!=B8:!!WW0!X9&5!s8T,
!!WQ+"oo&9$3:28!!**'!Y#D;!sSr4"pP,0#RCJ="9\u4!=0#>?NL60!<if5#RUbC"9]&4"qM.O#R1VC
!tPG8!!3B6%fue:"p,,9$3UG8!<`K+!!EK1!W`<.!!<6'!sf&7!sf)>!rrN-#Qb8=!s8`/$j-M4$jm"9
$ig81"qgqB!r`BC#Qk)-!sAT)"9nu5$3CD5#m1G;$jm7I#R1G98cT,"!!!*$"p+f-!!iW+!=TA;!"]2;
!=o2:"pbV;%1!:H%06M3!!30$!X/W*!rrT,#64r:!"B,5#QY88!!*E4$ig;0!Xo>Ar;ePW#Qau1"pG28
!=/l<!=B)6$3gJ1!rrB&$3C85$jZk6#Qk83&e,*N!!3<($4$ib!!E<&!!WE/!<EN-"U5#5#R1J:!"&o2
!WiB,"9\o7$31/.!<`T0#QXo2!<<Q/!t#57"pbD6#R1eD!<EB/!t#&1!=T#8!Y#/;%0?S:"p4o,"q:_C
$j$D5#RUV;!<`f>!WW9'!!3?,!s/K3!<EH+!sf#6!sT#2"9efZ"pP,1!<<<("pk;9%2&jR!s8N'!<N6*
!sf57!X\o3"p#&4!<E6%!WrW,$3CD4rW"eX!sSf,#R182!!<9.!"&o9!soAE"ptGA"9nr.#QOo,!X8u:
%06J0"U5J=!<N6&!s/K-!r`B("9&<2!!WE-#RChG!sJZ1!<EU=#Qk;4$4$Y5"q:nD!!<6%#Qk8>"ptP=
!!E<0!<rc2!=Al6"qgnF!rr<+!!!H0!!*T4!WWK1!!!Q4!!`o6":+u.!!!3-!sT)5#Rg_?!WWE*!s&`;
"p"`1"q1S<!XK&5rWW]=!Xo86#lt54!=&N/#mLA2!W`K,!=B/Q!<E6)#Qau8#Qk&,$4$n?$kE==!<<H3
!!Wc6rW?L7#R1J7#R1>>!s/Z2!<rN0!!Wi;!s8Q(%0d"F!"o85!"&u=!<WN,#RCG2!WWQ3"p,&;!=/f.
$j-J4$ip>.&dSaE%0-P;!X8Z2$ip>2#R1D9!=0#9!<W<-$31);%0d4M#R1P="9JW,!=TJEr<=DR!s&`9
!<rW.$4$h9!"B#>"onW("pP&5!<E9*#m^e=!<*!f"oni0#Qb23!!iT0$k*+C#QP&2!W`<+!!<Z1&cr%5
!XB&7#RUPC!!30.!!iQ+!=0#<!<iK,!<E9'!!W]/%flh:!WX2?!Xo88!WW6%$3pP4"p"`/!t5/:$3U\C
$jm:OrWZ[2!<E0'"ptA2!=0)B"q:S5!!W]/":>5<!t#G>!WiB,#R1A<!"&`,!<WH1!"8u3"pbJ7!XJf2
!=T)8"qV1H!!!9,!!!3)!s8T+&e#$O!X8]8":PJ9$3L84!sSu5#Qb#6%fl_1#&+DE!X&]-!<rf8!<rr6
!!Wr8%06Y=!sAr6!!iQ/#QP;<!seo.!rrT0%0-D0"9Jc3$3184!!ii>#QOl+#R18/!<EB-"p,&;!W`K2
!!!$(!seo3!=/i1"T]&4!!WH,!=0#>!rrZ1rWi]:!"',7"pb24r;\V^&dA[G!!*E,#R1D9$4$Y<!!<?.
#R1A3"q1b<!<r`5!"Au<!=B)<$31A>$31)8!<<-!#XS^s#Qb&0#6P,6$k<OD!X\r0#QXu9!<E6-!sAl6
"pb83!"&`9#QYA=#R:VD!sS`0!!*'("9nr/!=0,9$3189#Rh%@!=/r2!<<W7!WiZ+"pG#/$4I+@rW!N;
!!icA#Qb84"9AN)!"&o7$N:'%!WW3$!W`K-!!ii1$3:59!<<0$$3CJ;!s/T4!sf#4"pb50!sS`,!!W]2
!!*E-!!WH($4d:I$3:,6"98l8"pY,.#RD"J!!3E+!=B)6)Z]pC!X8i9$j$b<"pP/2#R(81%0-D3!"T&1
#6"TM!sS`6!!W]7!WiB.!WrH1!=&l3#RUhM"9Jo3"9J`."onc2%flq?rW*i9$4I1L!s/H,#Qau2"pPD?
%0R+?":YP8rW*!%rWW?*rWj&8$ipS5"TSQ*!<E0&!!30+IK9]Y!!<E.%0?Y:#R1;<$jm%E#Rg_:"q1P5
!!*30%flh@!<W<*!s8f7!!33+#Qk,8"p,,4!s&Z7!!WN*"pP&6!WWK-!"&r4"9J]="onc,!!<B/"9S`-
$4$b=$jI+G$jQtB"p"i2$3^bB"9nl.#R1>;!!iT6!sf;E"pt>7!W`9,rW+S["V1Y<#QP&5!<E6'!<<H8
%0?P>!X8]+!XoMB!s&B%!=Ao0%0?_@#Rh4G%/pAL!XK&9"pt>1#Rgn=!s8f0!!*'%$3187"UYbI!WE9J
!sS`*!=B#2#Qb2C$3LD8!<<<0#QXr.!W`K.!rr<,!=Ao9&ci:I!WWE/!seu1!=Af-!sT#5rW$U@!X&o8
#R1>1!<iH)#RUtE!<<B6$4$t>"q1hC#QP2;!!*'1!!*E4"p#,5!<`N*!rr?($j$V5$3:/7!<rN."9AQ5
!<`T2#R1\;$3:2."pbD?!<rl8!!3Q3!!Wl7!s/K($31DG.1lmm!!WT-!!iQ1!=Ao3!W`<+"U"f+#Qt,-
!XJu>!!Wi5!sSr0!!Wo3!`8pu#RCM4!<E<+!X8]-#RUn=!W`<-$3gnG"U4u-$j-\6!XJc7!<<-#!!WQ,
"98E+":>DD$igA:!!iW+#m:M>$3189$46e9"9AK.!<rW,"pP83"98H0r;[c>!s/Z4%134>"9T5K!!**+
"p=o+"p"c4!"9)2!&4Z]#RCD="p"o1!WW9%"9o,6!!3?/!s/`/!<<H,!W`<+!<E0)!!*-$!X\o.$3gVA
r;[*+$4$hA#QY84rX'8A!WWE*!!!0(&-`C?!=/f8#R3'j!Wi?'"9S`+"pb50!X]>F!X/W2#R1;0!=B)9
!"f25!<EH+!=Ar0!<`E+$31\J$31,+!r`3g$4$Y5$3:/-!<N9-!WWK8!W`E)#QP,="p+u1!<<0.$3182
#RCM>!>#M=!!*3'!s8Q(%1!4>!!3?/!=/f.!<N9+$6THR#Qk22!<N6%!!3?1!XK&3!!EK1!s&H-$47(D
%0d@B!DW^s#R(A;!!*H0!!*0&!WiK/"p4u.$3:D4$jZk8!!W]0%2&pI!WWK7"ptP=%0?M6$46h?$3L;1
#QtD7$3CD4":,#4"98E(!!WW-#6"Z0!sSc8!t#&0"r%=F!!<3'$31JA"9o8=!=T&2$k3F?#\F8H!<rQ1
$3L86!rrB.!!Wr7!<rT1!X8uE!=/]8!!j/:!Y#YL!<rW7$3L\;!XJo/"ptD9!X8W*%gW^N"p+r1!<<--
#SIOJ!ser:$3C2/"9nl4"p#,4"p"u?!<r`6":>22"pY>6$jZh9!<N0,ErZ7G!!*-0!!3E1!!!$#!XJo1
!!!*(!WiQ3"pP)4#QP,1$j$V;!s&H1!<iQ.!s&B'$3L\:!s&N,"pbY=$4$V4!=/l1!rrQ,"pPD9$46k<
":#A:":>/3"9no0!<<0(!!3<("pb20$k`mK!s&E2"!mpK"q1J;%gE@H!s/Z-!!ii4$4$V;"UY;8#RCD4
!<`H."9Ji;quBY"#RCD2!!io9%0Q_<!!3E.!<EN0!<`E1":P84#Qb,4!WW6$#QOr-":,&1#QY,<$jm7G
!!E`>!!!$%"pt>=!sT#<!rrN*!<<*,!!WH.!!WE-$3C2/$3gk:#$hB:!<N?1&dAC;!=B#2"onZ2!!i]-
!"T/9"9JT.!=oJ:%fd"B!=/Z/$3:/:!!EB*!<rf6!!*-$!=/f0"p"c-%gW7<$31,3!WWE3#6Fl0!W`B-
!XJi3!sT)4rW*0/!!<K.!bhuE#R(D4"9o27$ipJ3"p"]2!W`K0!s/H2!X&N.#QP;<"ptV9!!30'$3gJ5
#QY&0!!<9,&c_q<#R1J?!<<0$#QP85$3:>3!=0#4"98c0!WiB&!<E0*$4$tC":bJ=!sel,"9JW)r<<f7
#RUS;$3:J@"p+l2!"928IL$8b"pbV=!s/Q1$3C;0";(hD!"9,7!s&B%!sS`1!!WK6"9JW/!WW3-"p"o6
$3gS6#RCV8$46n;!<rf0$31>9"9So0!!3E3!s/H8$igP6!=TA<!<iK*$3^D6"T]&5!XJu1#Rh%?#QP)8
"p5,3"pP,9!=],8!=/],IL#uW"pP/6!=o59$k3aL"q1h="onW1!<rl8"on]3!WW3-"oni.!<N6$"pb89
#R1;0$j$D9!!<9)"p+c)!W`<'#Qb/0"onZ2#R(PE$3182"pPD7"p#&9!s&Z-!Xo,2!!*K@"9JQ4!WW3'
#RCGA!<EE0"9Ar?!XJu9+9;cP"pP22!s/Z4!<EB/"9\]+!Wrc0!<rW3$4$t@!!3')#Qau3#QOr9"p4c)
%0-J7!<rQ+!!iT4!s&T)#!E%o":,29#6Y54%flq9"pP).!W`K4#7(;0"p4r5!<rr;#R1hB"p,,4!!W]2
#QYG;!<<<)"q1M5#QOu?IK0KN!<W<'$j-VC!"&o9$4I%;#QY/7!t#54!=B)8"pbD5#6G5<!"T&2$3gnC
!!iW3!s&T-$jZk<"UtG3!W`K6%0uq6!<rQ-!t##.#RChE"onu4$3gh<"TeZ)!X8i3"9AN1#QXu."onZ.
"Te]5"p"c2!s&B&!"',77L9&%!!WE-!!**-!seo.$471K#RCJ3&e#$I!!!*.!!iQ/!!36("oni5"p"u=
!!!E/"p"`5!!ic7!X\u;"onu>!=Jr4rWWH+!!ir2"t^8g!<<0*"oo&=!sel-!XJi7$3UP8$4-\9!=/l3
!!*E2"pb25":,8:!t5M:9*PS#!<<H-!=Sr:"9f#4!=T/5!XJi9!sJ`;!WiK,!=/r4!<N9+!WrW2!<<62
&dA@<!s8Q($jH_5!Wrc<$3UV7!<<3+%fl\<"TAE#!@.aK$3:,4$4$hE!s8N*#6G;:"9JT(!W`Q.%1E=@
!<E9*$k3LA!!EiD!!iij%0?M:"on]*"9JQ-!<N?-"p5&0!!*-$!!3?/!sel2"p"c.$j6S<#Qk,/!X8o7
!<WT.#Qt25"9JK/!!`E&4U(or!!icA!X]J>!sSr:!X8]1!<rQ+!X&K-!<<H/!sSl:"pb;3"pG23$31&,
!!3-#!<EB+!"8o0"pk9U!!WE3!WiW/%giCA$31>9"ono5#RCb;"Ukh@!s/f1#R(A6"UtG9!<WT.!XJl.
"q1M@$3gV6!X8o=$igJ7$46h9$3gP4!"&u5"onZ."p4i2%0?S8$4Ht:!W`?8!Wi?.!!<K2!!iu6"ono1
!s8Q+$4$V;!=T&/!!!3'#6"W/!rrQ,#QP&/%/p6E!W`?'!<W<%"9AN.$jm7Q!<NH0!WWE)!=/c.#S7CE
%gE"7$3UV=!"8r6$4HtA$3:2.$3CJ?!sSi.!<r`.!!3?*!!WT-!t#/3$jQh=!=Ai5!!*K2":P;4"9ni,
$igA0!X\uA!!!9*!<<=Q!=/`4!XK,?!!*E-#QXo0!<E6-!<E?+!<<N1!<rQ1!<W?,!X8c9$46hD$3UJ;
!<<0&!"'&;%0I"=!WW6'!!WW-!Wif2!<<61&-;h4!t5\G$4I+C!<rT,"To#7"q1M@!=T57"pPMD!XJl;
!"&c7#QP8=#RUb:!<rW3!X8Z*"q1M4!r`11!tYM6&dSO@!XK&8!X8]."p"`3#RUS>#QtDA!s8f7$3:/3
!<<-#"UG;:!<<0&$igJ3&-E+:$3gb9"UtM?$igJ9#mLY9"pFu,!XAi2!sel2!WiB'"ptJD!!!95%h/dF
#lO`0!t#;<!"&]1$j/-k#R1D9"Tnc*#RUhA!WiK*%g)k5$ig;.$3gM2$3C52!WrN*!!!9;!<EB/#R:A.
!<iZ5!!W]0rW)p'%KQY="p+r.#QXr-#lt/5rW+PS#S@.A$3:2:"9S]0!<<B/#Qb#4!<iK)!Y5;3"p+c+
#Qb83#6kM@!!3K/-NaAR$3UD;!s/]7"p,&3!WrQ,!"8i-!rrZ4$3C>9!=]#9"p4u."o\O$$4$V4!!*E4
#QOi.#Rh%@!so57!>5S>%0?Y4"q1qL$3LG4!<`N0!X\u0$ig;2!WWK-#QP,2#6>#7!!Ef4#QY28!=0)<
#Qk8:"pY/0#RUP9IKBKR!<W?&!!3-)!!ii1$46n;"pYJ:!WWK+!<<*&#Qk&2#RUhC!X8f1%1!:@!<E6&
"onW7!W`Q1"pbV<!<r`:$j[%;!=B#A#RCG:!rr<*!!*0&"qh@L#R(><!<EH1!!**3$3g_>"p4i-!=/l2
!!`N+#R1;1!XJc+0`h@d!!3-(!<N6,!!WK3#QOl0!=/u=!!!$/!sSi7#QOi+!!3K3!!ii4!s/Q3#6Y50
!#l1J!=T&2"onu6!!**%!Y#>>!!WE-!<EN2!=&N'.K]eX$j-b?!<iZ-!W`K.!!30(#Rgn>!<NH.%2&XF
"pbJ8#RUS5"Te`0'*A7:!!E`2%0-G1!!ii8"pbJ=!<*$f#QXr1!<E`;"q1V:":,2?!=/Z-!<EH,"onu>
#QOi+"ptkF"onu2%gE4<!!iQ,#R1P8!s&K.!!3K5#QP&<%0-A8$N:&J"pbA4!<`i7"UYS;!!*90!"B,>
"9ef3$jltC$4dXI-jC"a!!ic<"oo8C$3g\A#R:A3"ptA8&I&49!X8W5"9\f,$4I1I#n?k63ro?d#QY#9
!<rW;!!**)!=/c9!sT)>"98E1!s/Z.!<N]4!<E6-%1E7C!<<-%$3:24":YD7!<rN(%K6VH!!!9*$3gP4
"onZ,!<E9&!!iW03sG`d"9A]-#Qk>7!!iW5!!iQ)"T\T-!<NH0#RCJ;"pttM!!*0-#6kA4!Xo/4#Qb).
!X8]1#Qb&.$N:5o!=/],"p>)0!"Ar;$31DB"UGM@!"9;>$3gb;"U5D9$3gJ9!"&o<!!EB(!<rW+!"8r:
!<<<(!=/`4!WWK1=9o!>"pbJ7"9o8?$jHe@!<WN+$3:S9!<rN4!t#&7!X8u4#QY#3!tP_=!=Af-"onZ-
#6Y27$47CO"p"u6#QXr2"p"i-!s&K."p+l-#R1;8$3U>1!s8E$+U/8T!<rr7#QP85"p,&1!WWE/!<<B,
!!*9(!!WZ4"p=on!=/Z."p4u8&HW:K!=T59#RUV=!W`]1!"Ao6"UYY?!"8i3&-`7G!WrE0#RCJ4"p"`)
"onW(!=/Z2!<E6(!<rc5rW45K#Qau+":,23#SI=C!WW6$!XT&8!t#54$4$nA!X8o7$N0r:#RCV?"98K(
%0ck:"p"]*!Wb._!t5\N$3CD6#QkD<#QY)3#QOi-#QkSA!!iZ0%0ch5#Qb21#QOi5$3189"p,&2!X8W1
#6##M"ptYB!rr<1!s&K,!WWE)!!3?3"p>58$j$J9rWWr<"pb;5"q1P;!<rl:"p"o4')i.K!WrH/#QP,1
"U>AA&-W%@#Q]AS!WrN+%gE:D!<<Z>!!3--#QbMD"on`9$ipV9$jH\<"onu9!!iZ,"U5;9!=0)>!"&c7
!"TJ<!X8u4"q1M<!"',:!<NH,$jI4H!s8N*"p"o.#Qb>7!!<3%!!<3*":"r5"q1J9!!j)9"9AN+$3CP8
!=/`-$ipA9!s)@&#SI.B!X8]1!!W]/$4$\;":+u5#64`*"p+c)$3C;0!s&H("pbD7!!iQ,!XSi."UG57
$31)8#QY8A!X9)B!<<B4!Wif6!<NH-#QYG;"9JQ(rWX\L"98l2!!NQ-%1`ID!=Al/"onZ+!<EB*"oni-
"qh1G!!<90!WWi6#Qt/.!W``2$jI+E"p+l-%0?D51'.^^&cr=C"9S]4"pb;?$3CP=%gWRD!tPeI!!!'/
"pb25!t#,1$3LA3!X8`2%gE.=rWXDN#QbPC!=/r8"pb82$j[+?$O@7C!"',=%0HV2"9JK%%gW=E!<E0)
!"&o7!X8]+!G2E>$474H$3gb?!sA]5#QOi6$3150!X9)>"pb58!=]/3$3:,4"p#,<$3pe?!!ic1&c`+C
"q1P?#QP29"p"]+!X8W)!WiB.!!3K4%06J3!!<K<"p"]0%h&XL!!*0-!=B#<"9&Q-!<EE'!"B2>"oni5
"q1J5"9AK.C'=Y>"q1S:#Rg\=#Qt>@!<r`/$31&,!XB5A!!!31!<`B*!s&Z<!<N9,$3gb<!WiQ3"ptD?
!!WQ-#RUS:$3gM3"pb52!XJc="UkJ8!W`Q4!!*9*$4$bA#Qk57!X/c."9J]-!t5A<r;[?0"p"i4!XAc/
$3L_C%0cej!!!*%!<<H2"oni.!s8T*!!*0-$jHn:!<N9/#6Or3"p+c,!=Ai.$ipP>"oni/$jI%C"q1S3
"qh1C!<rr4"pbD;!W`W6!s&B-!r`H6!Wi]0#Qk&-!X8Z*"9&K@"VLn>&-rC>!X\o/#QY,2$j$\A!=B):
rWiQ0!!%HR!!*94$3C26!sf/6!X8i;#n..H"ono5!rrN6"p+o9!X8i9"9Ai1$ip>5$ig85#RUV;!!!$*
!!*T4#RUP9"p+u5$3gM?"p+l/"pP,7!XoMA#QXu2"9T)5"9J]5%g3(B!<rN,!rrZ."T\c2!!*-%!X&i=
!tke<#Rq.B"pb2/"9\]-"oo25"sa?P!<E95!"92="UkD=":k\:!!E?)"9A]0$igA8%1!LL$31A2$5`dD
!s&`5$3ptF"p"]0!!NE.!X9&5!<iK&"tKZZ!X8Z*!!iQ/!<E0$$j6h;!W`W.!<<6.$31D;#QOo,"ptVB
!!!3.!<HO-!s&Z3!<E6/!XB#;"p5&3!sTA<#Qb21!"&]1!sSi-#QOu5!X8u;!W`W.#QXo0"UG2?$46tH
$3gb9#R1A<!<rN("T],7!!`r6%gWF@#R1J6!<<<.#R(5/"pPA4"rdgP!=o28#Rg_E"9JQ-"p"c.$3gM6
#R180!rus>#mCA2#RUh<!sS`2!<N6$$4$nA#QP&0$47%>&-;k@"pP>5!Xo/B!!!W5#QY2@"pP>7!W`<%
!X8Z,%06M2!"&`4!<W<'!<N6*#R1;?":,#2"9K)<!<E0#!s&T-!!WW."pP/.#QP>5!s&B(4TGch!<ru6
!WiQ8!!Wc4"pPJE$3gqN!WiB0#R1;=#Rpe?!!<E,#QP&7!Y#24$j6P5!=02:$ipG>!s&N'!=K#;"pP/1
"oni7!Wr?,/clXr!!ii2!WW6&!!!$%"ptbL"98K+#QOl*#S.@Q"p,&6$3LA9":+u/"ptG7*=;fP!W`B*
"pP>7!s&K.!!*-%!"&]5!t5;<!!39$!>ke:!s/`:"9J`4#QOl7!<rN2$k*+=!!il0!'gSc$jm7C#QXu2
#RCV<!!3K6$3181$4$t="9nr?!X&T2#R1V:":YD<%h\pE"pbA7!!iZ-#QtD7#64f*$jH\6!WrH*rWX5?
#mpkB!W`B/"9AN)!s&E("pb54$46e<$N:6.!"Ar/#QXu,#RCD2"p"u6!<NH*!<<--$jHb?!sSf;$46e6
!<``8!<rW5!WiB)"pP,1!!Wl:$3LPB!<rl>!WWB.!"TDB!=/Z0#6>#7!=Af,rWiT,!<rQ>!!3c6#RCG2
!s&E2"pP/:!s/f0!Wi9-$O?e7!!io9$31J8"9&9'!=B#2%K6B'"ono/$46e@!Xo8B$j[%C"ono;#QY22
$3CP?!XK#7"p+c/"pY,.!X8Z0"ptD:!s&f5"p+l6!!E9&!=Sr7!rrB&"p5&6!WiQ,#R18^$ipG1!!E9'
"p+c+!sSo9!rrT."ono7!<Ef7!<<H-!!*-.#R(;5"9ni.!s/Q+rW#S%&HN.A!t5_O":,J=!!ic2#QOl2
!s&T,$46tC!=0#5!"&u4!W`Q,#RUP7!rrZ1"TSf8"pP&-#QOl0"9nl0"pb21!s/Z-#7grd!<rW.#R1J?
!X&i2"on]-$jH_4!!WH*!<WT3#RCbA!!*0&!!`c=$31D=!"K8=#QbVJ!Y#S=!!WK1#RpkE!WW6.#RUh;
!!3B2!W`?)!"&o3!WW<,"p>#.!<N6$$jHt<"p+u>#Qk>@"p,&2!<rf:!<NH2!WWQ/#QP;\!=Ai5$3LP<
%g3(<"pb54!<<<4$j$P?"9JT4!tP_A%0-J1!X8Z(#UBEU":>>?"p"`5#Qb)2!WW<0$3CP=!<<*,"p"u8
!=]YC!<NE'"r%(H!WW6,!WiQ1#Qb22":P;2#Qk)+!>GM@!sf/>$igG:!!*'*"U556"pPWf!<WN1!Xo87
"9A]-%0Zb4"p"`1!X\o-!sf#4!!!91!=/l0#QY8<!<EN2$4%%G#RUS6!WWQ3#R185!WW3+!!*?+#QY&2
$ipG9!<<Q5!X8o;"p+u5!WW3)!X/T)!Wiu?!W`9%"onZ-#7L_@!=Ai/&-Dt7!!*'$!X8ZN!<NN4!!**&
$3L81#Qt20!<rT2!t>54$j-M4#QXo*!W`]0$N0r4#R1PC!t#5:!!`N6r;]7n!!WH.#QXo0"98N)!<<N.
!"Ar2!!*?0"p"f/!!N?,!sAW)$j$J4!=T&1!!WW5&-N=@!XJo5#QOr,$4R"A&cr4:#(?gZ!XJl4!t#,9
$4$h:$jZt;!<rl3!Wio;!"T,4!<EH-#QkA5!<N9/"p,&1$j$\=!!W]2"T\r4!XK28!<rN($3ghC!<<*#
":>/6%06J6#RCkK"9o,6#QXo*$3gV6!=T57$j-q@!!!$%$3pY7"q1J9!!ii4!!*N;!Y5>:"UG;4$3:83
!W`9'!=f#0+VG4b$jHnA!!*?,&-)n8!sAT*%gE+=#7LqH!<rN(#QP/0"tp&c!XT&2":>/0"p"o.$31D;
!=&l1$j$P9!!*9)&-2t<!!WW4"q1h="ptP?!=8Z3'*&%7!=T,6#S77G!=/]1!<`E*!<*$"#6"Wj$4$hA
!!!9)!=0#5#QOu3!s/H&%g*(A!!WK+#QXo*"9AZ8&dSRK$3L;5"p"u6!"&f/"p,,4!!3?3#QOi3#Rgn=
r;df<"pb58#R1e?"98H3":>>=!<`Q,!<rW.!"Jo.&H`FI!!*?.!=/Z*#QOi+!<rQ/#Qb21%06\4!d"bN
!=/]1$4$V7!=/Z,#RUbC"9Ac/#R1P8!rr?/"p>,3":,#4$4$n="9J].!<<3&!<<<(!!*?<#R(YC!<<H4
"To/="p#8B!!iT2$ip>2!"&]+$31),!!<3'!XT2@!=B)4%1iOE"p,&1$31)6!W`9b!t>G7#QY>8!<<*#
!!`c0!Xo&0!!!3)!rrZ8!!NQ4!=B)4!sf#7!rrN.$ig>0$31D7%13:?!!WH)"pG&,!WiB)!r`H@#7LeD
$jH\4!!*K0"pP)4$j-bJ$jm4<!"]PE!=B/6%0?_7%g)k=$3CG2!XJu>$jm7@!Y#>`"Te`."onc."pP&.
!=Al8!!WE(#R1;6"p"i2!WiK+!s8l7$3gS:!!EK)#Uf`[!<W<&#R1J5!W``:"pP&1#RCVD%0-D/"ptP7
"pP)5#QY,6!s&T(!!<9,"p+]'*!cTG#QOl2"ptD9"pbDB"Ul"E!<N<'$3ghA!!io5!!33&!!iT0!=&K.
,R4JS!rrE-!=/Z.#RUS4!<rT+!rrE'"pbG7!>#MB%0ch?!"&W).09MY!"&`-!s/Z.$3CP9!WW?(!<WN1
!s&o4$k*.<$4$Y:$3C5."p+f("<%=G!WiH-!<EB)#R:VB!<EN-!!<3'#S-n:!uD(E#RCG2!X8u@$3:bA
#R1P7"9Ai:!<N0"=pP<<!=o53$ip>6"UY;<":"o/!t#,2!=0#>"ptV?!<WT-":P8;!!ic/$3:>2!tPGA
$3gh=$3CY;!!!93!X&o3!s&H-!sSf,!W`B3!sf)6#QP&/":,>8rW36*%LNCI$8MYe!<<-+!W`Q8$4$V5
!Y5>9$3gV;"pb;7#Rg_8#Qk>:!<Wr=!<rQ6!WWQ3!<`W-&,lQ"!XK,7!<iN1!!WQ3$4$_>"p,26$jltG
!!<9,&-N%?":P8="qgtE!<<<(!Xo)8$31DA"qL_7!!WQ+!!3E1!t521!"9,6#\OJK"ptA2"p4u4$jZh=
!X8o3!W`E0!X\r/$ig;6!XAu8$31/4$j$V6"pb5:!X]#=!X/i0!<E0%#R1nE!!!?,"qCb;!<r`3!!WE'
"q1J5!=T/4!"B)9"U555!X92;!X9&8!X&E-'*\OC"pbJ9#Qt/8!rr?-"pG8>%=%sV!!WE(!!<Q.!<rf0
!!i]/!W`Q1"pPD9"T\l1"pb86!s/`1!"8l6%0QY>!=Ao2!<E0+"ptP;!!<90!<NT4!Wic8!sA]+#6Ou2
!!!')!<a#D!!NQ4!<rT0$j-S4!!33-!X8W4"p+i+$4$n;"9JT.!sf)8rWiN)#XeXp$3C82!s&T5!<r]/
!s&Q,!ser4"pb82#6=f5"p>#/!=T/:!!ic1"98c7!s8f0"ono/#QY22!<WN,!!WN-!"T;5!&aiX!XJu9
#mLA0!WW3+"UG89%1`F?":P;>"pbD?!!*?0!"9JL#QOl0!W`E0!=05:"To#3!t,5=!=Su0#RpbC!s\`)
!X8W*rWif7#R1V:!=]57!<*!5!rrB'$j[%A!WW6$!!3Z:$31D7#lO`U"p>29$4RFJ":PJD#Qk/5!WiW-
"p"`3!<N6,#R1>1!!iQ0"pG;6!=0,8!XK>9!"fD>!"&`0!X],5#Qt52!=0)@ErZ4@!"BPC$j$J7!<E03
#RUh=!!io9!<rT+!s/Z6!!30-!<<0,$4$V;$ipG6$31&3!<rT2#RUS<!sel-!XJu2!X8],!X8r:!WWH4
!Xf)2$jm+>!sS`2!!i]/!"9,7!!!9+!<rQ6$igJ3!<N<0$N:&2#QY/2"ono2#m^_B!Wi?-!=/c)!)We'
$4mIH#R1D@$3^\;&d&1>!=B):#QXu6"oo/>#Qk/5$3gP;!rr<("oo28!=/l0!!*'##Qk).#RUY7#64`+
"p=r6!!<<'!s\f5!<rN4rWWi6!!!*%"9Jc5!!!-&$4Zt=#RCD1!sT/7!!E?(&-Mk21'dsh%0uq>#R1D4
!WW3$!X8o3$jm+C!<N9'$j$M3!W`B'"p4l5!<N9+!"8rB!Wil:rWkdo!X8W+"p4l+":>/2!s&`7$3:D5
%0?P=!<rf6"p"o1!=T;:!"&u9"onu1!<rT-"p"o<!"9&3!=B#:%1!"G$5*UO"q1\A!<<B0#QY#3$474I
#lXi8"9Ac8!WW6(!=B#3"p+c*rWXJN!WW6$#R1A8#6G/5!<<6,!<WZ5$4$h9$jm1G!!W]0rW3cH!sAc-
$jmCD!!iQ)#R1P9#R(J9r<<6/rW!W9"on`2!WWW9!X8`/#QY22"Tf)5IKfcP!rr`:!!*?0!=/],!X],3
#RUb9%06SB#QbA<!"'&=!!WE1"p4r4!<iN)!s&Z3!WiB&$k!ID"p4l,#QOo,"onc,!!j#:"qM%J#QP25
#R1;:!=B)>!"'&C!<rT0!Ws&B#Qk83%0d"F#QXr.!=Af.!s/K*!Wi?&=p"d3#64r;!=Ai5!<EW1!X8o7
"p,,3!<WN-#R18>!sf;>#QYA7!seo/!!<6%"q1V<!s8N7":,2;%06S6"TSN3!!WW-!<rf0!XJf2!WrE&
!<<-#!!30(rW!$&!!*0#!#Ye;!X]#:#Qb86!sS`2!<rZ2!X8Z9":>bA3<06h":,#0!!iuA!s8f;"pPJ:
!"&]-$3gJ7!<Wi>!<iQ0$3:,,!XJc/!=Su7!=Sr1!<<B+#QY&,!!!B*!'LMj":P;8!=/l3!XK&7%1`F?
%13@F!<iW.!WW6*!!iT*!X8W.!s&f7!W`E*#R1G4!Y>A:!<W<1#RCG5IL6,^!Y>P=!<EW2!<E6'!<EN3
"UG)@#6kG<!<N6&!X8u;!sel/!rr`6!seo-"pb21!sSc5!!E<($k*+C$j$J;#Qt>;!WWE6!XJf-$3L\G
"pY>5"p"o4%fu_2#Qb8="pPD8"p,2;$3:PB!"T>:!<`Z.!!ic2!sf)2/cbqR!X9/9!=/Z0!=T#3!t5GB
!<E0$#QOi/!s&B+&-;h3"9A]0!=/r2!rrQ=rWWQ,"p"c*!!`E&'F4^D"p+i3!<W`2#Rgk:!WWW1!Wi9#
.KK_X!X]#0#Qb2=!sK,<!=B#2!sSf6!s&T.!<iK(!rrN2#R:bA!<E6&5lh/u$iph=!<NT6!W`B(!<`T2
#Qb24"oni9#QPA9!<<H9!!*E,"oni-!seu1!!!$$$j$J;"p+c0"q1b;"pbY9"qVCQ!<rf2"pP24!<<*%
!!W`.!>,G?!!*''#RUY7!<W`1#QOl,quM6H!X8W*!!3E5!Wrl9"9J]7!rrN4!!WW-!s/K'!!WQ5#6k51
!W``;!sel/"Uk_<!rr?%!X8i9#R1M8!!E96#QP&2%0?_8"p4r3!<iZ-%gE%7!X&N0%gi:;!WW3)!s&r=
#RUS<#R1PI!X9&6$31),#Qb&0"9\]1"p$%Q"p4o-$j-h@!rr`8"pPJE#QOl6#QbM>$4I1@!<<-0!=T#0
#6Ff2<!EF+!XoMB"9Ac/!Wi]5%fce<#m^h;!<rQ1"ptD6!s/`4"p5,5!Wi?'$jHe7!W`]1!<N6,!!iQ/
$j?\A"oo/=$igD7!=02:#S.(@#RCG8$k7Xg"pP)0&dSpL!<r`.&./L?#Qt>;":>22$4$hF!X],4"on`,
"pP22"ptP9%0cnC"onc-"p#,:"pb58!"&c7#Qb)/"q1M5$igP5!W`<2!X8u4"qLt@!<E0$!"&`,#RUS6
"ptA2$k*.D!!EQ-!<ET5":>>?&-*+>#Q]A_"pbeH!<E6(!!*0%"onW(&./I?!<rf1!!WW5&df$S"p5,:
"pP&-"p4l5!!!3'!W`K+"q:tM!<EN-!!iu9!sel-#QP&0$3gP=!t##0!!!$/!Wi?&!!362!<`i=!rrc1
$3:P9!s]#9"p>85!!WE)!!!*("p,&2!sX2["9JW3&./UF&-`IM"pb84"onu;!s/Z,$3:2.!!*3(#Qb8;
!!WE'#RUb9"p"c0#Rh.L&e#$L!!!-+!X8W*"p"f5!XJc+!XJu7#RV(O!<EB+"qM+C#QXo9$3U>7%1E7;
!!Wc;"TeZ.#RCP5"pbJ7!s8N-!<<3'":,tI$4R(A"q:S?!sT#3!=]A;%0HqJ!!3K1!<E6(rW,(d!rrE(
!WW<'!!395!!3H2#QY24"pY>@#QXr+!!3<*"ono;!WW6&!<`f>&c_n8&-`.:"onW)"pbS8!?V@G!t#&2
!X]2:!=];@!rrH)!!iT4!!Wc;!!WE/"p#MI%gi::"V:Y<":,29$31>3"98K1"pP/.!D<P"!!3Z2!=Su9
#QOi-%fl_4$jHb;!=]57#Qb2A$4$VB#Qau-!"TD@#RUnC!WrK2$jm"B"qLb8!WrE&!WWK+!WiQ5!=B)4
&e+a?'F"R=!sSc1!!WW/!<rW5"V;"D!X!3I"p4r5$3g\7!WWE)#QY28!!WK1!!!*%"qLtH#QtD8"p,59
!sel4"pbJ:$3^J3"p+l-#R(81$4$hA$ig>7#6kG>"p##4$31JC!"8i:!!3K-!XJu:"ptV>"on`-!!WH2
#QOo,!XK#0#S.FM!!*?,!!WE-"pFu8&csuo!<rZ4!<NZ8%1E[O$k31:"pP>5$3L;1!!WE-%0d"<"on]5
!!<Q8#Rg_8!=Ai3!!3-0"p"l+!=f;@!WrK("p+i5!W`9,!r`32$3:26$3U>9!seu9$jZk<rW!uB$3UP=
"9AZ7!X8`2%flb4"pPD?$k*+:!<NT."9p@\!"',9!X]28#QY><!!E<,!rrK*!YPS:#RUP;!<r`:&-`4;
"q1J9!!if.!)Eq+!<EB+"p"`)!!WE/!!<Z2!!*-$"9ni-$3C2.!W`Q4!sSr0!"Ar1!<N?'$j?n=!<`H2
#6G5:$igD5!!**0#R1_>!!!-+!sel/!=3uO!<<0'$j6h9%06P4!>#S=!<N9%!!3E7!WWE,"pb56!t5M@
!rr<,!"]/5!tkS>"p>8="p"i.!sS`*#QXr1!!j2A$3gY8!<<B*#QXr+$3CJ6#64c1"p"]."pb2;!!!E7
!=Ao0!XJf-!WW?,!Y5A7"pb50!Y,)/ILH2X"p+i5$4m7B"p"o2#RCJ6"p>,="pP/9"pP>=":>YA!<Wi:
!<Nf:$46h?!<E6%"9AT)#QY#5!!*?:#Qt>4!<N66$igD9!"B2B$3:P<!X8W,!t#)1#R1;4!!WK:!"&]8
"p#&>$4I"B$3L86"on])"9SW.!W`<+1B@R\#Rgn=!<<3'!!j)>$j6b8!!iQ/$318=!XJc5!WWZ1#QOl+
!!WW/#QY,2!tPAB$N:)Y"p>26!!E?'#R187!!3E+"T\u<"p4u0$3LA1!!3K3"p"o4#RChO!<<B/!!N9'
('4gE!!EB*"ptVA!X],5"p"]0!!!H1!W`]0rX';?"pP,9"q1J4!!3K7"p4l-!sB&3$5*UK$3:57!Wi?4
"pP)8"ptbB!<*0q!s/Z2#QOi+$ip>3!=0#:#QP,=$j$V5#6Fr4#QtD5#Qb>=!!!E-"pbJ9$jH_6"ptV9
#RCD1!WrW.!W`E2"onZ:$ipP5!<<0%IK0Wa#QOl2!!3-##n6tD$j$P7#Rgb="ptG<"9J]4!!NQ4!WiB)
!=&r5$4I+G#6k//!!!$(!WW30!<NN6$3C>1$jm1=!<EH,"p,2=!!3T2#6G>7"pbV>$ige="U"i-"p=o,
#Qt,;!!<33#R1VF#6bA;!Xo):!<iN5FoVdM!s&B+"p"u0"9\]5&dAON!<W?,"pbJC!s8u6$3181"q1P7
!s])=!X8u3$3C53!W`K.":,85!X8c."on`*#QtJ8!<N<'!"B89!XA`-!X8Z*#QOr9"p"i4$jH_6!t##0
"q1PA!WiW4!!*K;!Y5PBrW<9-!=/f.)Z]s@!seo/!!3-/"UY50!W`B-!XJl4!s&B)#lXfE!s&Z7#RCG8
&d&1:$jm4?$3gS4!=&l2$ig_;"q(;/4U))j$j[+=!WW6%!t#V?!X\o2!s/f4"T\f-!W`W3"p+f4$3g_8
$31)2!!WN7"p,&1$3UG8$3181!s&UT!sf56$3^G2#Qk20$3LD8#RUtE"p=u.$3189!<NN-!=Al0"onW(
!WiH+!X8`2"p>&5!<<<*!=/Z/"pP/B!!WE/!!`]1%fl_=!!<W<!s&Z1!Xo/5!"&c5"onZ)!W`W/"9AK'
"pP&3#RUbC!X]87#Rg_6!=Au5!"9'\%0?_<!<WH/"9AK2#QOl+!sS`0%0ce7!XK,A#QY,0"ptP9$j?h9
!so)4!X8]1#R1V<!<rQ)#QkD:%13@F#QY,1$igJ;!!WN0!W`]6"q:P5%fu_D!XJl="pG,2$3pS?"onZ.
"on],"ptG:$3:J<!=&W,$3h(E#QY2i"p"`+#QXr3!!WW9%g;t6!X8W)!tPeA!s/Z4!!ic<%131A!=T/5
$4Hn=$k*.I&deU?#QY#7r<>Rq"pteJ$jmLP!rrN.$jm">!<<-#":,/:%131E"p4l7!W`Q4!<EB/#R1;8
"9AN)"p,D>!<<<*#R:G3%1*ON":/cD#QP;6$ip>2!=Au6$k3CA!Wi?2$ig80!rrT<"p+i8"ptG6!<NZ:
"pG>8!!33&$k*CG#6Fr4"pb8>#QtA>!!3T:!=Ai3"p#&:!=B)5!rr<."pbP9!<rW,%0H\4!sf)3!s/Q0
$3ge8!"T>>!WWE+!<rZ6!sel9$j8d'!rrE3!!iZ>!<<B2!WWE1!"&u3%06_=!!**&!=/r2#QP&/$3185
$4$_B"T\T(#Rh.O!rrT4$3CJ6!!*?(!>beH#QY87$j[%;"9ni+#QY,0!<N9/!=8Z,+9DuV#QP/3"9JQ/
#lt;=%1!%?!<W?'#QP#.!WrK(%0e6]#R(2;!WWQ3!X]#8!<EN-$46tG&-<1@!W`W6!s&E8!t#&1!<rlA
!WEEG!!WT/$3C8/"pb58$46b7!=B/8!s&`7#Rq%H$2k&5#QkM<$3:PBrVup-r<=AO!<ru=!!WK*!W`K2
#RUP;!<E0+"9\o2#lt5;#QP#6IKKc_!WrW2#QOl4!W`9%#Qk>>"p5&1!s8`1!s&N*$31&3!<`K+!!30*
%0cn8!s&T2!"T&0!tkqH&deX?#Qk&2!sAT)!s&N,$ig\C#Qt59"pkJ6!!i`/$j$G1$j-P2#QXo."pP/8
%g)h8$jm1>!s/K1%1!"@#QOi1IL6Df!!EK5"p"]($jm1I"pG&.!<<<*$31>C#QOi6!!!$(!<E6%#Qk,6
!X/i3#RCJ9#mLY8!<N9(#R1;6#QXu4!sT/8!!WH/"pP>?$5*C?!X8o7!!!?.!"&]5#RCD9!t5A8"q1M6
!!EW3$jm%;#RUb?#QbM=!WWE*IKKTN!sf,6!!iW3!X8Z4!<<0,"p,;8!!EQ9$j$V?!!**0!!3-+!<<*(
$k31@$3:D<!!ii6!!`c6#QOl.#mgV=!WWQ3!<E0$!!*'%$31J7!t##.!<ET0!!EW7#RUb>!XJf4!YPh?
!"T>>!W`H3!=TA;#R180!!!'#$O-S3!XSi-!"T86!r`4=!s/W+!!Wl:!Wri2"ptD3!"&`,"p+f*!<<]4
$ig\C!sSf,!<r`1"p,&9!!30%"p"]+!!*?2$3:D4"qUe;!W`9'!!!'#"pbP;"9S],"onW7%0-D5"p"`+
#Qau-"q:b:!Wil<"p4u6!Wiu7IL6\i$4Ht;$jHb6%13(G!XAf7!!3?1!s/K)$3CJ7$3LP>$k*7@!!*9(
$jZkB#R1V9$3CJ?"ptP="9ni,$4%%L!<EN5#R1A5#R1J6#QP&5!!WK*%13.D"p"]5#QY#0"qL_8":,#:
#QXr+#RU\?!=T/7!!30&"UP/7IL#oS"p"c.!rr`8"ono;!tPG<!!*E.!!<i<!!iQ*#Qb29"pk>5"onc.
#Qb#1!!EK-$3:D4!X8o4%1ELH$j$G8!sJf-!"&i;!sT#<":YG=!sT#3!"9&=!"&f/"pbDA!!*3(!!WE(
"V1\;%0d":"UG/8!<E0-!<rW5FoV^N"T\Z-"p"o8!<E`;"pb51"pY>4$j@%K"pb;<!!!$""98N(!=Ao5
"p"o.$3h+C#R:\@!<rf=!!*?4%06S5$3^G1$3CA<!Xo&0!<WT7!"&`6&.AOG!"&].!WrE*#R(>2"T\Z,
#R1_>$3LP7"U##3r;m'*!t##:!!*0%!<EB1!WW3'"9&LB!<rN(!Wrc:!=/l6!=B>E!!*?6!X8W3#Rg\5
!<NE1!s/K-$3^V<!<WE)!s&H.!!io4#S.=D!"oJ<"9Ai8!=]&<!sJl/#QXu,%g;q9#QY)9$ipV6$4$V6
!!*-*!s/uB!!*?4%1*(A!s&`G!<<H,!!ii3!<rN*!W`<)#QkD7$47=M#lO`O!rr?-"pb2<"onW3#R:>6
!=B/7#Qb>6!=/f.$46h=!=/l1!sSi0!<*<Q"pP)>"oni0!XK5?$3:S9%gW@F!XK&9&e+gH!WWK3!!!'/
"9o,3*rlWW!"9#4!XB/:!<`Z/%0d@J$O-e=$46tA%0-A6"9&K:$4HqE#Qt,.!"8i.!!!$*!X8N(('"IJ
"p5&2"onu1!WWH*"UkY:$3ghHrWXkR$3gP;"onc+!s&`/"pbJ7!!W]<%gE(;"pPMB!t#;>!"&o1!XJc7
#mp]-!rrN,!!`T8&dA[F$jZh6"p"o."98l8!WiQ5"onW-!!Wc9"pb89!<WT2!=0)6$4I(F"p+f0!<EH-
!!ic9!=]&8!"9&9!X]89"p=i)+U.oP!<rc1!XJi:$3gJ7!<N6*!X\r4#RUnC!X8`."oo,3"p#8DrWiT+
#Qb$?$3:,-!s&f;!X&K-#Qb>7$3:55%gWLB!!3Q0$3U>5&eG6Q!"&c-"pb84$31&-$3UPA!<W<-$jmCK
"p"]*$kWIF!WrE&#Qb#4%0ck>":P87!rrE("ptb>!<`E'!s&B(#QP,9"9&Q,!!N9$%0cn="p>85!<<<,
$4d/O!X8]3"pPMB!<E`9!X\o0#RCh>"onu2$4Hq8"q;(M!X\o?!=/Z*$k*+A!"&o;!<rf6!=0#D&ci"8
#Rph@!X8i0#QP23!<NN.$4$e8!=/i3!!!9+#Qt25!"'&;!sf/>!=])4!!`E&&IJ^J#QY85!<<-#"T\f7
$3:E:$4$tM!X&Q/!"&`7":,)8$jZhA!=/l3"q1MC&-)\7%06G0#Qk,."p"].$ipM3!Wri2!=];:!rrN2
#QP&/$ipJ?$3LA6!WiB0!WrW-&c_n5$3LJ4!=0)8rWXGO!<`H4":P;>#Rg\9!<rN)!"Ar3!"&f4!WWW3
!s8UR!=/l0%0H_<!X&T."98E-!rrZ0"ptbF%0-e<!sel.%flY1!s&`7#R1>1#R1;6"pbJ8!t5/4"p"f1
!Wr]6!s&E0#Qk22$jZq9!<io5!"&o3#lkD:"pb50"98c0"pP>5$jZk6&d&.:!=0,C!XK>C$4I+A!sT/:
!sSgU#RCS8!W`K4#QkD="U5D<"oo&="q1J5$4$t@$3gb:"p"i,"Tec/#QOr,!sel."TSu;!XJc1!X&N7
#Qb89!<rW+!WrE3$3LA=!X]8=!<<-)#QP&4#R1>2"p"`)"p,,4!<rT4"p#&?"p"`/!=/l0$3:SA#QY2:
!!<4M!tkeH!<E6-!!*'(!=])9!<<36!sf#:!=Sr."9AQ.$ip>8!!*'(":>D8%0Q_6#RCkJ!Xo&;%0-A0
"on`*!<<<)"pFu8%fcS8#Qb29!sf)>!Wi?("p"u8"q:tA#R1A:!!WK3!s9)?!t#A;!sSc5!WWK1"oni:
!rrO;"U##3$jHt;#R1G5!"92=%1NRC$4$\6"qh+K!X\u3#QY,2!<E0%$jm1I!WW3-":kqB#RUhC"q1M:
!X&c0#QY22"q1\E#R1D;!sSf.!sT;B!W`B("9AZ+!=B8?!<rN($31P7!#,\J$O-\?$3gb9!=/Z6"p"o8
#RCJg!!i]5$3:,-!<Wc3$ig89"on]1!sSc-!!3K/$3UD1!!<<1$igS6!<<-%%131G"qgnA!WE',!X&N*
#QP,4%0-_8rWY:`!=/r4$j$G3!<r`.!W`Q9#QP29#QY88!!3K3!WWE)"9no5!!**4!<rl:"p"](!XB&:
$4Hra":+u1#RCJ7"pP>6!!Wc7!WrE,!<<H2!!3?+!<<-/!s&B1!!*K2#R1S@!!**)"q1P5!Wrl4$3:D5
%fub?!!WE)!s&E2!"oJ?!W`K2#Qk21!XK#8$j$J9!<N9%#R1;:#QOl/"onZ-!=/c/#QXu6"9T&4!Wi?+
!"&`N$4$n;!X&f6!X8`2!!<6)!X8u3!<EB/!t#&>"p"`3!=],0#Zq-:#R1;4$31>7#Qk,;#RCbC!WW3$
!XJf8%g*.C"on]*!WrE2"onZ*":,87!seu1!<rf6#QXu4"qgqF!!<E*"U5)8$3CJ5":,8;"pb29"p#&2
"9S]8!!!*$!W`T7$4$Y5$j@1@!GM`B!=/c5!!ic9#QP,1"ptG6!X];9$3UVF#Qk/3!Wi?1!"&r3!s&E,
!=/l1#R:M5"pYP>"p5&1$3C54!X],4!!WQ7!!Wl6#S@%>#64i5$j-P5!!WZ4$3^hB#Qau8!X\r4!>5A:
rWjeN"9JQ-!W`B)!!*0&#Qt/.$46n9"p#&:$46b8#QOo3!<ET/!<*0a!"&i;$k34;%g)k8!!!**!!*E0
&-3%<#R1;0":Y\B!!!$#$igA0!WW9&!WW<.!<E0$!"9&6!X8`,rWi`;"p"`3!s&Q("q(D2#QtD5!s8Q)
!"=;^!!<31"p=o-"p#,<!WW91!"oPC$3189!sAW-#QY,3!X]89!<<B*"p+c)"98W7$4$\5"U5;?!<NN-
"pbJ8$jmLH$jZh6$j$\C"pbP:"9Ac0"oni0"onW1"on`4!Wri:"p524#QXr/!!N?'$3:/7!!iT*!W`W.
"os)R!W`]6#RCG2"p"u:!!io9!!WE/"on`+$3UA0"p>#4#Qau/!!*'(#SI=A":,#:$3gJ7$31/.!WiB)
!Xo,@"p+i/!X8o1"p+c/#Qt,.!!**#"onW)%g*"9"9\`*#Qb8;"9Ai2#R189!XAf-!=TP@%gWRH#QY,6
!!%6L$j[%<!W`]6!XK>;$j[%<#R:V="p=u7!=/`,!<<0&!<E0#$j$V?$3UV?$k*+9!sAl8!"&`8#QY22
"p5,:"qgq;$31>5"p+c/!"8o5!<<<(!<NN4$47=E#RCG:"U4u7#Qk>6!<<B-!!Wc2$igA:"pP/1rW3-,
"U8-1"TSQ+$46h7!WrK($ipP5$ig;6!t#;>!!ic0$3C;1"pbJ=!X\r6!!WK+!=Ao0!Y#/1#QP&/!=]J>
"on]*!<<--"on]1!W`91!!iW;!!*-,"pbP9!>9n~>

%%EndBinary
grestore
np
.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
457.784 42.0787 mo
457.784 45.9688 li
431.851 42.0787 mo
431.851 45.9688 li
405.918 42.0787 mo
405.918 45.9688 li
379.984 42.0787 mo
379.984 45.9688 li
354.051 42.0787 mo
354.051 45.9688 li
328.118 42.0787 mo
328.118 45.9688 li
302.184 42.0787 mo
302.184 45.9688 li
276.251 42.0787 mo
276.251 45.9688 li
250.318 42.0787 mo
250.318 45.9688 li
224.384 42.0787 mo
224.384 45.9688 li
198.451 42.0787 mo
198.451 45.9688 li
172.518 42.0787 mo
172.518 45.9688 li
146.584 42.0787 mo
146.584 45.9688 li
120.651 42.0787 mo
120.651 45.9688 li
94.7177 42.0787 mo
94.7177 45.9688 li
71.3777 42.0787 mo
71.3777 45.9688 li
457.784 385.079 mo
457.784 381.189 li
431.851 385.079 mo
431.851 381.189 li
405.918 385.079 mo
405.918 381.189 li
379.984 385.079 mo
379.984 381.189 li
354.051 385.079 mo
354.051 381.189 li
328.118 385.079 mo
328.118 381.189 li
302.184 385.079 mo
302.184 381.189 li
276.251 385.079 mo
276.251 381.189 li
250.318 385.079 mo
250.318 381.189 li
224.384 385.079 mo
224.384 381.189 li
198.451 385.079 mo
198.451 381.189 li
172.518 385.079 mo
172.518 381.189 li
146.584 385.079 mo
146.584 381.189 li
120.651 385.079 mo
120.651 381.189 li
94.7177 385.079 mo
94.7177 381.189 li
71.3777 385.079 mo
71.3777 381.189 li
70.0807 42.0787 mo
459.081 42.0787 li
70.0807 385.079 mo
459.081 385.079 li
1 /1 /CSD get_res sepcs
.851 sep
@
.625635 .527977 .517327 .50103 cmyk
%ADOBeginSubsetFont: FAAAAA+Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /FAAAAA+Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000036c6670676d000000000000049800000a1d
676c7966600a545400005ebc000015706865616493bba6af00000eb80000
0036686865610000000000000ef000000024686d74780000000000000f14
000022546c6f636100b3b4a000003168000022586d617870000000000000
53c0000000206e616d6500000000000053e00000070c7072657000000000
00005aec000003cf67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a40292a292827262524232221201f1e1d1c1b1a1918171615
14131211100d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b0004361
7d6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2c20b0032552582359212d2c69b04061b0008b
0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0112b
b0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458cb0
172344b0177ae5182d2cb002254661658a46b040608b482d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019236a4445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005258b21a401a4523614459b0005058b219401945236144592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442d2c4569b014b0324b505821b0205961442db800
2b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db8002f2c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800302c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800312c2020456944b001
602020457d691844b001602db800322cb800312a2db800332c4b20b00326
5358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326
53582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a2359
20b80003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db800342c4b535845441b2121592db800352c4bb80009
5058b101018e59b801ff85b800441db9000900035f5e2db800362c202045
6944b001602db800372cb800362a212db800382c2046b003254652582359
208a208a49648a204620686164b004254620686164525823658a592f20b0
0053586920b000545821b040591b6920b000545821b0406559593a2db800
392c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b212120
45b0c05058b0c0441b2159592db8003b2c2020456944b001602020457d69
1844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b0801bb0
40598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801
008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800032653
58b0032545b8018050582321b8018023211bb003254523212321591b2159
442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800402c2020456944b001602d
b800412cb800402a212db800422c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db800432c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
00442c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db800452c2020456944b001602020457d691844b001602d
b800462cb800452a2db800472c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db800482c
4b535845441b2121592db800492c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db8004a2c2020456944b001602db8004b2cb800
4a2a212db8004c2c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db8004d2c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db8004f2c2020456944b001602020457d691844b001602db800502cb800
4f2a2db800512c4b20b003265358b0801bb040598a8a20b0032653582321
b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653
582321b801408a8a1b8a235920b80003265358b0032545b8018050582321
b8018023211bb003254523212321591b2159442db800522c4b535845441b
2121592db800532c4bb800095058b101018e59b801ff85b800441db90009
00035f5e2db800542c2020456944b001602db800552cb800542a212db800
562c2046b003254652582359208a208a49648a204620686164b004254620
686164525823658a592f20b00053586920b000545821b040591b6920b000
545821b0406559593a2db800572c2046b00425465258238a592046206a61
64b0042546206a61645258238a592ffd2db800582c4b20b0032650585158
b080441bb04044591b21212045b0c05058b0c0441b2159592db800592c20
20456944b001602020457d691844b001602db8005a2cb800592a2db8005b
2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a
235920b0032653582321b800c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db8005c2c4b535845441b2121592d000000000100000000000016d16761
5f0f3cf500110800000000005f4d8f0000000000d154cd90f865fc270b91
08f9000000090001000100000000000100000629fe2900000c01f865fced
0b9100010000000000000000000000000000089505120042000000000239
000002390000023900ed02d700520473000004730040071d004205560059
0187009c02aa008e02aa0044031d004e04ac005c023900aa02aa00550239
00af0239000004730040047300c404730040047300310473003404730042
0473004d0473004b0473004204730049023900e3023900e304ac001c04ac
005c04ac001c0473009c081f00e10556001e0556009705c7005a05c700a5
055600af04e300af0639006305c700a1023900c9040000230556009c0473
009c06aa009705c7009c06390050055600af0639005005c700b405560060
04e3002105c700aa05560034078d00250556002a0556002a04e3002f0239
00800239ffbb0239002f03c100780473000002aa00260473005204730076
0400003b04730038047300480239001c0473003d0473008401c7008401c7
ffda0400008001c7008906aa0084047300840473003b047300760473003c
02aa00890400004202390017047300800400000b05c700120400000b0400
00150400003402acffd50214009002ac002a04ac00120556001e0556001e
05c7005a055600af05c7009c0639005005c700aa04730052047300520473
00520473005204730052047300520400003b047300480473004804730048
0473004802390067023900080239000002390025047300840473003b0473
003b0473003b0473003b0473003b04730080047300800473008004730080
047300500333006f04730068047300380473004b02cd0095044cfff504e3
00c705e5001505e50012080000ed02aa008a02aa00520464005c08000010
0639004205b4002a0464005c0464005a0464005c0473ffe1049cffb403f4
006a05b400280696001c0464002f0231ff7902f6003b02ec00310625005e
071d004904e3005c04e300ba02aa00e804ac005c0464ffef047300280464
005c04e50071047300c2047300c2080000ed023900000556001e0556001e
0639005008000049078d00470473fffb080000f102aa004e02aa004e01c7
008401c700aa0464005c03f40042040000150556002a0156feaa05f40060
02aa00b402aa00aa0400001c0400001c047300500239009701c700aa02aa
004e0800000e0556001e055600af0556001e055600af055600af0239006b
0239fff902390020023900020639005006390050065200690639005005c7
00aa05c700aa05c700aa023900bd02aa002a02aafff702aa001502aa0019
02aa00f702aa008402aa007902aaffff02aa00a102aa002a0473ffe801c7
ffd7055600600400004204e3002f040000340214009005c700210473003d
0556002a04000015055600800473008004ac005c04ac007402aa005702aa
000b02aa000706ac005a06ac00a306ac004b04730000063900630473003d
023900c9055600600400004205c7005a0400003b05c7005a0400003b0473
00380556001e047300520556001e047300520556001e0473005205c7005a
0400003b05c7005a0400003b05c700a505480038055600af047300480556
00af04730048055600af04730048055600af04730048055600af04730048
063900630473003d063900630473003d063900630473003d0473003d05c7
00a10473008405c700350473003e038f00690371004403330059031f0065
0239003501c7ffdf063900c9038e00840400002301c7ffa3055600320400
fff10473009c021f00830473009c01c7000c0473009c021a004e0473009c
027b008905c7009c0473008405c7002a0473000a05c7009c047300840473
000e063900500473003b063900500473003b063900500473003b05c700b4
02aa008905c7004902aa001705c700b402aa004205560060040000420556
00600400004204e300210239001704e3002102e1001704e30021028fffe2
05c700aa0473008005c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080078d002505c700120556002a
0400001504e3002f0400003404e3002f04000034055600600400004204e3
0021023900170473004b0000fcfc0000fcfc0000fc9c0000fc680000fc86
0000fc8a0000fd690000fcc40000fcf60000fc700000fc9c0000fd5b0000
fcea0000fd120000fc9105c70021063900630473003d0473009c01c70089
0556009c0400008005c7009c0473008405c700b402aa008901aaffdb0237
00e102aa005501c7ffda040000800239001c04730048047300480400003a
047300510000fd3c0000fc660000fc8a0239fffb0239fffb05c7009c0473
00840000fcc4056d0024054c00980556009804270098059c002505560098
07f0000a0554004505c7009805c7009805560098057e002506aa009805c7
00980639005005c700980556009805c7005004e3001d0556002f06d80041
0556002505db009805360060078d009807a1009806aa001d070900980536
009805c700640800009805b7006a04730056047300480462008703390087
04d9001c04730050063d00170400003304ab008704ab0087046200870498
001b055400870473008704730048047300870473007d0400004804000033
0400001706a800460400001404910087044e005c063900870657008704e3
001b05c7008703ff00870414002f06390087047700500556009804730050
0427009803390087023900ba01c700870400002305c70050040000480239
001d020300290800002506c3001b07e10098067c008701c7ffdd05560062
0639004e0473001b0556009804620087040000480617001b0473001b0556
002f0400001705c700980473008704730098031d00870000fd5b0000fd5b
0000fd5b0000fd5b0000fc700000fd930000fd2a0000fc8a0000fcfc0000
fcfc0000fc860000fd690000fcc40000fcf60000fd930000fc9c0000fc9c
0000fc8a0000fc8a0000fc680000fc860000fc660000fc680000fc860000
fc660000fc660000fd500000fc660000fd5b0000fc8a0000fc8d0000fd2a
000000000239001b0473008306aa008302aa008806aa008302aa008902aa
0088042b0052042b005302020087033afffd02390017023900170400000a
05c70011040000140473009c0473009d0473009c0400008004b2003904b2
003905c7005905c7002104890049055600af055600600400004204980039
06e600aa05950080060a0052021400b6037300b6023900c3048c002b0400
003b0134005102aa00c102aa00c20b06000e055600ed029600ed02aa004e
01c700aa02aa0055044cfff5042f00c1042f00c2056500c1056500c202aa
0055029600ed02aa0055080000f102d500a4011d00000000000000000000
000000000000000000000000000000000000000002390000023900000239
000002390000023900000239000002390000023900000239000002390000
00000000000000000000000000000000011d0000008f000002aafff70370
00b60473009c02aa005502aa0006044c0072044c00730556001e04e300ae
04730048071c00500568003b0000fd5e0000fd5e0000fd5e0000fd5e0000
fcc90000fcd20000fd980000fccd0000fcef0000fce10000fcd90000fcec
0000fc5e0000fd440000fd4a0000fccf0000fcd10000fc860000fc910000
fcc10000fcc10000fcc10000fcc20000fcc20000fc8a01550061027b0061
0155006101550061046400320464002b03f4002d03f4002f05b4011305b4
00280231006b0231fe830464ff330464ffef0464002b0464002d08fa006f
0816006f0556009c023900c9047200c906ab00c9078f00c905560034078f
003409c800340c010034078f00c90556002a078f002a09c8002a0473009c
05c7005a05c700a506aa009701c70084038e00840555008405c700840400
000b05c7000b078e000b0955000b05c700840400000b05c7000b078e000b
01c700890400003b0473003806aa008409e2007408c1004f07db003807da
006b05a7007102f7005808e7007106f0006b05a100530556001e04730052
0239001e0239ffff063900500473003b05c700aa0473008005c700aa0473
008005c700aa0473008005c700aa0473008005c700aa047300800556001e
047300520556001e0473005208000010071d0049063900630473003d0556
009c04000080063900500473003b063900500473003b01c7ffbe09cd0054
08fc006f07fb00380639006305c7009c047300840556001e047300520800
0010071d00490639004204e3005c0556001e047300520556001e04730052
055600af04730048055600af047300480239ff7101c7ff350239fff801c7
ffaa063900500473003b063900500473003b05c700b402aaffd605c700b4
02aa004f05c700aa0473008005c700aa0473008005c700a1047300840556
001e04730052055600af04730048063900500473003b063900500473003b
063900500473003b063900500473003b0556002a0400001502aa004e0239
00c90556001e047300520556009704730076055600970473007605560097
0473007605c7005a0400003b05c700a50473003805c700a50473003805c7
00a50473003805c700a50473003805c700a504730038055600af04730048
055600af04730048055600af04730048055600af04730048055600af0473
004804e300af0239001c063900630473003d05c700a10473008405c700a1
0473008405c700a10473008405c700390473001b05c700a1047300840239
ffec01c7ff9e02390027023900160556009c040000800556009c04000080
0556009c040000800473009c01c700890473009c01c7ff9d0473009c01c7
ffb50473009c01c7ffc006aa009706aa008406aa009706aa008406aa0097
06aa008405c7009c0473008405c7009c0473008405c7009c0473008405c7
009c04730084063900500473003b063900500473003b063900500473003b
063900500473003b055600af04730076055600af0473007605c700b402aa
008905c700b402aa008305c700b402aa004a05c700b402aa001805560060
040000420556006004000042055600600400004205560060040000420556
00600400004204e300210239001704e300210239001704e300210239ffe2
04e300210239ffe705c700aa0473008005c700aa0473008005c700aa0473
008005c700aa0473008005c700aa04730080055600340400000b05560034
0400000b078d002505c70012078d002505c70012078d002505c70012078d
002505c70012078d002505c700120556002a0400000b0556002a0400000b
0556002a0400001504e3002f0400003404e3002f0400003404e3002f0400
0034047300840239001005c70012040000150239001c0556001e04730052
0556001e047300520556001e047300520556001e0473ffcb0556001e0473
00520556001e047300520556001e047300520556001e047300520556001e
047300520556001e047300520556001e047300520556001e047300520556
00af04730048055600af04730048055600af04730048055600af04730048
0556008c0473fff0055600af04730048055600af04730048055600af0473
0048023900ae02390099023900c701c70084063900500473003b06390050
0473003b063900500473003b063900500473ffd8063900500473003b0639
00500473003b063900500473003b071c00500568003b071c00500568003b
071c00500568003b071c00500568003b071c00500568003b05c700aa0473
008005c700aa0473008006e600aa0595008006e600aa0595008006e600aa
0595008006e600aa0595008006e600aa059500800556002a040000150556
002a040000150556002a040000150556002a04000015055600af04730048
055600af04730048056d007505df009604860052048600870723000a0589
0017056d002404860043056d002404860043056d00750486005208d90010
06dd0012054f0043040a003005df00960486008705df0096048600870655
00500486005205df006004120037056d001004120019056d001004120019
056d00100412001905ac005e047a0069074800980600008d08000010071d
004906aa009706aa008405c700b402aa004c0222ffc50556001b05c700c5
04e300d505c70029055600c504e3004805c700b006390071023900ba0556
00b00556002f071d00be05c700b004e300620639007105c700b0055600c5
04e3005804e1002f0556002905c700500558003d06a8007f063900640239
000a0556002904e3005a04e300b40473001204e3006804730077038d004a
04e3003b04e5008f023900b0047300b00473002504e300b8047300420400
007104e3006f04e300aa0473004c04e3006f0400003b04e300b805c70077
0473000e05c7008f0610006a0239000a04e300b80239009a0222000b0000
fd19023900b0016c0088016c00880000fcfc0000fcfc016c008802ca001a
02b5001a03050088031200880222002e0222002f031e00880362006f0333
00880362006f0735007f0625005e0639ffef01c7008401c700aa047200ed
06ac009c06ac00ed04730048047300480556001e04730052047300520556
00af04730048055600af04730048055600af047300480239fff00239ffdb
01c70079063900500473003b063900500473003b063900500473003b0556
00600400004205c700aa047300800400000b06e600aa0595008006020061
0473ffd605c7fff20473008406aa008403f0009c0460009a03a6005a03e9
000c02cf00020448005c06020061047300500655004e0486004c06390050
02aa001e07c6002407c6002408e6ffca0000f9200000fa0b0000fa0b0000
fa060000fa0606020061047300500655004e0486004c0222002f02b5001a
0473002504e3002f040000340473003b04d2008404dc00380473007204bd
003804d7003d0473008204d7008202220086078d00470387008802aa0086
04d2003c04b80032052b00320772003805600017043a001705ce001c04c2
008904b8008901a9008a01a9008a01c700aa0187007802aa000802aa00c1
02aa003a0187007802aa000802aa00c102aa003a01a9008a01a9008a02aa
001e02aafff7023a0042023a004100e4ffed015500450155004401c40044
02e400090200000b023a004e023a004f0256000e0256000e025600240256
002402aa00550256002e0256002e0256002e020000210200000600e30044
0256003a023a000902560024025600240256000e0256000e02aa0078023a
004f0000fccd0000fca20000fca20000fd6f0000fd6f0000fc490000fc49
0000fb9e0000fca20000fc490000fccd0000fcc20000fcc2000000000239
0000000000000000000000000000031d004e031d004e06da00c107c60024
023900e308e6009c07c60024071d00d00703001b02390080023900800000
00000000000000000000000000000000000000000000067b003a023a0020
0239001a02390021023a002702390025023a0021023900240256002e0155
002b0256002e0155004701550022023a0042023a0020023a006202390020
023900180239001a02390021023a002702390025023a0021023900240256
002e0155002b0256002e0155004701550022063c0011063900630473009c
0473009c0556002a06ab002806000030075600110473007207c8005806ac
005a05c7005a0556005904e500710696001c06ab003406ab0028055600af
04730076055600af0473007604e300020639005004c400a1024100230369
001105c7005002bb0023033afffd0473009c0473009c01c7002a01c7002a
0473003d04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a05c1005b05b3005b076c00880776008807760088078d0088
07ca006f07a0006f04730077047300770473007704730077047300770473
007706c2008806c200880874008808890088085b00880868008804e3003b
04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b0733
00880733008808e5008808fa008808cc008808d900880929006f0929006f
023900b0023900b002390041023900390239003d0239003d023900230239
002303a5008803a5008805570088056c0088053e0088054b0088059b006f
059b006f04e3006f04e3006f04e3006f04e3006f04e3006f04e3006f07a5
008807a5008809570088096c0088093e0088094b008804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b806c200880889
00880868008808b8006f0610006a0610006a0610006a0610006a0610006a
0610006a0610006a0610006a07910088079100880943008809580088092a
0088093700880987006f0987006f04e3005a04e3005a0473007704730077
04e3003b04e3003b023900b0023900b004e3006f04e3006f04e300b804e3
00b80610006a0610006a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a0811005b080c005b0991008809d80088097f
0088099b008809d3006f09ce006f04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b04e3003b04e3003b096c0088096c00880b1e00880b33
00880b0500880b1200880b62006f0b62006f0610006a0610006a0610006a
0610006a0610006a0610006a0610006a0610006a09ca008809ca00880b7c
00880b9100880b6300880b7000880bc0006f0bc0006f04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a0556001b0556001b0666
002e0661002f07a9001b04e3003b04e3003b04e3003b04e3003b04e3003b
06ac002e06a7002f06d2002e06ba002f083100b00239ffcf0239ffce0239
ffcc0239ffda0239ffdc0239ffc50239ffe10239ffee0343002e0348002f
04e300b804e300b804e300b804e300b804e300aa04e300aa04e300b804e3
00b8055600290556002906b1002e0713002f06c200880610006a0610006a
0610006a0610006a0610006a075a002e0789002f0792002e07a9002f0878
005e04e3005a0473007704e3003b023900b004e3006f04e300b80610006a
05d5007206a7002f06ba002f0348002f0789002f0713002f07a9002f0239
ffcb04e300b804ac002504ea011704f700a102f3001b02bb002304730025
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a0239ffd70239ffe40239ffd20239ffd70239ffdb0239ffdb0239
ffcd0239ffe00239ffc80239ffc30239ffdc0239ffdc0239ffd70239ffd7
0239ffd20239ffcd0239ffd20239ffd704e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b80666
002e0661002f05c1005b076c00880776008805b3005b07760088078d0088
0666002e0661002f05c1005b076c00880776008805b3005b07760088078d
00880343002e0348002f0348002f03a5008805570088053e008803a50088
056c0088054b00880343002e0348002f0348002f03a5008805570088053e
008803a50088056c0088054b008806b1002e0713002f0713002f06c20088
088900880868008806c20088088900880868008806b1002e0713002f0713
002f06c20088088900880868008806c20088088900880868008805c700b4
05c7005a0639005001c70020051d0029055600af05c700a10000fd310552
00680473003806390050047300480772005b0738004505e5001306ac003d
06ac003d06ac003a06ac003a066d001d04e3001b082200d005e1008a06a8
007f05c7008f0556001e0400000b079900d005cf008a04da003802ca0024
05d900160588003805c700b404730052031f000004da00a103eb00a10649
00a104cf00840556009c0400008004e3002f0400003408d9001406dd0030
054f0072040a0047056d00a50412007a05df00ac0486009105df00630412
003f04f8002b0412003a056d002e0412002405ac00ac047a007705ac00ac
047a00770556002a0556002a04d900bc037c009105ac00ac047a00770632
00a504df007a075f00ac059b00910556002a0556002a06fe0028054e0035
0748003a059400260748003a059400260772004805b3003805df00ac0486
009104730052054f00ac054f00ac06a8007f04dc005d0855004405e00026
05560025040000040556003404b6000b0400003b054f0072040a004705f1
0026049c0024023900bd056d002e04120024055600340556001e05c7005a
0400003b0473ffe804e3002101c7003e02bb002304e30021055600af0473
009c0473009c055600af047300480456002301c7ffda05c700aa01a90021
01a9002102aa003302aa003302aa003a02aaffe9023900e302aa003c02aa
003c057f005b04ac002504ac0074023900e304ac0025057c004c04ac0074
023900e3023900e3063900710412003f0412003f055600ae0473008005c7
005a06aa009705dd0097059b004605c7005a05c7005a05c7005a0400003b
0400003b0400003b0473003805ca003006c6002e063f002f031f001a062e
001904e900310488004502aa00be02aa00be02aa00be02aa00be0277003b
0277003b034b0000034b0000034b0000034b0000034b00000487001203f7
001e045e0054043600830436008302fd005d034f0012069900390655003e
052900300000f86506e1002204e9002001e0004b01e9004b015d0025015d
000a0199002a0198001202fb001703040017026700130257001202570012
02c8004b01d8000701d8000707e9003a097c004b0931004909310002013c
004b04570022058900050589000d04be00150442001801d8000701d80007
03fe003d03fe003d0404003a036f000b0467003c0000fb760000fcc10000
fc080000fc730000fc730000fa630000fce00000fe950000fc8e0000fc51
0000fa0b0000fc9f0465003604650022040100340401002407760017044c
001b03ea001d051a00340653003204c8003306c200880889008808680088
0556001b0556001b0239ffdf0239ffe105560029055600290404001505e5
001405e5001405e500140800ffeb0800ffeb080003b40800038c080003b4
0800038c0800ffe90800ffe9080003b40800038c0800ffe90800ffe90800
00000404001500e40042023a0029023a0024023a001e02000006023a0024
05c7005a0639006305c7005a047100220552002904e300210556001e04d0
002805c2004e04d9004e05c7005a06aa008405d0003106640037082d0035
0552006805520068039c003f0380003b039c003f0380003b039c00530381
003c039c00530381003c02eb005302e3005302e3005302e3005302eb0053
02eb000802e3000002e3000002e3000002eb000803630053036300530363
00530363005303630053027f00010330004503b2002603c3000b050b0031
069c00290390007f0000fc4f0000fc4f0000fc420000fc420000fc420000
fc420000fc010000fc010000fd4404650022040100240a3900500873003b
0436008304360083043600830329003a0329003a03550028050d00340329
005403290028032900330329003302f6003a02f6003a0329002b0143005e
02d7005b04bb005e0329005e0329002a02d70029032900270329002a0329
0054019400100329005b0373003704bb005e02d70008037800800329000d
0378004a04dc004d0632002a04be0033047300390473003b04e6003804e1
003a04fa0039076e003e0329000a0143005e01e400610329005b02d70008
037800800329000d037800790329000a042b005205c5001001c70084045e
0054070a002e06cb003504d6001b04fa001a02d8000d04e9001b0330000d
02d9000a02db000c01c700aa02aa004e01c700aa02aa004e01c700aa02aa
004e01c700aa02aa004e053d007a0708003b0310008f0574009708c00022
0473004002e00034047300400473003104730034047300420473004d0430
002b047300420473004903cc000903cc000903cc00090428005803b7006b
0497007104b0004f0797004a0418006a045a005505d5004c07a9004404bf
004b03e0003b0965004a03f900560419004e06ed004a0420003f04500050
06a3004a03f3004d0633006006b90047064000440419004b0667004503be
003e043d003d03d60052048400440412004a041600460497003903fa0058
0650002d03cd005e0560005604950032045e005503e9003e0462005406c2
0049044500f604d500b10473005e0473002f000000000000006c0000006c
0000006c0000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c000000a8
000000e8000000e8000001c40000021000000328000004800000051c0000
064400000770000008040000096800000a9400000a9400000a9400000a94
00000a9400000a9400000a9400000a9400000a9400000a9400000a940000
0a9400000a9400000a9400000a9400000a9400000a9400000a9400000a94
00000a9400000a9400000a9400000a9400000b4000000b4000000b400000
0b4000000b4000000b4000000b4000000b4000000b4000000b4000000b40
00000b4000000b4000000b4000000b4000000b4000000b4000000b400000
0b4000000c4400000c4400000dd800000e7000000e7000000e7000000ecc
00000ecc00000ecc00000ecc00000ecc00000f8400001074000011580000
1158000011e4000013a40000144400001444000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000001570000015700000
157000001570000015700000157000001570000015700000157000001570
000015700000157000001570000015700000157000010000089500920009
006b0007000200100010005d000007e80a1d000400010000003902b20001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f02160001000000000004000902350001
0000000000050008023e0001000000000006000902460001000000000007
0032024f0001000000000012000903f80001000000000100000904010001
0000000001010010040a0001000000000102000e041a0001000000000103
0014042800010000000001040012043c00010000000001050009044e0001
000000010007002f02810001000000020007003c02b00001000000030007
003002ec0001000000040007003a031c0001000000050007003603560001
0000000600070030038c0001000000070007003c03bc0003000104030002
000c01580003000104040002000600cc0003000104050002000e01760003
000104060002000c00e60003000104070002000c007c0003000104080002
000801920003000104090002000e006000030001040b0002001000f20003
0001040c0002000e006e00030001040d00020008019a00030001040e0002
000c01a20003000104100002001000a80003000104110002000a00880003
000104120002000600b80003000104130002001000980003000104140002
000c01020003000104150002000e010e0003000104160002000c00da0003
000104180002000c01c60003000104190002000e012a00030001041a0002
0012016400030001041b0002000e01d200030001041d0002000c01380003
0001041e00020008014400030001041f0002000c014c0003000104210002
000e01ae0003000104220002001201e000030001042a0002001801fe0003
000104390002000c01f200030001043e0002000a01bc0003000108040002
000600920003000108090002000e01840003000108160002000e011c0003
00010c010002000800d2000300010c0a0002000e00bea920313939302d32
303036204170706c6520436f6d707574657220496e632e20a92031393831
204c696e6f7479706520414720a920313939302d3931205479706520536f
6c7574696f6e7320496e632e48656c766574696361526567756c61720052
006500670075006c006100720043006f007500720061006e0074004e006f
0072006d0061006c30ec30ae30e530e930fc5e3889c44f53005200650067
0075006c006900650072005200650067006f006c006100720065c77cbc18
ccb40052006500670075006c006100726a196e969ad406390627062f064a
004e006f0072006d0061006c004e006f0072006d0061006c004e006f0072
006d00610061006c0069004e006f0072006d0061006c0052006500670075
006c006100720052006500670075006c00610072041e0431044b0447043d
044b0439004e006f0072006d0061006c0e1b0e010e150e34004e006f0072
006d0061006c004e006f0072006d0061006c0052006500670075006c0061
0072006e00690052006500670075006c006100720052006500670075006c
00610072039103c003bb03ac05e805d205d905dc004e006f0072006d00e1
006c0052006500670075006c0065007200420069006100730061004e006f
0072006d0061006c0052006500670075006c006100720417043204380447
04300439043d043804390928093f092f092e093f09240054006800f4006e
006700200074006801b01edd006e006748656c7665746963613b2031302e
30643465313b20323031352d30342d313648656c76657469636131302e30
6434653148656c76657469636148656c7665746963612069732061207265
67697374657265642074726164656d61726b206f66204c696e6f74797065
20414748656c7665746963612065737420756e65206d617271756520648e
706f738e65206465204c696e6f7479706520414748656c76657469636120
6973742065696e2065696e676574726167656e657320576172656e7a6569
6368656e20646572204c696e6f7479706520414748656c76657469636120
8f20756e206d61726368696f207265676973747261746f206469204c696e
6f7479706520414748656c7665746963612069732065656e206765726567
69737472656572642068616e64656c736d65726b2076616e204c696e6f74
79706520414748656c766574696361208a72206574742072656769737472
6572617420766172756d8a726b6520669a72204c696e6f74797065204147
48656c76657469636120657320756e61206d617263612072656769737472
616461206465204c696e6f7479706520414748656c766574696361206572
20657420726567697374726572657420766172656dbe726b652074696c68
bf72656e6465204c696e6f7479706520414748656c7665746963614c6967
617475726573436f6d6d6f6e204c69676174757265734e756d6265722053
706163696e6750726f706f7274696f6e616c204e756d626572734d6f6e6f
737061636564204e756d626572734e6f204368616e6765000000b800532b
b800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a001a6
00030069018b0079018b0089018b0099018b00040089018b0099018b00a9
018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b1fd2
b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f0064
001f01a50025017a00480028019ab3296c1f60410a01a9007001a9008001
a90003008001a9000101a9b21e321fbe012c00250401001f0126001e0401
b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1fc01d
9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f931e
b8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29961f
6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351de41f
2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb801254011
1f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1f
ba019b0025017ab349293896b8017bb348283125b8017a40364828962948
2725294c1f252946272729482756c80784075b07410732072b0728072607
21071b071408120810080e080c080a08080807b801acb23f1f06bb01ab00
3f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb7080408
0208000814b8ffe0b40000010014b801abb41000000100b801abb6061000
00010006b801adb300000100b801ad401f04000001000410000001001002
000001000200000001000002010802004a00b0018db806008516763f183f
123e113946443e113946443e113946443e113946443e113946443e113946
60443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff
1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a
66456523456023456560234560b08b766818b080622020b16a7045652345
20b003266062636820b003266165b070236544b06a234420b17666456523
4520b003266062636820b003266165b066236544b0762344b10066455458
b166406544b27640764523614459b36242725d4565234560234565602345
60b089766818b080622020b172424565234520b003266062636820b00326
6165b042236544b072234420b1625d4565234520b003266062636820b003
266165b05d236544b0622344b1005d455458b15d406544b2624062452361
44592b2b2b2b456953427374b8019a2045694b20b02853b049515a58b020
615944b801a620456944750000>
[5489 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> FAAAAA+Helvetica AddT42Char 
1 452 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>FAAAAA+Helvetica AddT42Char 
1 2708 51 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>FAAAAA+Helvetica AddT42Char 
1 2880 70 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>FAAAAA+Helvetica AddT42Char 
1 3140 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>FAAAAA+Helvetica AddT42Char 
1 3544 73 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>FAAAAA+Helvetica AddT42Char 
1 3696 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>FAAAAA+Helvetica AddT42Char 
1 3788 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>FAAAAA+Helvetica AddT42Char 
1 3972 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>FAAAAA+Helvetica AddT42Char 
1 4212 83 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>FAAAAA+Helvetica AddT42Char 
1 4440 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>FAAAAA+Helvetica AddT42Char 
1 4580 86 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>FAAAAA+Helvetica AddT42Char 
1 5028 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>FAAAAA+Helvetica AddT42Char 
1 5188 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>FAAAAA+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>FAAAAA+Helvetica AddT42Char 
FAAAAA+Helvetica /CharStrings get begin
/space 3 def
/one 20 def
/P 51 def
/c 70 def
/e 72 def
/f 73 def
/i 76 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/v 89 def
end
FAAAAA+Helvetica /Encoding get
dup 32 /space put
dup 49 /one put
dup 80 /P put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/GZXZLY+Helvetica /FAAAAA+Helvetica findfont ct_VMDictPut/GZXZLY+Helvetica*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 30{/.notdef}rp /P 18{/.notdef}rp /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]GZXZLY+Helvetica nfGZXZLY+Helvetica*1 [16 0 0 -16 0 0 ]msf172.518 431.083 mo(Proportion of ones in vector 1)[10.6721 5.32788 8.896 8.896 8.896 5.32788 4.448 3.552 8.896 8.896 4.448 8.89598 4.448 4.448 8.896 8.896 8.896 8 4.448 3.552 8.896 4.448 8 8.896 8 4.448 8.896 5.32788 4.448 0 ]xsh459.081 383.936 mo
455.191 383.936 li
459.081 361.069 mo
455.191 361.069 li
459.081 338.202 mo
455.191 338.202 li
459.081 315.336 mo
455.191 315.336 li
459.081 292.469 mo
455.191 292.469 li
459.081 269.602 mo
455.191 269.602 li
459.081 246.736 mo
455.191 246.736 li
459.081 223.869 mo
455.191 223.869 li
459.081 201.002 mo
455.191 201.002 li
459.081 178.136 mo
455.191 178.136 li
459.081 155.269 mo
455.191 155.269 li
459.081 132.402 mo
455.191 132.402 li
459.081 109.536 mo
455.191 109.536 li
459.081 86.6688 mo
455.191 86.6688 li
459.081 63.8018 mo
455.191 63.8018 li
459.081 43.2217 mo
455.191 43.2217 li
70.0807 383.936 mo
73.9707 383.936 li
70.0807 361.069 mo
73.9707 361.069 li
70.0807 338.202 mo
73.9707 338.202 li
70.0807 315.336 mo
73.9707 315.336 li
70.0807 292.469 mo
73.9707 292.469 li
70.0807 269.602 mo
73.9707 269.602 li
70.0807 246.736 mo
73.9707 246.736 li
70.0807 223.869 mo
73.9707 223.869 li
70.0807 201.002 mo
73.9707 201.002 li
70.0807 178.136 mo
73.9707 178.136 li
70.0807 155.269 mo
73.9707 155.269 li
70.0807 132.402 mo
73.9707 132.402 li
70.0807 109.536 mo
73.9707 109.536 li
70.0807 86.6688 mo
73.9707 86.6688 li
70.0807 63.8018 mo
73.9707 63.8018 li
70.0807 43.2217 mo
73.9707 43.2217 li
459.081 42.0787 mo
459.081 385.079 li
70.0807 42.0787 mo
70.0807 385.079 li
1 /1 /CSD get_res sepcs
.851 sep
@
.625635 .527977 .517327 .50103 cmyk
%ADOBeginSubsetFont: FAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GZXZLY+Helvetica gcheck setglobal} if
1 168 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>GZXZLY+Helvetica AddT42Char 
1 232 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>GZXZLY+Helvetica AddT42Char 
1 528 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>GZXZLY+Helvetica AddT42Char 
1 808 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>GZXZLY+Helvetica AddT42Char 
1 1152 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>GZXZLY+Helvetica AddT42Char 
1 1308 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>GZXZLY+Helvetica AddT42Char 
1 1604 25 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>GZXZLY+Helvetica AddT42Char 
1 1904 26 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>GZXZLY+Helvetica AddT42Char 
1 2052 27 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>GZXZLY+Helvetica AddT42Char 
1 2408 28 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>GZXZLY+Helvetica AddT42Char 
GZXZLY+Helvetica /CharStrings get begin
/period 17 def
/zero 19 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
end
GZXZLY+Helvetica /Encoding get
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GZXZLY+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 22{/.notdef}rp /P 18{/.notdef}rp /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]GZXZLY+Helvetica nfGZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf42.0801 67.2939 mo(0.01)[6.672 3.336 6.672 0 ]xsh42.0801 90.1779 mo(0.02)[6.672 3.336 6.672 0 ]xsh42.0801 113.05 mo(0.03)[6.672 3.336 6.672 0 ]xsh42.0801 135.91 mo(0.04)[6.672 3.336 6.672 0 ]xsh42.0801 158.77 mo(0.05)[6.672 3.336 6.672 0 ]xsh42.0801 181.642 mo(0.06)[6.672 3.336 6.672 0 ]xsh42.0801 204.514 mo(0.07)[6.672 3.336 6.672 0 ]xsh42.0801 227.386 mo(0.08)[6.672 3.336 6.672 0 ]xsh42.0801 250.258 mo(0.09)[6.672 3.336 6.672 0 ]xsh42.0801 273.118 mo(0.10)[6.672 3.336 6.672 0 ]xsh42.0801 295.99 mo(0.11)[6.672 3.336 6.672 0 ]xsh42.0801 318.862 mo(0.12)[6.672 3.336 6.672 0 ]xsh42.0801 341.71 mo(0.13)[6.672 3.336 6.672 0 ]xsh42.0801 364.582 mo(0.14)[6.672 3.336 6.672 0 ]xsh42.0801 387.466 mo(0.15)[6.672 3.336 6.672 0 ]xshGZXZLY+Helvetica*1 [0 -16 -16 0 0 0 ]msf28.0879 315.575 mo(Proportion of ones in vector 2)[-10.6721 -5.32788 -8.896 -8.896 -8.896 -5.32788 -4.448 -3.552 -8.896 -8.896 -4.448 -8.896 -4.448 -4.448 -8.896 -8.896 -8.896 -8 -4.448 -3.552 -8.896 -4.448 -8 -8.896 -8 -4.448 -8.896 -5.32788 -4.448 0 ]ysh497.081 385.079 mo
497.081 42.0787 li
477.081 385.079 mo
477.081 42.0787 li
477.081 42.0787 mo
497.081 42.0787 li
477.081 385.079 mo
497.081 385.079 li
1 /1 /CSD get_res sepcs
.851 sep
@
gsave
477.081 385.079 mo
497.081 385.079 li
497.081 42.078 li
cp
clp
477.081 385.079 mo
497.081 385.079 li
497.081 42.0787 li
477.081 42.0787 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 477.081 511.876 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
gsave
477.081 42.078 mo
477.081 385.079 li
497.081 42.078 li
cp
clp
477.081 385.079 mo
497.081 385.079 li
497.081 42.0787 li
477.081 42.0787 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 477.081 511.876 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
497.081 81.7287 mo
493.651 81.7287 li
497.081 126.424 mo
493.651 126.424 li
497.081 171.119 mo
493.651 171.119 li
497.081 215.814 mo
493.651 215.814 li
497.081 260.508 mo
493.651 260.508 li
497.081 305.203 mo
493.651 305.203 li
497.081 349.898 mo
493.651 349.898 li
497.081 385.079 mo
497.081 42.0787 li
@
.625635 .527977 .517327 .50103 cmyk
%ADOBeginSubsetFont: FAAAAA+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GZXZLY+Helvetica gcheck setglobal} if
1 108 16 <0001005501de024b029700030020400a002f03011a0500190405b80142b3
21ba48182b2b4ee410e6002f4ded3130132115215501f6fe0a0297b90000
>GZXZLY+Helvetica AddT42Char 
GZXZLY+Helvetica /CharStrings get begin
/hyphen 16 def
end
GZXZLY+Helvetica /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GZXZLY+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 22{/.notdef}rp /P 18{/.notdef}rp /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]GZXZLY+Helvetica nfGZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf500.885 353.388 mo(-3)[3.99591 0 ]xsh500.885 308.7 mo(-2)[3.99591 0 ]xsh500.885 264 mo(-1)[3.99591 0 ]xsh500.885 219.3 mo(0)sh500.885 174.6 mo(1)sh500.885 129.912 mo(2)sh500.885 85.2116 mo(3)sh498.409 36.8127 mo
498.409 36.7718 498.419 36.7298 498.44 36.6877 cv
500.315 34.8288 li
498.44 32.9538 li
498.419 32.9228 498.409 32.8858 498.409 32.8448 cv
498.409 32.7917 498.425 32.7478 498.456 32.7118 cv
498.487 32.6748 498.529 32.6568 498.581 32.6568 cv
498.623 32.6568 498.67 32.6778 498.722 32.7198 cv
500.581 34.5788 li
502.44 32.7198 li
502.493 32.6778 502.534 32.6568 502.565 32.6568 cv
502.618 32.6568 502.662 32.6748 502.698 32.7118 cv
502.735 32.7478 502.753 32.7917 502.753 32.8448 cv
502.753 32.8858 502.737 32.9228 502.706 32.9538 cv
500.831 34.8288 li
502.706 36.6877 li
502.737 36.7298 502.753 36.7718 502.753 36.8127 cv
502.753 36.8647 502.735 36.9088 502.698 36.9458 cv
502.662 36.9828 502.618 37.0008 502.565 37.0008 cv
502.524 37.0008 502.482 36.9798 502.44 36.9377 cv
500.581 35.0788 li
498.722 36.9377 li
498.68 36.9798 498.633 37.0008 498.581 37.0008 cv
498.529 37.0008 498.487 36.9828 498.456 36.9458 cv
498.425 36.9088 498.409 36.8647 498.409 36.8127 cv
1 /1 /CSD get_res sepcs
.851 sep
f
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf504.08 37.0751 mo(10)[6.672 0 ]xsh515.084 33.0792 mo(-3)[3.99591 0 ]xsh497.081 385.079 mo
497.081 42.0787 li
477.081 385.079 mo
477.081 42.0787 li
477.081 385.079 mo
497.081 385.079 li
477.081 42.0787 mo
497.081 42.0787 li
1 /1 /CSD get_res sepcs
.851 sep
@
497.081 42.0787 mo
497.081 42.0787 li
497.081 385.079 mo
497.081 385.079 li
477.081 42.0787 mo
477.081 42.0787 li
477.081 385.079 mo
477.081 385.079 li
1 /1 /CSD get_res sepcs
.8 sep
@
1006.61 44.162 mo
617.612 44.162 li
617.612 387.162 li
1006.61 387.162 li
cp
1 /1 /CSD get_res sepcs
0 sep
f
617.612 387.162 mo
1006.61 387.162 li
1006.61 44.1617 li
617.612 44.1617 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[388.999 0 0 343.001 617.612 509.793 ]ct
snap_to_device
<<
/T 1
/W 150 
/H 150 
/M[150 0 0 -150 0 150 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
mLfm>&eYch&eP`g&J>`G&Hr^X&J,Ndq%*N:q%*N:r=Jr=r=JW4#Rq:T%1NgW%1i:E!"Ac7!=TM<$j7"K
$k*UE%JpP6$N(>4$N:G8#RV"7')E1?')<.<&-*=<&H!%=%K$_;%1i@Grt#&;!t5VI%K-_7%K6bA$471M
$4I=M$Mk20$31A/$3CJ?$MOi+#5nf3"pbD;#R1;."onZ&"q1bA!!WE'"pP&3!!WH!&d&^Y&JG'T#7qIZ
&.oHb&,m+@%hSRJ!"Jo<r!``=$k3[F$jd@O$jmCM$jm=Mq[*</rX&r;$47%G#RCbE#R(J<#R1J=r!!3&
"pk24!!rK&rs&9!#lt#1!<<-$!!*0!!<N6%!<*#u!r`3+!WiB(!<N<)!rW`5&J>`S&c<1?&,m.>%g!1N
&,6V2$j7"H$4I@A$3gnG#RUnE#5\Z,$4->0!!*!&!<<>u!!`N*!W`<%!<Vurr;ls$quQm""8r<!!rrE#
!rrK'!s\r3!s8Z."9\W9!>,tC&HNFTrXer;!"Jo<rXB)@%1N^S%1E[F%/C8/#QP51#QY,8r!!0%#6"T'
"p+]'!!3'!!s&H(!;?Kp!Wi0"!!E3%rWE0%rW<9+!WrN+q?$g&!sA`)"98Pt"9\l1"9\o-"98W(&crXX
&c<1E&.]9_%1a!K%0-h9%K-\<$4I=M$N151$N:;4"pbG3#Qb27!<*0'!!`<#o`=pk!WrK+r;us#rW<$#
rri6%!X&T-qZHm$qZHm&r<*-)"T8K("T/E("U+T(r=T/D&JG!QrX\l8r!WW6$k3+B$4$tG#RCV?"pbD=
r<<H+!!WW-!!3#urW*'%!Wi9%!!3'#!!3!!rW<-%rW<-%rWE-&q?-[!!!W<("9eo2"U+c-!!N6(!sAc2
"Si3'#6b>;rWN?.#6jr/rXoAH&J,Kd&H31@%1iCHr=&W3!!rQ2r<NH/#RL>4!s&B+#5S?!!<<,u!WW8u
!X&T,!s/Q""9&E'"8N'$"9eu."9Sf1"U+c-!!N*$%L3.B"U>29"U>29#6b>9r<E<+pBLj.#6tPJ')iLB
&-*@A&-!+;%/gM6#R^P:(((<O#RCV=!!WW-"onW(!<<-#!<E6%rW3T2!WiH*!WrN+!X&Q,!sA]+"T/?)
"9Sc0"8`3$"oJN%"TSf*"Tnu5#6k)3rWN9,rWW-'!!W<+!X/f4rW`E,oEP@&rXo2CrX]/B%h]EO%K6bD
$471M$4$tE#R1P?rW`?%$3gJ2!!**#!!*-%$3C80!WiB)!WiH*q?$j'!s8Z0q?-s*"U"r3"T8K*"9er&
"UPD="U>29"U>89q?I!,r!33-r<EW8#6tP?#mUbC#P\T+$PNCMrt,/?!YPqOrXA]3rWiZ5#R185#5\B#
!WE)t!W<'#!s8B&"9\i0!s8E'!X&W.r<3*'"p>&4"9eo2rWNK/"U,,9"UG#1r!30(!XAr6q?I!,r!*3.
rWi<,!!iK0!!iK0":#/>#n-P8!"o>F&eY*S":l"P%2/UJ#mq"F$4$hA"pbG3!;up"!!*-"!WiB("8r9&
!s8W%!t,57!sA`/"9eo2"U+f.#m:D8"9er3"U,/1"oJT-"U,,7pBLp0#6tP?#71Y4$2k,*$2k/1$h+H(
&eP`T&.&jV%h/sV&e#*Uq[!0*"98E+!!*!!!WW6&rW*$$!WE0!!so#3!s8Z/!sA].q?-d%rWN3(!!N3'
#R:M<#6b>9#6k)3!"&N-":5;>#7:A7$4."D#71VA#mUbAnd,:$p^%B;#n%%I#mgtG&eP]e&H34?%K6b:
&dnRCrW`6"qZ6Qq#6=l.!WiH,!r<$""oAH#"U,,7"U>29rWN<-"oSZ+"o\`,$2b&.$2b&.$2Xr.#m^G9
!!i*%!"8]2":GSD$Ocq?rX/]4r!NT>&J5TR&,m"F$k*IM&demM"pbG1!;cd'!s/N+!WiH*"9SK'!<`T&
"TJZ("TSf("o\c+"Teo6"oAN1#mghA#mU\A#Q>#0#OD`s$i:53$OI4=#m(J@$2=l8#n%+R&J,Ka&.K*H
$k*CK&dSaI"onW-!!*)t!W3!!"9&?)!sA`/"T8E."9\l2"U,#4#PnT*#6b;1#64r!#6P8;#m^84!!i<+
!"8c4!"8Z1!"8c4":GMB$OQe?":5GB$OQe?!XT5@p^73;&J5QbrXAu=$jm=IrWiT="pP,+!!!'!!X/T*
!WiH)rW3-'"9\N("9S`/"U+Q'!XAl4rW`E,q$.34#6tP?#mUbC#Q>#3#71\AnHf:*#n%.?#m:VB$OI.=
$NLM)$NgbC$OQ\<!YQ+XrX]#<rs\o7r<NH/&dJ:7$3://!W`?)!s/Q+qZ?j%"8W0!"Tef1#P\H*#6b>;
$2Xr-$2t/1#m^G9!s]&;#O_s&$OI+I$OQe?!!rZ6$2t;4$2t;4$1nT*$2=l8&ePZd%hB*X$jm@@#lOr0
&cht4rW3!"!W`?(qZHNpr<3?0"U,,7#Q=nu#6G2:#Q+l0#71Y2$2t52$i:5;$OI1I#n%+I$O[:1$NLM&
$iU_@&.]3Z%/gM<#R1P=!<<-5r;lm!!!2ou!X&W.qZQ]u":#/7"U4N'!!rf6#71VA#Or*#$i:51$iUG7
$OI1KrX&Q3!"&K0!"%cq!tl1W&H3+D$jmCM#RCV=r;[<.&ci%7!W`B*!WiH+"9\W+!<iT)"T&B%"o8H(
$2b&.$2t/2#mU_)#lkA2#lkA0#mLbD#n%%I$2+`,$0DU*%MB?b%hB*X$jmCK"pbG2!!NB(&ci"7rW<'$
r<*3)"9er("o\c*"T\i3q$-m+r<Mp#!"8Z1rsSc3!Xf;@q@!9/h$X2mr<rW;rX]#;rX',@#R18/"onW(
!<N97!Wr?'"9\f0!sAK)oE>7#"o&<&$2t/5#mU\A#m^53":GSD$Ocq?!=K54$Ng\C$OQS9rX&!#p'Uj1
rX/]9r<il@&ePZc%h/pSrWrN.r;c`r!Wiu9r<*'&rr`6'"9el2"UG#1rs/N,q$6p+rWhcr"UbVE#n%(:
$NLM-$N^\D$/H!h%fQh;&eP]S%0-h9$4$nC"onW(!!*,u!WWl3!so)5"U"u3"U"u3rWN?.#6ji,"UPD?
#71Y0#m1PA#n-_=":GMB$OHe>r<iT3r!NT5#n%'t$NL\2$NL\8$OR@O$P<s^%h/sV$N:;2#5nN%!WE-$
!<W6&&eY9K"9\l2"9eo2"U,,9"U>27pBU^)rW`E0":5;>#m^22!t,DC$iC>.$iLC]$NL\7$O[FS$O[FW
&.]9\$jut>!!`B%!!3$"!<WE%!s]G@!sA`1"U+f.!<i`+"o\`,$2k)/$2k,.#lk5%$2t;5#n-_=rX/]4
q?m90lO*\&p^7-5$OcqDq$R35$iUV<$P!OS!tc(U%K6bG$4$h9!!WE(!<N9'!<WE$!sB5>"U,&-"U5)7
"U,,7"o\`,$2k)/$2t/1#m^D8!!i6)rsSc3!=K55$Ng\C$OQe?!XT5@mL'")q[3B6r<iZ:$Och>!"So7
!"Su9rXSl7$kX$]%1N^S$47%C!!*!!&-;n6!s/Q-!s8Z.";1h?"U+c-!XAl4q?I!(oa(U'r<WH3rX&B.
":5GD#mp;5!"&B-r<iT8mL'(+$P*(B!tGeK%fQh:%L`7G%LWaZ&.]3Z$jm=I#R18/r;d'(!WrK+"8r?)
"U#G@q??a$rsAZ0!so2=#Oi$%$OI1KrX&N2dL6$a"q(nN$P!OPrXKSL%LrjV$P!OS&ePW`$jm=I"pP))
!<E9(rWE-&"U,#4"9]A6"o/B'$2t2*$2t52$i1/0$iUIp$NL\($NgkH$P*(Br=0,A%LWXS$P!OS$i:D@
&J,H^$k*IK#R1;-!WE0"!sSl1!sJf2"TAQ,&d8LDr!36.rs/N0!!i0'#R^qF$O[7K$OQe?!"%9c!"Sl6
rso&:rXSi6q[Nc;%LrjV$iCJ<&J,H^%1N4A!X8W*rW3$#rW<E/"9S`/"9er3rWN?9"U4i0#6b>=#6tP?
#Pn`,#Pn`.$O[:=$N^VB$/Gsh%fHbE%LrjV$P!OP%LWaS%L`7G!"8c9rsSi:*"*5d$P!XS%LWXS&J,H^
$jm=I"onW(!!*0'!s8H(rWE9+"U+c-"pY;E#71P?rW`K2#7(26!!i<+!Xf;Bp^-6o!"SB(!"Su9!"Sf4
rXSr9p^R93rXJu;%L`4F#S@UY%1ERN"pY&,!!3'#!!3'$qZQa!%L3UO#71VA#71VA#71\Aoa(g1#mgtG
$OQe?!"&K0!"&6)!=KD9$NL\0$NpqI%LW[C%L<FM%LrjV$P!R3%Km@T%1NaF#lXf(!W3!)!s8Z/!sA`1
"T/E+#6tP?')Dk.#lkA3#lkA3#mUhG#n%+I$OcqA!"%`p!"Su9!"So7r=0/B$P!OS$P!XS%L`.D!t,SK
$hOo3&J,H]%/pP4#6"W,!WrN+!sAK)"9eo3"U+f."U>89#6tn?#6bD=#mUbAoEbR,$OPVs!tG\K%fHb<
%LWaS%fHb9%L`4F!"8K1!"8?-"VD:V$jm:>"p4i*!Wi6$!WrQ-rWN9(rWN`9#6b89#71\A#8.=J#P8>q
$NLLm$NL\7$NL\9$i^_9$N^eJ$i:D6$geE*$P!RC%KI(K&.]0V#RCV7!<<0%rW3K1!sA`/"9er3#6tD9
q$-s-&dS.;!"8c4!=K55$iUIr$NL\0$NpqI%LW[D%L3@O%LWaV$OckB!t,SK$iUY1%KHn1%L!FT%1ERN
rW`B&rW30(!X&W)"T8K(#Q=o+#6G&6$2k)2&d\jPq$I'/rX%?f!tG\H%fHb8%fQk8%L!4J%LWaSr=/u=
%LrjV$i:D6$h+W5$P!aZ%1ERL#R1;,!<N<)"8r?("U,/1"oSZ+$2Xr/#mh7>#m(J@$02Kd$NL\5$NpqI
$P![G$iUY8$iUY8$g%p+&J#<Z$4$h?!!*-"!r`<&"9&H%"Teo4"o\c*#lk5.#lkV8#m:VB$OI.<$i^Om
$NpqL$O[IC$O7.L%LWaV$P*.D!=fM0%KHn$%Ls']%1NXM#QXr+!<WB*!rN3""TSf,"o/B.#71\E#mh4P
r!<K6#mgtIr<_]r$P!OS$O[FP$P!OS%fHb?%LrjV%LWXSrX8E0!"8N2rsS<+$kX!Z$46tA!!*'#!WiE)
!sAK)r<36-"U4`-q$@'0')Mt:$O[9u$i^_3$iCJ8$P*+Crso&:p'q'1ndbC(%M9-\$47%C"onZ*!WrK+
r<3'&!=&f,#6>,9rWrW2#m^;5!##8;!XfABq$R0/q$R97$O[I=$Ps9\%LWXS$P!OS$P!OS%LWaV$P!OP
%M&IG!Y,SGr!r]9!"7it";).Q$jch:!!3'#r<*$%r<<''!so2=#PAB'')N%:$2k53$/c3j%KHn8%fQk5
%KHn2%KHms%M'-^%1ELJ"onW(!WiH,!sAN*r!!')"UPD=#mgk9#lk5+#ltDHrX/]4r<iT3p'Uj1rX8N0
!"Su9!=fM9%Kd(K$OckBrX/]9rX8K2!"86*!"8<,%1s*[$4$n;!!*-&!s8W(!t,57"U,,7"U>8=#6k)3
!XT/<pB^m/$PN"<!"S]1rsnr7!"Sr8rsnu8"qD"K%LWaSr=/u=%LWaV$i1>5$fMR-&.]0V#RCD1!<N?*
!X&W.!sJT,!s\u5#Q=r3#mU\A#m^;5!Xf;@r<iT<mL'")q$R04r!NQ9$P*.D"V)"M$P!RD%KHm^%KR.P
%L`[O#R181!<N<*"9eo2r<33,"oJT,#mgk1#ltD?r!NT>#n%(.$N^eG%fHb8%f6V8%LWdF$iUV=$P!OS
$fhfa%LE^V$jm7E"onW)rWE-&qZZj%!=9#,#n.1J$O[7K#n%%I$OII1$NL\7$NpqI%LrmG%M0!X$P!OS
%LWXS$O[FS$P!Zs%LE[W%1ELH!!!'%rW<6*"9er-"Teo4"oS]!#lkA4$2Fr/')`1<$2+`,%fHb8%fHb<
%LWaS%L*CN$P!OS%fQk6%fZp_%Km@Q$jm:>!!<9'!sAK)rrrB,!!W<+!so2=#Q+l.$iUG:$OI+I#n%(=
$Ng\C$PN:Doa:p5$O[FP$i1>7$O[ID$i:D6$dB.e&If-S#R1;1!r`<$"9o#5"9f#8"oAQ"$2t8'$NLh,
$NU_Fq[NT6rXJo9rXJo9q$mB4cOL6m%13FH"onZ)!r`<%"T8K("T/K+#mU_6#lk5/#mC\E#n%+Ip'Uj5
r!NK7nd>R1%LWaVrX/`:$ePsS%N5lf$jm7E!!*-&"9Sc1"9\l5#6b>9#6tPA#PSN.$OI+I$OQe?!"&H/
!>5n5$NL\8$i:G6$i(84$hk/0%KHmh%Km=P$4$k8!!WK,"9\f0"T/H!#P\W'$NLM/$NLM4$NU_Mp^7-5
$P*.Drsnr7rsf#:]ab)T%h/FA$NL51!WrQ-"9f#6"oJT,#mgk5#m1PA$OQb>":5AB$OQM7!##5<!"Sr8
"qD+N$P!XSrXK)>%LWXS$i1A5$i(84$d]@h&.]*R"onZ*!r`<%"T/E-#71V?#mU_1$3(>1$NLM'$NLh4
$NU_FrXJu;%L`7G!XfJG^^^_`%13@F!!*-&!s/W*"T/H$#P\T*$iUG5$OQ_=!"&6)!tktL%f$J9%LWXS
%L`4FrsS`7!XfJGd15j[#7q=Q#R180!r`<$"T/H##7UtE#mUbC$OI+I#n%+Ind>F-r!N]A$O[FP$P)t?
!"Sr8!=fM7%KHn!%c7a$&.JsP!!!'$r<*'&r<<-)#RL_B#71VA#n-Y;!XfABlO*\*r<ic=%LWaV$iCJ:
$P!XSpC733%`f+`%h/jO"p"W(rr`9(rWN<-"oJW##m:VB#n%(,$OdLQ%LWXW$P!XS%LWaJ%LWdG$N^eG
$hOo/$cief&.AmO!!!$$!WrN."9f&0"oJW$#m(JB$1nT*%eU23%LWXWrXJo9p^R?5%L]lY#nROQ$31).
!X&W)"T/E,#6tPA#71D;#Q+l.$iLCp$N^eJ')`4:%Km.I%LrmA%Kd(K%L^8d!"]8A$4$V4rW<'%rWW3)
!=9#.#lkA4#ltD?jU2M-%LWmZ$O[FP$P!XS$dB1I%L3OS$3g\8!Wr?'!<iW*"T\i3r!3$("q(eF#n%+I
mgB+*rX/r@%LWaS%MB0J%KHn2%KHn'%b(sj&.AgKrW*'%!sAN*!XAl4q?Qg&":GSD$OQP8!"S`2!"Su9
rsnu8!##8@!XfJGrXJo9rXJo9!"6LN#7q:N"onZ*"9&E,"U"u4#6k#1pB^j.$24f-%fQh<%LWXSr<iZ:
%L`4C#n@=N%Ls*Z%LrlR%LNaU$3gJ2!WiH-"T8K,#6tP?#PeZ,$OQ\<kR74s"UbqQ$P!QP%L3OR$3gJ2
!X&E)rriE."oSZ.#mUbAr!<Q8$OI1I$OPu(r=/f8r=/f?r=/f8_%-2L!tPhH#6"W/!WrQ/"9er6"oJW)
#lkA4#m(J@$1nT*%fHb8%f-S4%fQhA%LrjV$P!OS')i@@$hk,2$f_`T%L`mX$3gJ2!WiH,"U,&*#Pnc+
$iUJ#$N^eG$iUY8$iCJ9$P!RD%KI..%`o1e&.JsN!!*-'!sJQ+r!3$(q$R0/oEt^1$P*+C%LrjV$O[FP
%LWaV$P!OS!Y,\Q[13HR$j[%;!<N?*rWN3(r!30,!"8c4!=K5&$iCA4%fQk8%L!4M$P!OPq$mB;[LNWU
$jm1>!<N?*"9eZ,rWi9+":GSD$OQ;1"V(nJ%LWdF$iCJ:$P!XSr=8i8rXJo@r=/f8]FFrQ$ipV<rW3-'
"9e]-"pY;:#71V?q[!?4#n%(/$NL\7$NpqL$O[ID$h=c-'$UpQ%L!@M#QOl,rW<H1"9\l3#6tP?#Q"i-
$i^P$$NL\8$iUY9$i^_7$N^eJ$ht24&e!h3eIDiq$46t;!WrN-rWW0(q[!<3$OQY;!"&6)!=fM:%L<FP
$P!OS$P!R9%KQqMr=6OO#7q:N"p"c-"9&E*"U,,7rWi6*!=K5&$NL\7$iCJ9$P!XK$P!XSndYX4]+,/Z
$j[%<!WiH+"9eW-q[!61r<WK4$2Fu#$i:D6$iUV9$hOo/$iLP8'"e\[&./[C!<N?+"TAT%#Q4r5$OI1I
#n%(+$OR@O%LrjV$P!XS$i:D6$hOo/'%@EV%L*IQ"pP)1"9&H%"oei$$1\H-%LWaS$P*.Drso&:rso#9
q@3K5o*ta5ljhJS#S.=L!!*-'"9e]-r!*<1#71_9$Ng\A$OQ80!tG\K$iLS8$hk,2$hFi0%Ls,d%L`jT
"onZ+!WrQ/":#,0#Q"f.$OQ80!Y,SJr!NN8$iUV;$P!XH$g8'#'#4ta%giL@!<N?+"9eu,#6G2:#Q4u%
$har1%LWaVrX/`:$f_]s'#>%c%h&^D!<N?+"9er6!!W?.rs/E-rsSi5mgB+*rX8`9rsS<+!"8B.!#!Nd
p'qB>$jH\4!WrQ/"T8Q+#m^;5nd>F-rX8]8"q(nN$P!XSoaUs0lOEn-jUU/X"V2"G!!*0#"98W'#6G2<
#Q4r1$OI..$OI:N$P!XS$P!XSq[WW6jphA(r=6mY"V2"G!!39$"TJZ(#Q4r1$OI.+$NL\9$NpqI$P!R6
%djf,'#b=a%h&XB!<`<(#6b>9#mUbC#Q4u-$N^VB$1nW*%fQh9%Kd(K$P*.DrXJu;%L`4F!"8!#!#!9]
$4dOL!!36)"9\l3r<N3+rX/`7$2P#0%f-P9%LWXS%f6Y3%KHn9%KHmt%KI-^%KI"E$ig8/!WrQ.rWN?.
#m^;5rX/c6$OQD4!tG\H%fQh;%Lrm@%KHmt%KI-u%dOT0%giLA!WiH,rWW<,rWr`5#mgtG$2t;7#n%+I
pBq*6$O[FPq[NT6r=/f8g^X;sp(#R^"qM%H!<N<)rWW3)q$@-2#n%(9$NL\6$NL\8$N^eG$fDNf%KI-a
%L*@L"p+i."9&K&#Q"f1$OI1I$1\H(%fQk8%K["J$ht4f%KI-b%LEXQ"p"c-!sAc2r<N0*ndGF)!"Sr8
q[NT6e.)HkbRO^c#R1>/!sJf4"U>8=!!iH/!"8`3!=K5$$O7.O$P!OP%L^es!#!lnpC7K=$4$V5!sA`1
"oAQ%$1\H(%fHe6%L!4M$P!XSdgc?jmge7c"q:n>!<NB,r<30+p^-R#!Y,SJr<rQ6rX/]9rX/`:$eZ$f
%KI-f%Km:L!!36$"9\l5"U>;0#ltD?p^7'3q?m95r<iT8rX8]8!"8Z6!"8E/j:2/&cjgKo$31)/!sAc2
#6b>=#Pnbt$NpqI$P!RC%K["J%a5C_'%%0o%13(9!s8]0rWW9+q?d*.pBq'5%LWdG$NpqL$P!Qe%KI-i
%KR(I"TSQ*!sAf,#6G2:#Q"hp$i^_9$NU_FrXJo9bmj^dkRQqh"q:hB!<N?+rWW6*r<WN5$OQ>2!"Su9
!=fM:%fZpY%KR1PeIE#t$3gM4!sAc4#6b>=#Pnbr$O%"M$O[FPg(*EY!#!fl"q:n>!<WH-rWNB/#mgk8
$2t;4$1nT,%LW[C%fQh;%Lrm>%atmf'%RNt%0uq7!s8]0r!*E4#n%%I#n-_=oEtX/!"8c9r<pLQ!#!ln
#7Uq=!<WE,"oAQ%#lkA4$2k53%f$J4%f$M-%KHm]%KI.1%dFN+%0uq7rWE<,#6bA/#m:VB#n%(7$NL\9
$iUY8$iCJ7$crnV%KI-p%L!:I!!*-(rWW6*rX&Q3!"&*%!Y,\JrXJo9h%&KU!#!uq$4I1?!WrQ."U,,9
r<WQ6#n%(/$NL\9$NpqI%LW[:%a5C_'&*m"%0uq8!sJT,#R:S@#mUbC$OQS9!"So7rsf)?$OckB!"6IM
!#"&s$Om@A!WiK."U>8=#lk50$180(%LWaV$b-ZH''Ki!%L!:I!<N?+rWW<,q[!<3#mp;5#n@FQ%LrjV
$P!RB%KHmN%KR1Ph[T\s#QXi+rWNB/#71Y6$1\H+%LWXSrX/`:$dB1I%KI.!%LNXN"p+l0":#)8#Pnbt
$N^eG$iLP8$fhfH%KI."%LW[L!<N?+"U,,;#7(26pBps2r!NW;$P!OPpC702]FFoSi=6&&"on],"9n].
rWrW6#mpJ:pC$m/!"6+C!#"9$!"92?!<N?+"U,,9#m^D8p'Uj1r<i];$P!R>%KHmH%KI.;%dOT/$jZk8
!sAf*#6Y>>$OI./$i:D:$P!OS$cNVH%KI.&%Kd+F!!3'%!!W?,q[*60!"&E.rsnu8rso#9fFHUF!#"B'
"q:h=!s8]1r<N9-":GSD$OQM7#n@FQ$P!OP%Lrm8%`/\U''9Z0%0ck8"9\l3#Pnbq$i^_9%KHm>%KI.)
%L<IK!<N?+":#,/$2t8)$O[FP$P!OS$P!OS%L`4F!"6%A!#"i4pC7H;"p"c."9er6q[!92$1eN,%LWaS
q[NT6[LW*C!#"N+"q:b;!X&W0rWi<,!=K5+$iLP8$c`b9%KI.,%L*@J!<WH."o\c+$1nT*%fHb;%LWaS
h%%O:!#"T-#n7(>!sA`1"U>;1$1nT/%LrjS%L_k<YmpaHlja@3!!!*'"U,,7#7(57p'^g,"V(nJ%LWZ>
%KI./%KQtB!W`B+rWN9,q?cm(!=fM:%KHn5%KHm8%KR%PmLB^8"on`."U,,7#71\A#mpA7!Y,SJrX/c;
$Oc_>!"6XRkRIS*mg]O1"p"c."U4l1!=9/4#m(JB$2P#5%LWXS%L`"@!"7Hicjg$gn.#U1!!*0)"TAW0
#mUbC$OQJ6!=fM7%KHn2%KHn/%_)uK'(HG9$jH_7"9eu.#Q>#2$OI.1$iCJ7$_Rt0'(QM<$jHb8"9f#6
"oJ\t$iUV9$_n4-%KI.5%L!1D!WrQ/r<N<.!=K5+$O7.L$P!OS%L]r[i=5i#oF;?>#Qb)2"U,,9#mUbC
$OQG5!Y,SGcOS&,!#"r7$4I+>"9\l3#6tP?rWrT5$1nW#%KHn)%^?KD'(ue>$ig;1"9eu.#65/2$2+`-
%L`7Gr<iT8R1930pC7?8"p"f/"TAZ*#mCVA$OI1Ir<iT8q[8St!=fb;%L!7@!WrT0rW`K2$OQb>!"&E.
!"Sr8X:FG(!##);#RUP5"9Sf2#7(26p'Uj1r<rW8rsQdUcjg$gq@3Z9"p"i0"o\c+$2k53$2=o,%Kd(K
%L`7G!"7`q\./KOq[Nc<"p+l0"o\c)$2Fr/%fQh>%LrjS%L_h;TFLr7r!il=!!*0*"o\c+$2=l0%LWaH
$i1A5$iUV9$^M8&')`:?$jQt<"9\l5#m^D8pBq08$P!OP%L\m=mg]=1rXK);!!36*"o\c*#ltD?p^706
$P!RC%KHmI%bD0r&e5BY"p4u2"o\c+$1A6'%LrmD%KHmg%_iJ]&e5<M!WrT0#71\ErX&E/#7_+O$O[FS
$fVYo%KI,l~>

%%EndBinary
grestore
np
1005.31 44.1617 mo
1005.31 48.0518 li
979.382 44.1617 mo
979.382 48.0518 li
953.449 44.1617 mo
953.449 48.0518 li
927.515 44.1617 mo
927.515 48.0518 li
901.582 44.1617 mo
901.582 48.0518 li
875.649 44.1617 mo
875.649 48.0518 li
849.715 44.1617 mo
849.715 48.0518 li
823.782 44.1617 mo
823.782 48.0518 li
797.849 44.1617 mo
797.849 48.0518 li
771.915 44.1617 mo
771.915 48.0518 li
745.982 44.1617 mo
745.982 48.0518 li
720.049 44.1617 mo
720.049 48.0518 li
694.115 44.1617 mo
694.115 48.0518 li
668.182 44.1617 mo
668.182 48.0518 li
642.249 44.1617 mo
642.249 48.0518 li
618.909 44.1617 mo
618.909 48.0518 li
1005.31 387.162 mo
1005.31 383.272 li
979.382 387.162 mo
979.382 383.272 li
953.449 387.162 mo
953.449 383.272 li
927.515 387.162 mo
927.515 383.272 li
901.582 387.162 mo
901.582 383.272 li
875.649 387.162 mo
875.649 383.272 li
849.715 387.162 mo
849.715 383.272 li
823.782 387.162 mo
823.782 383.272 li
797.849 387.162 mo
797.849 383.272 li
771.915 387.162 mo
771.915 383.272 li
745.982 387.162 mo
745.982 383.272 li
720.049 387.162 mo
720.049 383.272 li
694.115 387.162 mo
694.115 383.272 li
668.182 387.162 mo
668.182 383.272 li
642.249 387.162 mo
642.249 383.272 li
618.909 387.162 mo
618.909 383.272 li
617.612 44.1617 mo
1006.61 44.1617 li
617.612 387.162 mo
1006.61 387.162 li
1 /1 /CSD get_res sepcs
.851 sep
@
1006.61 386.019 mo
1002.72 386.019 li
1006.61 363.152 mo
1002.72 363.152 li
1006.61 340.285 mo
1002.72 340.285 li
1006.61 317.419 mo
1002.72 317.419 li
1006.61 294.552 mo
1002.72 294.552 li
1006.61 271.685 mo
1002.72 271.685 li
1006.61 248.819 mo
1002.72 248.819 li
1006.61 225.952 mo
1002.72 225.952 li
1006.61 203.085 mo
1002.72 203.085 li
1006.61 180.219 mo
1002.72 180.219 li
1006.61 157.352 mo
1002.72 157.352 li
1006.61 134.485 mo
1002.72 134.485 li
1006.61 111.619 mo
1002.72 111.619 li
1006.61 88.7517 mo
1002.72 88.7517 li
1006.61 65.8847 mo
1002.72 65.8847 li
1006.61 45.3047 mo
1002.72 45.3047 li
617.612 386.019 mo
621.502 386.019 li
617.612 363.152 mo
621.502 363.152 li
617.612 340.285 mo
621.502 340.285 li
617.612 317.419 mo
621.502 317.419 li
617.612 294.552 mo
621.502 294.552 li
617.612 271.685 mo
621.502 271.685 li
617.612 248.819 mo
621.502 248.819 li
617.612 225.952 mo
621.502 225.952 li
617.612 203.085 mo
621.502 203.085 li
617.612 180.219 mo
621.502 180.219 li
617.612 157.352 mo
621.502 157.352 li
617.612 134.485 mo
621.502 134.485 li
617.612 111.619 mo
621.502 111.619 li
617.612 88.7517 mo
621.502 88.7517 li
617.612 65.8847 mo
621.502 65.8847 li
617.612 45.3047 mo
621.502 45.3047 li
1006.61 44.1617 mo
1006.61 387.162 li
617.612 44.1617 mo
617.612 387.162 li
@
1044.61 387.162 mo
1044.61 44.1617 li
1024.61 387.162 mo
1024.61 44.1617 li
1024.61 44.1617 mo
1044.61 44.1617 li
1024.61 387.162 mo
1044.61 387.162 li
@
gsave
1024.61 387.162 mo
1044.61 387.162 li
1044.61 44.162 li
cp
clp
1024.61 387.162 mo
1044.61 387.162 li
1044.61 44.1617 li
1024.61 44.1617 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 1024.61 509.793 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
gsave
1024.61 44.162 mo
1024.61 387.162 li
1044.61 44.162 li
cp
clp
1024.61 387.162 mo
1044.61 387.162 li
1044.61 44.1617 li
1024.61 44.1617 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 1024.61 509.793 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
1044.61 46.0047 mo
1041.18 46.0047 li
1044.61 80.1207 mo
1041.18 80.1207 li
1044.61 114.237 mo
1041.18 114.237 li
1044.61 148.352 mo
1041.18 148.352 li
1044.61 182.468 mo
1041.18 182.468 li
1044.61 216.584 mo
1041.18 216.584 li
1044.61 250.699 mo
1041.18 250.699 li
1044.61 284.815 mo
1041.18 284.815 li
1044.61 318.931 mo
1041.18 318.931 li
1044.61 353.046 mo
1041.18 353.046 li
1044.61 387.162 mo
1041.18 387.162 li
1044.61 387.162 mo
1044.61 44.1617 li
@
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf1048.42 390.658 mo(-1)[3.99585 0 ]xsh1048.42 356.542 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 356.542 mo(9)sh1048.42 322.426 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 322.426 mo(8)sh1048.42 288.322 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 288.322 mo(7)sh1048.42 254.206 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 254.206 mo(6)sh1048.42 220.09 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 220.09 mo(5)sh1048.42 185.974 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 185.974 mo(4)sh1048.42 151.87 mo(-0.)[3.99585 6.67212 0 ]xsh1061.92 151.87 mo(3)sh1047.42 117.742 mo(-0.)[3.99597 6.67188 0 ]xsh1061.92 117.742 mo(2)sh1048.42 83.6382 mo(-0. )[3.99585 6.67212 3.33594 0 ]xsh1060.92 83.6382 mo(1 )[6.672 0 ]xsh1048.42 49.5342 mo(0)sh1044.61 387.162 mo
1044.61 44.1617 li
1024.61 387.162 mo
1024.61 44.1617 li
1024.61 387.162 mo
1044.61 387.162 li
1024.61 44.1617 mo
1044.61 44.1617 li
1 /1 /CSD get_res sepcs
.851 sep
@
1044.61 44.1617 mo
1044.61 44.1617 li
1044.61 387.162 mo
1044.61 387.162 li
1024.61 44.1617 mo
1024.61 44.1617 li
1024.61 387.162 mo
1024.61 387.162 li
1 /1 /CSD get_res sepcs
.8 sep
@
459.352 484.416 mo
70.352 484.416 li
70.352 827.416 li
459.352 827.416 li
cp
1 /1 /CSD get_res sepcs
0 sep
f
70.3515 827.416 mo
459.351 827.416 li
459.351 484.416 li
70.3515 484.416 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[388.999 0 0 343.001 70.3515 69.5387 ]ct
snap_to_device
<<
/T 1
/W 150 
/H 150 
/M[150 0 0 -150 0 150 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JeEYJJeEYJN=u4&q%EW="VD=Z&J>`T&cE=D&J>]T&ciRWr=K5H&J>Zg&J>!T";)7Z&JG'T#8.X]&eP]g
&cE=D&J5ZT&HrdZ&J>ZfrXo5D')E1?')`FB'(Z\:&ePcQ&c31@&c<7C&ePcU&cWL@&H`XX&JG$S!"t\3
p(@38!"o,A!YH"WRh=Nip_'\@a:\1[`"D)C!"dot!"ec7q@WiA&JEk2rXf,Aq@O2K&.oKc&J,Nd&.oHc
&J4pR"qV@X&.oHcq@EW=`XqtZrXf,CoF^p3!"f)@!"f,A#7qIZ&.fEc&H37C&.oNK&-*<D&-*@@')W=A
'(lhF&.oKc&J,Kc&.fEb&Z--*&Gm+;&HEI;&cN=A&[W,!&H!.A&JFsQ!##,?rXf)AaUl6!!Y5hQq\&]:
!##/@gCWfb!"\Z4!"\u=q[WZ<r!ri?%hS[Mrt,&<!"e]3!"er:r"A`9!>6"4&FpA4&,6\C%hK6^&.]<`
%hK<N%fd0N&,[(9&cN@B'%mft%hK9N&-<@Q&@W2E&,[(7&HiXV&eGZC&H34=&-<@Q&A8V4&,R"7&cN=B
&eXRD!Y5hRr!rc=dLXt@!t>bO%JgS8%K6n8')3%A&.fEc'(ZY>%hK9_&.]9_j:C5\!"Jo<!"Ji:r=&c<
%K$b8%0@%L&,$G4&,?\4')*"9&-*@;&-*7?&G-Ll%gEIR%h0$Y%K6kB%1NgW%h0'I%0-pe%K$k7&but<
')iI?&Ddot%K6k<%JUG8%1Ni]%K@(?')<.7&-*@@&-EFS%hR_2":YkN%hJRI!"[3]lj`k*q%<?4!##8B
!=ob+%g*7O%h8LKdgah:r=\r=!Y>nTpCIE>%hB6<%gNOS%1NgY%1hV2cjfp^!Y#PHrXAo;$k<1Erseo>
q%3W=&bch;%he=A!"Jo<"q;(P%h/sYr!h'`":P\J%1N1E!=TG9%0$e"%/ge>&JFsQoah08%heUIp^d31
!"[io!"Ai9"UkeK$k3Zm%/^b8&HNFTpCIH<&.]9ap(.*2":l"P%1hD,!XoMIr!W];%1EXSr!WQ7jUCD_
r"Ai<pCI?9&H*+>'(uh;%1a!.%0m:N$k*RR$k;P3dgZ*dr"8T5q[WZ>q%*H6!"\B)!"Ac7"UkhK%1E^D
%(m#H')N:8&GQb9')E.<%0-q/%K-_@$k*RS$k3US`s`Fb$4I=M$jm=M$jmCO$4Qb<r"Ao>!>#k=&-<@Q
&GZh:')iFA&+C#.%/gV8%/p\:$k:_q!"/]6!X]>Cr<r]6%-7io')N7@&GQh1%fd7A&*aT)$k:br!"/Z5
r<`T7$4Q2,p'U^1q[rQ6oa_*:%hJ1>!XoMIr!WQ7i!]Yo$k3"?!"A`3!"Ac4h[95nq[rZ9!=ob6%fd73
%G_Hj$31LV$N(P6&blq/%fm+PoF1j1%1Vb7q@!N7$jm=M%)*)H')W=B&/"^Loah!1!###8":YbK$k;;,
!X]8CcjBj\$47(;$3LP@$4-V<rWrE7q[rW8r"&W7q[EN<p^Q?o!X]8Ced;Ha$4-V<r<WB0n-B",r=\u>
q@EZ<&GQe2%0.%<%I4E&$N(=f$NCD1$3LP@#R^G7!=B+u#lPD4&c3+?%hSOI!=]S6%0.%?%K6b9%IOY[
$3:D>q[3<.!".Qgr=\u>q@EZ<&GZk/%0R:Q%1E^8$ip\DmgARlrs8T2!XK,?eHl'cq[r]:!Y5eQq@<Q8
rX\`4!>5k3$j-nH$4Po$!XK&=r<NB1dKfgWr=\r=q@NE4!=]S9%JpS7'(HCk$3^\@$4$nEcj0g[#R1P=
"pk,>r"8o>r"/T5p'ps/!#"l3km@V#$4$tG#R^P:!".Ec#6kG<"pbJ=#knQ$')W@;&Gcn=%1a!C%06kH
rX8c>pC%-2$jmF0$3^\@$4$tGiX#Gf"9o,;"pjl+!!r<'r=\r=q@NE4p'pj,!##)9lO!UtrX&Z3$M=\f
#QY,8q??p*m0<M%q@WT9!=ob<&+pA4$k<(B!##2<mKrt%#lP)3#RUq&#QP).#Qk8:"pY&4r<<6-j9GPq
q[rZ9p^[B7&,6V.$igq>$ip\Dmg9+%#R]Mr!!`E.g]df["pY#=q@WQ8q@E9/oaCm7$k2P2rs8W3jTkkk
#h'"X')iO@&c3.9%fm+Mp^I64%J:,1&e+=<rs8T2jp2%n#R1Rs#6"f,!;Hcs!!<E*"p"Q6r=K&A&c3.8
&,$J($igq0$3UVA#RCe-#R(D<"pP>=r<<6-qZc?j!!)cuo`4n&r"8i<!=ob<%fm+Mp'pa)r<`N;p'Lp.
$47%Gnd,*u"U5/:#R1Rj#6+]'#4_cl')N:<&Gcq4%J1&0$4Qk?!##,8rX&Z3$L.os#6+th"p+c)#3Z'c
')E4;&Glt?%1`mYq@3E4p^I!+!##)7!=0%s#iZ$h!!_Kar"Ao>q@NE4r!`]9%1W">p^.!6r!EH1$LJ*#
"pbLs"p=o1"onl%!9sR_')N:;&Gcq4%JC5($31_<$L\6)"pbD=#R1S%"p"o.r!!9("onW-qu?^$l2Uqf
!!!$"r"Ao>q@NN7!=]S8%J:/'$3UtI$4%"/#Qk8:"pjN!#QP&/!!WW-"pWoarW2p0r"8f;q%*60p'gU$
!=0;>#RCe0#QP).#jDQm!<*2e!!!&u!!`N)!<E0$!<E#ur"Ar?q%3B5p^R63q$[92%.sr.#SQ\6!X8o9
km$2K!!3#urrN*!pAt4*r"8o>r=Jc8q@3-,oEtO&!##&4!!`E."9o,;"pj]&qZ$U#jo>Ja!!*)s!<N9&
!;QZn')W@<&Gm"3%J^G*$3gbA$47%E')2_6"pbM%"p=o1!!WYr!;-<m!<DKfr=\u>r"&l>&Gm"5%JUA'
$Mt)/');h"#6+]'#3Gme!<E2a!W<Z/&c!"8&,H_9$k<"@!=B8/$MXl,')i.:#6"nq"p"].kQ'NAr=\u>
r"/]8q$m$+q[39/!XK&=p]pj4r!3<-#k%uY!!30%!9O:_!Wi64r"/r@&cE::%fd(:%0?qI%J^G)$MF`*
')i1+#3c-d!WN/_!<N<'!r`3&!W`?8r=]#?q@NT9pC6m+oa:<s!YPbEnHS7YrrN-"n,`=c!!;utqZ?^/
q[r`;q%*<2p^Hm(!=0&+#QP).#QPM0"p=o1"onkp!!<3$!<D<a!WiB'oE+q'r=Sl;q@EB2q@*')!XK,?
o*>@$'(uP/!:Kmf!W<#t!<<,h!<<3"!<E6&n,iP$q[r]:q[`K3p^Hj'p^$d'r<<67oEOdb"T\T(!!*)c
!<rT,!<E6&!V$6h')`F>&Gm"4%K$Y6%.su'#QP).#l=f+');au!9sRc!Wi9%rrMHfr=\u>rXf&?q[`N4
pC-g(!=0&,#lY#.#l=f+')Mk7!!WYt!;uou!:9ge!ri;l!qucp')N:<&Gm"6%JUA-$M+Pt"oo;6"p"].
oDejlr;c?g!!<-#!W`<'rW2-_r"Ar?q[iT7q@30-q?d?2#RUhEpB^Hs!##88!<<>o!9sUJ!X8`.!s/N+
"8if0&c<49&,Hb2%/(&&#k\B*"pP\?!!`&q!s&B&!:U!k!W`?'quQj!l2pkc!!<'2r"8i<q@EE3q$d!)
!!r?*!X8i7oEG<r'(Q#'!<DQh!!<-#klLng!s8H(rrW-$r=\u>r"/]8rXJi9!=TG6%/1,$#kS<&!!!Z)
!!E<&!<E2j!<`H)!W`>i!XAf/!s/Q+!s86"rt>;Dr=Sl;q[`N4p^I!+!=0&*#kS<(!!WE'')2G.!<E2k
!<N<'!UBg`!qQNl')W@?&GZk6%JgJ6$4Q\:p]q!,"pbD=pBC[!!!`B%!##20!W`<%mK!:h!!2<cmK<D#
r"8f;q@EH4p^Hm(pB^Er!WWE/qZ$U/r;citrW*!!nc@qUrW<-%n,rS$r=So<q[`K3q[<K4%/1,)#lFo'
"p4i0!!`6!!##//n,_eUkl^ksq[r`;r"&W5q$d91q?lj#p]^d"!!`,s!YPJ5n,WLjrW2EgjobPpr"8f;
q@EH4q$d'+!=0&,#keH'!!`)r!YPM6nc8am!UKmc"760l"9Sf*')N:=&Gm"6%J^G0$3:D>p^$Kro)Jdl
'(Q)#!qQKU"8i<"')`F>&H!(8%J^G-$M=]!#5/$!!<<*#!WW66o`=C\mK3Flr<!0*!sA`/r<3$2r=So<
q[`Q5q$d'+!=0&,#lY&)"p"].pAb6q!!)ru!###,mK2\V!X&T-p&t=,r"8f;r"&W5q$d!)p^$Tuo)Jdl
!;lit')2Lu!WW?%!pp'n"9S`/"9\B$r"Ar?rXf&?r"&W5q$d$*pB^Kto`4^e!##21!WiE(oE#0u!WiH*
!q-6f"SMus')W@=&Gm"8%J^G.$MFc"#5%ui!<<c1!V-9p!s/Q+!r`;m!s&N,n-&\&r"8f;q[`N4q[E9-
!=0&.#k\Dq!!<6%!<Dlq";1_9!WquqrW<-%mfVkYr"Ar?q[iW8q@3<1q$Qp'oEP-lqZ-6h!#"i(!WrK*
n,iXnrWDKir=\u>r"/c:q@390p^6s*r<NE.#l"Vt!:^'j!YY,,li[1h!!DZmrrr<5r=So<r"&`8rsec4
q$Qp'!X8o9q$$j"#5%ug!WE-#'(l;-!s8Vp!s&N,m0*=j!##5Cr=Sr=q@EE3q[E9-!=0&0#QY,8p]gHm
"9AK'!<Dip!<N<#!WWl/!r`9%!qHEq"9Sc/r<2]p!<iW)"T\`0r"Ar?q[iZ9q@36/q$Qp'p]^a!#5%uh
!Vuit')Mb/!rrDq"9/N("7QEo"U+f.!!N0&r"Ar?q[iW8q[NE2q$Qg$pBL?lpAt0mq>pX0rW36*!WiH+
!qZTo"98Pl"SW)u')W@=&H!(9%J^G/$MXo%#4qog!VQQt&cr+:!q?BZ"9AZ/p'(C-r"8f;q[`T6q$d91
q[3-)p]^a!#5A0!!<DfooE#(,!WqfmmK<Rp"U+N&r"Ar?r=Ju?r"&W5q[E9-p^$X!!<<?!!;$<`!W`o8
ncS7^qZZ]tr=]&@q[iW8q[EQ7%K$Y2$MXo$#5/&i!VHKs!s8T+'(lA("98Ps"RQBk')W@>&Gm"7%JpS1
$MFc$#5A2j!V?Hn!r`9%'(uFq"RQBk')W@>&Gm"7%JpS0$Mau%#5J6$!<<-#p]1Bs!VQQq!s8B&!##&/
"9\i0"9\<""9eo3"U+8tr"Ar?r"/`9q[NB1p^6m(rs8E)!<<?"!;$<c!r)it')Mb4"9\hu"RH9o#6tD;
r=]#?r"/c:!=]S<%0-k6%/C8,#l"Vs!;-Bd!qud#&d&4=!sA&r"9eo2"U+;ur<N?8rt>5Ar"/`9q[N?0
r!N0(q?HTmp&P0q!VQQr!s8W#!s'#:mKEFkncemqr"Ar?q[iZ9q[NE2p^6j'p]gBkq>gTu!VHNo"9/Gs
!s'#;nc\pq!!Mls!XAr6q$6j2r"8i<q[`Q5q@*0,r!3<-#l4`,!!!5u!;?Nk!rE&k"9&E(&d.e0!<iW)
"TS\u"T\i3rW`E,qZm'4r"8i<r"&W5q@*3-q?Zj#!rrN*!;Z]h!VZWt!s/Q+p&bC""9T;2"9J`0"RlTe
#Q,55&c<4;&,Zn4%/gP4$Mau%#5S>n!VHKp!s8)sr<**5p]L[&"9er!"nMus')`F?&Gm"9%J^G/$Mau&
#5J6#!<<,q!VZZd"8W-#')D_3"U+f.!!N3'q?6m)"nMus')`F?&Gm"8%K$Y0$Mt)0"pk#/q#CEr!;HTd
!qcZp"T/B&')Db&"U#&8"U>5&#Q5;5&c3.;&,Qh5$ip\Dr<`Q2$Mk&&#5S<#!<Dor!<N<"!rW0$!s8)s
!<`N#"99)4"RlTa#Q,55&c<4;&,Zn5%/UD-#l"T*!!WH#!;HQq!Whur!<WDt"7u]s&d7\-!=&et#65)/
')W@=&H*.9%JpS5$N1>.#l+Z*!!`6!o`=^epB(I""9\?#!#"f*nHT1'#6tP?r=]#?rXf)@r"&W5r!WT5
%/UD-#l+]!!;cd"!W`?'!VQTg"7u]t"U,P4"Teo4"ni2r#QG,/')W@>&H!(8%JpS0$Mk&(#58,m!VZZf
"9&E'"8;rt"T]5>p''pjrsA]1rsAW:r"8i<r"&W5r!WT5%/UD-#l4`+!!`6!p]:'ip]LHso*#!q!##)2
!=&eu#6>,9q[*36r"8i<q[`T6q@*6.q$?a"p]10lrW2]op&b<u"82iu"U+]+!##,3nHT1'#71\Ar!E<7
r"8f;r=A`6q[E<.q?R'*q?H`q!<E2r!VQTh"8i9%"8W-%"U,&)"UG_E"U>27#6b;'#PJK&')W@=&H!(;
%0-k6%/UD-#l+]#!;?Ng!ql`e"SW''&d8FD"U4B#p^$p5r=]&@r"/`9r!iK2q?m')q?H]pp]:'io`Omj
!<iW!"ToAB"U4f/q$-p,#PAE%')W@>&Gm"9%JpS2$Mar."pk&0q#CEr!;QWr!Wi)upB(I"!sA9#!X&Z0
p]Ua)"U>\1#P8?$')W@>&Gm"9%JgM1$Mau("p+c)#5\Dr!<E6&pB($jp&t<t!!N'#!s\u7'(lJ2#mU_.
#lkA3')W@>&Gm"8%K$Y3$Mk&(#5S?"!;QWs!WiDt!ql`h"RuWs#6tn8#PAB'$iUJ2')W@>&H!(8%K$Y4
$NCJ0#l4c#!;?Nh!ql]s"9\?#oE>7#"oSZ+')`%8$2t2"#ltD?r"Ar?r=Ar?r"&Z6q[E<.q?Zm$p]1-k
!<N;s!qcZi"9J`1"SW'$#6tG0#65D8#6Y>>#71Y4$2=f,$iCY9&c3.<&,Qh5%/L>.#l+]"!;QZh!r)lj
"9\l2"U,&*"Tnu5"U>#2q?I-9#71V?o*GR.#mgtI$2kM7&c<4<&,Qh5%/UA4#R^G7q?H]pqZ-^!!VZZh
"8rB!"9AZ/o`b$o";1qG#7'l-rX/c6#n-\Er"8i<q[`T6q[E?/q?Zm$p]1-k!WiB(q#^6lpB:'kp'1X*
#86M4r!WH9r"8i<r"&Z6r!`E/q?[$(!sSr0#5J8p!<E6&p]C3m!<`Mu"9AZ/pBC9r"UPD=#mh7;$2=o,
')W@>&Gm"9%K$Y2$Mk#/"pk)1q>^Ns!;QZj!qucu"9\i%"SDrk#6bD=#71\LoEk@%rt>>Er"8i<r"&Z6
q[E<.q[!!%qZ$Wt!;HTi!qufk"S;li#6Y>>#71\;#nlt=p^@$5r"8i<r"&Z6q[E<.q[!$&q#L3kpB('k
p&kF#"U+`,rWN?."U4N'q[!68q?cj'r=]#?r"/c:r!iN3q[*?0$N(2,"p"].qZ$Zu!!)cpq#UR!!rW6#
!s&N,pB:0n!=&f$#P\T0&d\pR#n%(5$iL_9&c<4<&,Zn5%/UD.#l+]$!!!&r!<E6&qZ6d#!r)lj"SDrj
#6>,9q$@$6rX&3)r=]#?r"/c:r!iN3q?m**p]gQpq>p9kq#g9mp'('np'Cs3#ndOP#n%(8$NU_Fr=]#?
r"/f;q[NE2q[30*q$-Zqp]:0l!<WDu"82li"n`,u$2b)3$OI+Po*bL0r=So<r"&Z6q[E?/q?Zp%q>g?m
!<N;s!r<!#"9\i$"Si6#"n`*%#mU_.#m(JB'(u_5%fI%<&c<4<&,Zn5%/UD.#l4c&!!**#q>p?mqZHd!
pB:0no*=pp"Ub\E$O[UB$iUY7')W@>&H*.:%JpS1$Mt,*#5J6!!;Z`l!W`B)p]L<p!!W?)q$$?po*P=&
!##)8rXSl>r"8i<r"&Z6q[EE1rsJQ-r!)ut!<E2s!Vlfk!s&N,p]U?q!=&f%#6>,9oa1U*!"&T3!##/:
r=8`<r=T#?rt,)=q[NE2r!N9+q?Hcrp]:*jq#gBpp'(*o!XT/<oa1F%!=KP<$iLS6')W@=&H!(:%K$Y2
$Mt,*#5J6"!<E'!!<N;t!r)ll"SDrl#65#&#ltD?p'Uj5q%!<8r=Sr=r"&]7q@*6.q[!''q#L0jq#^9m
q#g[$p'(-poEbO+$2+`/%MB-Wr!rZ<r"8i<r"&]7q[E?/q[!$&q#L6l!<N<#!WrK*!s86"p&t*n!=&f&
#PADq$N^eG')N1;')W@>&H!(9%K$Y2$Mt,-#6+o&!;Z`l!W`B)q#gBpp'(-p!XT/<q$@*1$OQG5!tG\K
')W7<')W@>&H!(:%JpS1$N(2+#5\B$!<Dorq>p^#!s8<$!<`N$"SDrn#6>,9oa10sr=/f?r=/f?rY#,@
r"/f;q[NE2q?m**q?Hcrq#U9mp]L9opBC-nq?[-0rX&T4p'^^,!##8@r=]#?r=Ji:r!iN3q[33+r!!0%
#5S>q!Vc`l"8;rm"oS]##PSN*$OQP8pC76;%M&FMr"8i<r"&Z6r!`H0q[!!%quHNn!<N;u!qufm"9J`1
"S`/p#PJH+$OI1Iq?m<6$hXu1&e=jQr"8l=q[`Q5r!`H0r!3<-#l=i&!<*#s!Vlct!s8<$p]U9opBL^*
#PeZ/$OI+I$24i"%KI,l~>

%%EndBinary
grestore
np
458.055 484.416 mo
458.055 488.306 li
432.121 484.416 mo
432.121 488.306 li
406.188 484.416 mo
406.188 488.306 li
380.254 484.416 mo
380.254 488.306 li
354.322 484.416 mo
354.322 488.306 li
328.388 484.416 mo
328.388 488.306 li
302.454 484.416 mo
302.454 488.306 li
276.521 484.416 mo
276.521 488.306 li
250.589 484.416 mo
250.589 488.306 li
224.655 484.416 mo
224.655 488.306 li
198.721 484.416 mo
198.721 488.306 li
172.789 484.416 mo
172.789 488.306 li
146.854 484.416 mo
146.854 488.306 li
120.922 484.416 mo
120.922 488.306 li
94.9885 484.416 mo
94.9885 488.306 li
71.6485 484.416 mo
71.6485 488.306 li
458.055 827.416 mo
458.055 823.526 li
432.121 827.416 mo
432.121 823.526 li
406.188 827.416 mo
406.188 823.526 li
380.254 827.416 mo
380.254 823.526 li
354.322 827.416 mo
354.322 823.526 li
328.388 827.416 mo
328.388 823.526 li
302.454 827.416 mo
302.454 823.526 li
276.521 827.416 mo
276.521 823.526 li
250.589 827.416 mo
250.589 823.526 li
224.655 827.416 mo
224.655 823.526 li
198.721 827.416 mo
198.721 823.526 li
172.789 827.416 mo
172.789 823.526 li
146.854 827.416 mo
146.854 823.526 li
120.922 827.416 mo
120.922 823.526 li
94.9885 827.416 mo
94.9885 823.526 li
71.6485 827.416 mo
71.6485 823.526 li
70.3515 484.416 mo
459.352 484.416 li
70.3515 827.416 mo
459.352 827.416 li
1 /1 /CSD get_res sepcs
.851 sep
@
459.352 826.273 mo
455.461 826.273 li
459.352 803.406 mo
455.461 803.406 li
459.352 780.539 mo
455.461 780.539 li
459.352 757.673 mo
455.461 757.673 li
459.352 734.806 mo
455.461 734.806 li
459.352 711.939 mo
455.461 711.939 li
459.352 689.073 mo
455.461 689.073 li
459.352 666.206 mo
455.461 666.206 li
459.352 643.339 mo
455.461 643.339 li
459.352 620.473 mo
455.461 620.473 li
459.352 597.606 mo
455.461 597.606 li
459.352 574.739 mo
455.461 574.739 li
459.352 551.873 mo
455.461 551.873 li
459.352 529.006 mo
455.461 529.006 li
459.352 506.139 mo
455.461 506.139 li
459.352 485.559 mo
455.461 485.559 li
70.3515 826.273 mo
74.2415 826.273 li
70.3515 803.406 mo
74.2415 803.406 li
70.3515 780.539 mo
74.2415 780.539 li
70.3515 757.673 mo
74.2415 757.673 li
70.3515 734.806 mo
74.2415 734.806 li
70.3515 711.939 mo
74.2415 711.939 li
70.3515 689.073 mo
74.2415 689.073 li
70.3515 666.206 mo
74.2415 666.206 li
70.3515 643.339 mo
74.2415 643.339 li
70.3515 620.473 mo
74.2415 620.473 li
70.3515 597.606 mo
74.2415 597.606 li
70.3515 574.739 mo
74.2415 574.739 li
70.3515 551.873 mo
74.2415 551.873 li
70.3515 529.006 mo
74.2415 529.006 li
70.3515 506.139 mo
74.2415 506.139 li
70.3515 485.559 mo
74.2415 485.559 li
459.352 484.416 mo
459.352 827.416 li
70.3515 484.416 mo
70.3515 827.416 li
@
497.352 827.416 mo
497.352 484.416 li
477.352 827.416 mo
477.352 484.416 li
477.352 484.416 mo
497.352 484.416 li
477.352 827.416 mo
497.352 827.416 li
@
gsave
477.352 827.416 mo
497.352 827.416 li
497.352 484.416 li
cp
clp
477.352 827.416 mo
497.352 827.416 li
497.352 484.416 li
477.352 484.416 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 477.352 69.5393 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
gsave
477.352 484.416 mo
477.352 827.416 li
497.352 484.416 li
cp
clp
477.352 827.416 mo
497.352 827.416 li
497.352 484.416 li
477.352 484.416 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[20 0 0 343 477.352 69.5393 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 686 
/M[40 0 0 -686 0 686 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe%biKaWJ?Jd[/<Jd[/<Jd[/<Jd[/<Jd^$8YR,mfJdI#8JdI#8JdI#8
JdI#8nHjdR\-^=`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4N<f.\Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd(*:U'-&N
JcpZ.JcpZ.JcpZ.nH=FHJcpZ.`WWsWJcgT,JcgT,JcgT,JcgT,JcgT,RfhjUJc^N*Jc^N*Jc^N*Jc^N*
Jc^N*JcbBBPQ?@:JcUH(JcUH(nH"4BJcUH(JcUH(e,c`QJcLB&JcLB&JcLB&JcLB&JcLB&JcGcNK*Ho3
Jd-f2Jd-f2Jd-f2Jd-f2Jd0a0XpBUbJd?r6nHa^PJd?r6Jd?r6Jd?r6\d6CbJdR):JdR):JdR):JdR):
JdR):NsbLfJdd5>Jdd5>Jdd5>Jdd5>Jdd5>JdgZJTFHJ^nI:'ZJdm;@Jdm;@Jdm;@Jdm;@a:5`lJe*GD
Je*GDJe*GDJe*GDJe*GDSIaioJe3MFJe3MFJe3MFJe3MFJe3MFJe7G`Je<SHJe<SHJe<SHJe<SHJe<SH
Je?QGXV-3uJeEYJJeEYJJeEYJJeEYJJeEYJg(Jo~>

%%EndBinary
grestore
np
grestore
497.352 509.873 mo
493.921 509.873 li
497.352 549.791 mo
493.921 549.791 li
497.352 589.708 mo
493.921 589.708 li
497.352 629.625 mo
493.921 629.625 li
497.352 669.543 mo
493.921 669.543 li
497.352 709.46 mo
493.921 709.46 li
497.352 749.378 mo
493.921 749.378 li
497.352 789.295 mo
493.921 789.295 li
497.352 827.416 mo
497.352 484.416 li
@
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf501.156 792.787 mo(0.01)[6.672 3.336 6.67203 0 ]xsh501.156 752.875 mo(0.02)[6.672 3.336 6.67203 0 ]xsh501.156 712.951 mo(0.03)[6.672 3.336 6.67203 0 ]xsh501.156 673.039 mo(0.04)[6.672 3.336 6.67203 0 ]xsh501.156 633.115 mo(0.05)[6.672 3.336 6.67203 0 ]xsh501.156 593.203 mo(0.06)[6.672 3.336 6.67203 0 ]xsh501.156 553.279 mo(0.07)[6.672 3.336 6.67203 0 ]xsh501.156 513.367 mo(0.08)[6.672 3.336 6.67203 0 ]xshgsave
0 0 mo
1088.95 0 li
1088.95 896.955 li
0 896.955 li
cp
clp
497.352 827.416 mo
497.352 484.416 li
477.352 827.416 mo
477.352 484.416 li
477.352 827.416 mo
497.352 827.416 li
477.352 484.416 mo
497.352 484.416 li
1 /1 /CSD get_res sepcs
.851 sep
@
497.352 484.416 mo
497.352 484.416 li
497.352 827.416 mo
497.352 827.416 li
477.352 484.416 mo
477.352 484.416 li
477.352 827.416 mo
477.352 827.416 li
1 /1 /CSD get_res sepcs
.8 sep
@
1004.89 482.553 mo
615.886 482.553 li
615.886 825.553 li
1004.89 825.553 li
cp
1 /1 /CSD get_res sepcs
0 sep
f
1042.89 482.553 mo
1042.89 482.553 li
1042.89 825.553 mo
1042.89 825.553 li
1022.89 482.553 mo
1022.89 482.553 li
1022.89 825.553 mo
1022.89 825.553 li
1 /1 /CSD get_res sepcs
.8 sep
@
.912474 .787625 .619837 .97467 cmyk
%ADOBeginSubsetFont: GAAAAA+Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /GAAAAA+Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000003886670676d00000000000004b400000b97
676c7966e2e7e4d000006148000003f868656164d5fb467e0000104c0000
003668686561000000000000108400000024686d747800000000000010a8
000022546c6f636100218a68000032fc000022586d617870000000000000
5554000000206e616d650000000000005574000008007072657000000000
00005d74000003d367646972000000000000000000000000000304f702bc
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300200009
feff0600fea4003d07ae01db2000019f4f010000044205c2000000200000
05c0001105c2002d0597001d0442001d0000ffda0000ffdb0000ffdafe53
ffef05d0000afffdffed03340000012200000122dffb011400af000700b7
007e000400d200aa0109002300ed013200d9011d012a00d800fe00db00e2
001a008b00a0001a004500e801f6000900e90128013200360082009e009f
ff700070003f003f00e801050015003800e9ff7bffc8fff90042008a00c4
01070113011dffb9002f00870087009a009c010c0262ffb10018004c0077
0080008200c900daffb2ffea001a003600e50111012f043bffdd00020005
001a0039008900aa00b701210123012a015bffe5000200180023005c00aa
ff4dff76ffb2ffef001a002f004e007b008a00e1011f0126012b019a01de
03edff80ff8e0007001c004e005500630063006d00810098009c00ad011f
01260162041c051500390044004b0063008e00cc00e800f2010001290142
017802d503ea03f0043b049affc400050055005c0060009f0103011d0124
01550164017001ad01b401c301f602370261033903d5047004a100020055
008800a100bd00c700d300dd00eb00ed00fa00fd0104012b013e014f017b
019d01ad01e20233025d027d028c02da02ef033103de0407048b058505bb
ff04ffd5fffa0007001e002a003b004700510058006500650066006e0075
007f00840107009700b100c300cc00df00df010a0110012f013101470154
015b016b0179009101a401ba01dc01e401e601e901f60213021f0223022f
0276027d0282028902ad02b202b902ed03110374037d03c003de03f60415
045d04c004c004df052d0574061c064b0751fe94fedfff2dff90ff9affea
0016001600240029002d003e0104006d006d008400870089008e009c00a4
00ab00ae00b200b2fffb013900c400d100df00e100ef00f70121011c011c
012101320138015001510154016c016d017f019801a401aa01b601ba01bb
01bb00d701d701fb01fb01fe00190209022d025b026102790279029a0098
02d302da02ef030c03210328032d034b0353fff103ad03b103f20425045a
0471047b048a0498049f051c053d0557055a0570059505b605cb05d605ef
05f4061d068706a406b406d307080734079807fe012201320120012500b4
00be0082009603700132012400430184011d015600cc010500ed00c500fb
00f900c000a7011d00fe035500880026ffa100b8ff8800dd00bd00b5037c
003c00910293024aff3f03a803090132fff700820030002a002a002a002a
002a002a402a292827262524232221201f1e1d1c1b1a1918171615141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d
6818b0004360442d2c45b01a234445b01923442d2c2045b00325456164b0
50515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b000
4360442d2c20b0032552582359212d2c69b04061b0008b0c6423648bb840
0062600c642364615c58b0036159b002602d2c45b0112bb0172344b0177a
e5182d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5
182d2cb002254661658a46b040608b482d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b0005058b21a
401a4523604459b0005258b219401945236044592d2cb9187e3b210b2d2c
b92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b
2d2cb9187ec4e00b2d2c4b525845441b2121592d2c0120b003252349b040
60b0206320b000525823b002253823b002256538008a63381b2121212121
59012d2c456920b00943b0022660b00325b005254961b0805358b2194019
4523616844b21a401a4523606a44b209191a45652345604259b00943608a
103a2d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2c764520b00325452361681823686044
2d2c7645b00325452361682318456860442d2c7645b00325456168234523
61442db8002a2c4bb800095058b101018e59b801ff85b800441db9000900
035f5e2db8002b2c2020456944b001602db8002c2cb8002b2a212db8002d
2c2046b003254652582359208a208a49648a204620686164b00425462068
6164525823658a592f20b00053586920b000545821b040591b6920b00054
5821b0406559593a2db8002e2c2046b00425465258238a592046206a6164
b0042546206a61645258238a592ffd2db8002f2c4b20b0032650585158b0
80441bb04044591b21212045b0c05058b0c0441b2159592db800302c2020
456944b001602020457d691844b001602db800312cb800302a2db800322c
4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b80003265358b0032545b8018050582321b8018023211bb0
03254523212321591b2159442db800332c4b535845441b2121592db80034
2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db800
352c2020456944b001602db800362cb800352a212db800372c2046b00325
4652582359208a208a49648a204620686164b00425462068616452582365
8a592f20b00053586920b000545821b040591b6920b000545821b0406559
593a2db800382c2046b00425465258238a592046206a6164b0042546206a
61645258238a592ffd2db800392c4b20b0032650585158b080441bb04044
591b21212045b0c05058b0c0441b2159592db8003a2c2020456944b00160
2020457d691844b001602db8003b2cb8003a2a2db8003c2c4b20b0032653
58b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653
582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920
b80003265358b0032545b8018050582321b8018023211bb0032545232123
21591b2159442db8003d2c4b535845441b2121592db8003e2c4bb8000950
58b101018e59b801ff85b800441db9000900035f5e2db8003f2c20204569
44b001602db800402cb8003f2a212db800412c2046b00325465258235920
8a208a49648a204620686164b004254620686164525823658a592f20b000
53586920b000545821b040591b6920b000545821b0406559593a2db80042
2c2046b00425465258238a592046206a6164b0042546206a61645258238a
592ffd2db800432c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db800442c2020456944b001602020457d6918
44b001602db800452cb800442a2db800462c4b20b003265358b0801bb040
598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b80100
8a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003265358
b0032545b8018050582321b8018023211bb003254523212321591b215944
2db800472c4b535845441b2121592db800482c4bb800095058b101018e59
b801ff85b800441db9000900035f5e2db800492c2020456944b001602db8
004a2cb800492a212db8004b2c2046b003254652582359208a208a49648a
204620686164b004254620686164525823658a592f20b00053586920b000
545821b040591b6920b000545821b0406559593a2db8004c2c2046b00425
465258238a592046206a6164b0042546206a61645258238a592ffd2db800
4d2c4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0
441b2159592db8004e2c2020456944b001602020457d691844b001602db8
004f2cb8004e2a2db800502c4b20b003265358b0801bb040598a8a20b003
2653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800512c4b
535845441b2121592db800522c4bb800095058b101018e59b801ff85b800
441db9000900035f5e2db800532c2020456944b001602db800542cb80053
2a212db800552c2046b003254652582359208a208a49648a204620686164
b004254620686164525823658a592f20b00053586920b000545821b04059
1b6920b000545821b0406559593a2db800562c2046b00425465258238a59
2046206a6164b0042546206a61645258238a592ffd2db800572c4b20b003
2650585158b080441bb04044591b21212045b0c05058b0c0441b2159592d
b800582c2020456944b001602020457d691844b001602db800592cb80058
2a2db8005a2c4b20b003265358b0401bb000598a8a20b0032653582321b0
808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003265358
2321b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8
0003265358b0032545b8018050582321b8018023211bb003254523212321
591b2159442db8005b2c4b535845441b2121592db8005c2c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db8005d2c2020456944
b001602db8005e2cb8005d2a212db8005f2c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db800602c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db800612c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db800622c2020456944b001602020457d691844
b001602db800632cb800622a2db800642c4b20b003265358b0401bb00059
8a8a20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a
8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321
b801408a8a1b8a235920b80003265358b0032545b8018050582321b80180
23211bb003254523212321591b2159442db800652c4b535845441b212159
2d0000010000000100008dbbe59b5f0f3cf50011080000000000a2272e80
00000000d154cd92f7dcfc270b7e09460001000900010001000000000001
00000629fe2900000c01f7dcfcdb0b7e0001000000000000000000000000
0000089505c7009a00000000023900000239000002aa00e103cb00a70473
000004730038071d002f05c7006f01e7006302aa005902aa0015031d002f
04ac00490239007602aa002f023900800239ff90047300400473008e0473
00400473003604730036047300360473004004730034047300360473003d
02aa00e802aa00e804ac001704ac004904ac001704e3007b07cd00c705c7
003405c700a105c7005c05c7009c055600a504e3009c0639005505c7009a
023900840473002d05c700a104e3009c06aa009705c70097063900650556
00a30639006505c700a30556005504e3002105c7009c0556002f078d001e
055600210556002304e3003402aa00800239ff9002aa002f04ac008b0473
000002aaffce0473003b04e3007b0473004704e3003f0473002f02aa0015
04e3004204e300870239008902390009047300820239008b071d008004e3
008704e3004204e3007d04e3003c031d00820473004202aa001504e3007d
0473001a0639000e0473001a0473001504000021031d0000023d006a031d
002d04ac000405c7003405c7003405c7005c055600a505c7009706390065
05c7009c0473003b0473003b0473003b0473003b0473003b0473003b0473
00470473002f0473002f0473002f0473002f023900760239ffce0239ffb6
0239ffd504e3008704e3004204e3004204e3004204e3004204e3004204e3
007d04e3007d04e3007d04e3007d047300470333005e0473004504730042
0473004102cd00910473ffc304e3008905e5001a05e5001a080000cb02aa
007602aaffd504640049080000120639004705b400190464004904640047
046400490473ffea049cffcb03f4002405b4fff706960007046400290231
007602f6002802ec000e06250031071d003804e3002a04e3006d02aa00e1
04ac00490464ffd50473001e0464004904e5fffa047300af047300000800
00bd0239000005c7003405c70034063900650800004b078d003f0473fffb
080000f10400008b0400009702390089023900840464004903f400210473
0015055600230156fea305f4004402aa00aa02aa00aa04e3001c04e3001c
047300470239007102390092040000920800000405c70034055600a505c7
0034055600a5055600a5023900760239ffb60239ffd50239ffce06390065
06390065065200690639006505c7009c05c7009c05c7009c0239008902aa
ffb602aaffa802aaffbd02aaffc902aa009a02aa004202aa001202aaffd3
02aa004202aaffb604e3fff10239ffe8055600550473004204e300340400
0021023d006a05c7001204e3006d05560023047300150556008004e30080
04ac004904ac005502aa005002aa001a02aa001206ac002f06ac005a06ac
004e047300000639005504e3004202390084055600550473004205c7005c
0473004705c7005c0473004704e3003f05c700340473003b05c700340473
003b05c700340473003b05c7005c0473004705c7005c0473004705c7009c
0600003f055600a50473002f055600a50473002f055600a50473002f0556
00a50473002f055600a50473002f0639005504e300420639005504e30042
0639005504e3004204e3004205c7009a04e3008705c7000f04e3fff1035c
fffc037100010366000a035c000c0239000b0239000306ac008404720089
0473002d027bffc905c7008e0473005804e3009c0271008b04e3009c0239
002704e3009c0356008b04e3009c0329008b05c7009704e3008705c70075
04e3005c05c7009704e3008704e300870639006504e300420639006504e3
00420639006504e3004205c700a3031d008205c70092031d006905c700a3
031d00360556005504730042055600550473004204e3002102aa001504e3
002103b8001504e3002102aaffe305c7009c04e3007d05c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d078d001e0639000e055600230473001504e300340400002104e30034
04000021055600550473004204e3002102aa0015047300360000fc910000
fc900000fc250000fc180000fc2c0000fc360000fd0d0000fc450000fcb5
0000fbd80000fc250000fd010000fc9d0000fcb50000fbfb05c700120639
005504e3004204e3009c0239008b05c700a10473008205c7009704e30087
05c700a3031d0080020e000802aa00e702aa002f023900090473008202aa
0015047300300473002e047300460473003a0000fcfb0000fc2c0000fc36
0239ffcc0239ffc905c7009704e300870000fc2b05c7002905bd00a805c7
00a804a000a805e50019055600a8080000190564003d05c7008f05c7008f
05c700b205c4003906aa008f05c7008f0639005a05c7008f055600a805c7
005a04e500190556003106ac003d0556001b05e5008f0556005a078d008f
07ab008f06aa002f078d00a8055600a805c7005a0800008f05cb00460473
003904e3004604c5008f038d0087051d00290473003506ac00100400002d
04e3008704e3008704e3008f0538003c05c7008704e3008704e5004604e3
008704e3007f04730046040000290473001d06a800460473001f04e30087
0473003f06ac008706aa008705560029066e008704a000850473004606aa
008704e30056055600a80473003504a000a8038d0087023900830239008f
0473002f05c7005a047300460239ffcf02890029080000390750003c07e9
008f070e0087023900040556004e0664001704e3002905c700b204e3008f
047300440617001004e30029055600310473001d05c7008f04e3008504e3
00a8038d00870000fd010000fd010000fd010000fd010000fbd80000fd43
0000fc9e0000fc360000fc910000fc900000fc2c0000fd0d0000fc450000
fcb50000fd430000fc250000fc250000fc360000fc360000fc180000fc54
0000fc2c0000fc180000fc2c0000fc2c0000fc2c0000fd0d0000fc2c0000
fd010000fc360000fc240000fc9e0000000002aa001504e30086071d0080
031d0081071d0080031d0082031d0081040a0046040a004702390089030b
ffd802aa001502aa0015047300190639000d0473001404e3007b04e3007b
04e3007b0473008104bc003b04bc003b05c7005b05c70012049e00480556
00a4055600560473004304c3003d0758009c0671007d0633005b023d00a5
043b00a502aa00e10494001b04730047011d004502aa00af02aa00af0b62
0004056500bd02a500bd040000970239008502aa002f0473000004e200af
04e200af06e400af06e400af02aa002f02a500bd02aa002f080000f10554
01d000000000000000000000000000000000000000000000000000000000
000000000239000002390000023900000239000002390000023900000239
000002390000023900000000000000000000000000000000000000000000
023900000239000002aafff6043b00a504e3007b02aa002f02aafff60473
00050473000005c7003404e3009c0473002e07920065065c00420000fd22
0000fd220000fd220000fd220000fc900000fc8d0000fd470000fc790000
fc990000fc940000fc860000fc9a0000fc080000fcf10000fcf70000fc80
0000fc820000fc540000fbfb0000fc810000fc810000fc810000fc820000
fc820000fc3602aa00af04e200af02aa00af02aa00af0464001304640019
04510011046e002405b4007705b400830231ff5e0231ff6e0464ff530464
ffd5046400110464001a08fa005e0816005e05c700a10239008404720084
06ab0084078f00840556002f078f002f09c8002f0c01002f078f00840556
0021078f002109c8002104e3009c05c7005c05c7009c06aa009702390089
0472008906ab008906ac00890473001a06ac001a08e5001a0b1e001a06ac
00890473001a06ac001a08e5001a0239008b0473004704e3003f071d0080
09d70048090f0058087b003f0876006d06af006d042c008b09440063073f
00680667005d05c700340473003b0239ffb60239ffb60639006504e30042
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d05c7009c04e3007d05c700340473003b05c700340473003b08000012
071d00380639005504e3004205c700a1047300820639006504e300420639
006504e300420239ffb60a0c006d0939006808ab003f0639005505c70097
04e3008705c700340473003b08000012071d00380639004704e3002a05c7
00340473003605c700340473003b055600a50473002f055600a50473002f
0239ff1d0239ff190239ffc60239ffcc0639006504e300420639006504e3
004205c700a3031dffaa05c700a3031d005e05c7009c04e3005c05c7009c
04e3007d05c7009a04e3008705c700340473003b055600a50473002f0639
006504e300420639006504e300420639006504e300420639006504e30042
0556002304730015040000970239008405c700340473003b05c700a104e3
007b05c700a104e3007b05c700a104e3007b05c7005c0473004705c7009c
04e3003f05c7009c04e3003f05c7009c04e3003f05c7009c04e3003f05c7
009c04e3003f055600a50473002f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f04e3009c02aa00150639005504e3
004205c7009a04e3008705c7009a04e3008705c7009a04e3008705c70082
04e3006605c7009a04e300870239ffa80239ffa00239ffd90239ffe905c7
00a10473008205c700a10473008205c700a10473008204e3009c0239008b
04e3009c0239ffbd04e3009c0239ffbd04e3009c0239ffae06aa0097071d
008006aa0097071d008006aa0097071d008005c7009704e3008705c70097
04e3008705c7009704e3008705c7009704e300870639006504e300420639
006504e300420639006504e300420639006504e30042055600a304e3007d
055600a304e3007d05c700a3031d008205c700a3031d008205c700a3031d
005105c700a3031d00010556005504730042055600550473004205560055
047300420556005504730042055600550473004204e3002102aa001504e3
002102aa001504e3002102aaffe304e3002102aa001505c7009c04e3007d
05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3
007d0556002f0473001a0556002f0473001a078d001e0639000e078d001e
0639000e078d001e0639000e078d001e0639000e078d001e0639000e0556
00210473001a055600210473001a055600230473001504e3003404000021
04e300340400002104e300340400002104e3008702aafffc0639000e0473
001502aa001505c700340473003b05c700340473003b05d3003404ec003b
05d7ffe804a8ff8505c70034048d003b05c700340473003b05c700340473
003b05c700340473003b05c700340473003b05c700340473003b05c70034
0473003b05c700340473003b055600a50473002f055600a50473002f0556
00a50473002f057500a5047d002f0556002b04a2ffb4055600a50473002f
055600a50473002f055600a50473002f0239008402390089023900840239
00890639006504e300420639006504e300420639006504e3004206390065
04e3ffc00639006504e300420639006504e300420639006504e300420792
0065065c004207920065065c004207920065065c004207920065065c0042
07920065065c004205c7009c04e3007d05c7009c04e3007d0758009c0671
007d0758009c0671007d0758009c0671007d0758009c0671007d0758009c
0671007d0556002304730015055600230473001505560023047300150556
002304730015055600a50473002f055600a50473002f056d008605df008e
048600370486008708d9002006dd000c056d002904860027056d00290486
0027056d00860486003708d9002006dd000c054f003d040a002b05df008e
0486008705df008e048600870655005a0486005005df005b04120050056d
00170412001e056d00170412001e056d00170412001e05ac0059047a004c
074800a80600008d08000012071d003806aa0097071d008005c700a3031d
00600222ffbc05c7003705c700a204e300a205c7001b055600a204e3003d
05c700a206390068025e009305c700a20558002d071a00ae063900ba04e3
00520639006805c700a2055600a204e3002f04e500290556002705c70042
0556002d06ac007b06390044025e00040556002704e5004804d500770473
002504e3006204730077038d005204e1009a04e100810239008d0473008d
0473003104e1009a047300310400005604e5006004e3009a0473004e04e5
00600400004604e1009a05c700580473001405c7006d05c7003b0239ffe9
04e1009a023900710222ffb20000fd4802c601a401c7006a01c7006a0000
fc910000fc9001c7006a03290014032900140340006a036a006a02220006
0222008c0376006a01c7ff9e036e006a01c7ff9e08000073062500310639
fffe0239008902390084055400e1078d007b078d00e10473002f0473002f
05c700340473003b0473003b055600a50473002f055600a50473002f0556
00a50473002f0239ffbb0239ffb7023900890639006504e3004206390065
04e300420639006504e30042055600550473004205c7009c04e3007d0473
001a0758009c0671007d0602003f04e3ffff05c7000d04e30087071d0080
043f009c0460007f0400006004d9006e0356fff8048b00350602005d0473
00350655004b048600370639006502aaffef07ac001b07ac001b09b60087
0000f9290000f9d30000f9d30000f9650000f9dd0602005d047300350655
004b048600370222008c032900140464003104e300340400002104e30042
05300087052b003f04e3007704e3003f04e3004204e30087054500870271
008b078d003f03c60081031d008104e3003c04e3fffe04e3fffe0800003f
064c001504db001506b00015057f008b0555008b01a4006f01a4006f0239
008402aa010d02aafff602aa00af02aa000702aa010d02aafff602aa00af
02aa000701a4006f01a4006f02aaffef02aafff60272004402720044011d
0005018f0041018f004101e30041031d0007023a000b0272003e0272003e
0256000c0256000c025600130256001302aa002f02560025025600250256
0025023900210239000d011c00450256002b023900120256001302560013
0256000c0256000c02aa007b0272003e0000fc870000fc690000fc690000
fd260000fd260000fc2c0000fc2c0000fb4f0000fc690000fc2c0000fc87
0000fc810000fc810000000002390000000000000000000000000000031d
002f031d002f08dc00af07ac001b02aa00e809c6007b07ac001b071d0104
0702000602aa008002aa0080000000000000000000000000000000000000
00000000000006c5001b023a0020023a001b0239001b02390020023a001a
0239001b0239001e0256002501550018025600250155002e0155000a0272
0044023a0020023a0047023a00200239001b023a001b0239001b02390020
023a001a0239001b0239001e0256002501550018025600250155002e0155
000a06f900340639005504e3009c04e3009c0556002307d6fff70600002a
078e001104e300820800004e06ac002f05c7005c05c7006f04e5fffa0696
000707d6002407d600310556009b04e300730556009b04e3007304e30013
06390065052b009a02ad002f036dfff605c7004203060017030bffd804e3
007b04e3007b023900090239000904e3004204e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e500480629006a063b006a086e
009b081d006e078d006a07f0006a078e0070078e00480473007704730077
04730077047300770473007704730077071d006a071d00b208cc009008c4
009a0896009108c0009504e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a078e006a078e006a093d006a0935006a0907
006a0931006a078eff9e078eff9e0239008d0239008d0239ffbd0239ffc1
0239ffd10239ffc10239ffd30239ffd30425006a0425006a05d4006a05cc
006a059e006a05c8006a0425ff9e0425ff9e04e5006004e5006004e50060
04e5006004e5006004e500600800006a0800006a09af006a09a7006a0979
006a09a3006a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a071d006a08c4006a08c0006a0792ff9e05c7003b05c7
003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b07ec006a
07ec006a099b006a0993006a0965006a098f006a07ecff9e07ecff9e04e5
004804e50048047300770473007704e1009a04e1009a0239005102390056
04e5006004e5006004e1009a04e1009a05c7003b05c7003b04e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e500480899006a
0878006a0a73006a0a7c006a0a15006a0a77006a09c7006609c7006604e1
009204e1009204e1009204e1009204e1009204e1009204e1009204e10092
09c7006a09c7006a0b76006a0b6e006a0b40006a0b6a006a09c7ff9e09c7
ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b
05c7003b0a25006a0a25006a0bd4006a0bcc006a0b9e006a0bc8006a0a25
ff9e0a25ff9e04e5004804e5004804e5004804e5004804e5004804e50048
04e5004805c7003705c7003706cd000606cd008c07d8003704e1009204e1
009204e1009204e1009a04e10092076300060784008c07e2000607ca008c
080700a20239ffbf0239ffaa0239ffb60239ffb60239ffcf0239ffc9025e
ffd2025effc2043b002d0453008c04e1009a04e1009a04e1009a04e1009a
04e3009a04e3009a04e1009a04e1009a055600270556002707a500580797
008c071d006a05c7003b05c7003b05c7003b05c7003b05c7003b07f60045
082b0059086500060899008c0852003104e500480473007704e1009a0239
008d04e5006004e1009a05c7003b06cd008c0784008c07ca008c0453008c
07d4005e0775006c0842006c0239ffb604e1009a067d003d04f700db04f7
007b03220013031e002b0464003104e5004804e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e5004804e5004804e5004804e500480239ffb60239ffb60239ffb5
0239ffb60239ffb60239ffb60239ffb60239ffb60239ffb60239ffbe0239
ffbe0239ffb50239ffbe0239ffbc0239ffbe0239ffbe0239ffbe0239ffbe
04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a06cd000606cd008c0629006a086e006a078d
006a063b006a085c006a07f0006a06cd000606cd008c0629006a086e006a
078d006a063b006a085c006a07f0006a047000060453008c0453008c0425
006a05d4006a059e006a0425006a05cc006a05c8006a047000060453008c
0453008c0425006a05d4006a059e006a0425006a05cc006a05c8006a07a5
00060797008c0797008c071d006a08c4006a08c0006a071d006a08c4006a
08c0006a07a500060797008c0797008c071d006a08c4006a08c0006a071d
006a08c4006a08c0006a05c700a305c7005c063900650239003b05aa008f
055600a305c7004a0000fcfb04b5004a04e3003f0639005a04e5004607b0
004107b4004205e5001a06ac004506ac004506ac004306ac0043063900b4
05560029082200a205e1005b06ac007b05c7006d05c700340473001a080a
00a20642005b0547001503d0001f0636003005ba002905c700a30473003b
02aaffcc04ac009a0425009a063d009a0524008705c700a10473008204e3
00340400002108d9ffef06ddfff7054f0062040a0033056d00a00412006a
05df00a20486007c05df005f0412002c04f8002204120028056dfff80412
ffe105ac00a0047a006205ac00a0047a0062055600230556002304d900ac
037c007505ac00a004d7006206e300a00552006a077600a205d9007c0556
0023055600230731001305d100230767002505f800250767002505f80025
075b00360543001b05df00a20486007c0473003b054f00a6054f00a606ac
007b04f0005b088a003e06a6003305c7003904e1001d05eb002f04e3001a
04730047054f0062040a003305f10022049c001402390089056dfff80412
ffe10556002f05c7003405c7005c0473004704e3fff104e3002102390059
031e002b04e30021055600a304e3007b04e3007b055600a50473002f0473
002d0239fff305c7009c01a9001a01a9001a02aa000c02aa000c02aa0007
02aaffe102aa00e802aa002402aa0024067d0057067d003d067d00ad02aa
00e8067d003d067d005c067d011002aa00e802aa00e8063900680412002c
0412002c055600a504e3008005c7005c06aa0097063000970548001605c7
005c05c7005c05c7005c04730047047300470473004704e3003f061b003a
06a80039062e003b0384002b062200240549003b04e5004f02aa00bf02aa
00bf02aa00bf02aa00bf025d003d025e003d03cc000903cc000903c30000
03c3000003c3000004c2001303fe0027043c005c04440078044400780307
0055034f0012070f003e0662004405fe00350000f7dc0698004a05450049
01ec004e01f4004e01b3002a01b2000c01d3002b01d3001a033c001f0343
001f03420013033f0013033f001302ff004e0224000a0224000b07ec003d
0982004e0933004b093300020149004e0485002505d2000705d1000d04d1
0014047a00200224000a0224000b044b0041044b004104290041038c0008
049e00440000fb230000fc720000fb870000fc560000fc4f0000fa110000
fcaf0000fe390000fc470000fc100000f9d30000fc5e04cc003c04cc0038
0468003c046800380821001b04a60021044400220533003b069a0037057f
003a071d006a08c4006a08c0006a05c7003705c70037025effd3025effd2
0556002705560027045f001605e5001a05e5001a05e5001a0800ffeb0800
ffeb080003b40800038c080003b40800038c0800ffe90800ffe9080003b4
0800038c0800ffe90800ffe908000000045f0016011d0045023a001e023a
001802720021023a000d023a001805c7005c0639005505c7005c045e0023
063c002f04e3002105c7003405320053062500320508003205c70058071d
008006420033067800390832003604b5004a04b5004a0347004203430047
0346004103430047034600570344004f034600570344004f03a100570394
0057039400570394005703a1005703a0000d039400000394000003940000
03a0000d03e9005703dd005703dd005703dd005703ea00570397000303fc
003803fc00290412001505a8003106de002e039b00730000fbf40000fbf4
0000fbe00000fbe00000fbe00000fbe00000fb9e0000fb9e0000fcf104cc
0038046800380aac0065095600420444007804440078044400780329002a
0329002a035d002a050d0028037800570378002d032900210329002102de
003202de00320378002f019400610329005c050d005b037800600378002f
032900320378002f0378002f0378005901e4000f037800590383003a050d
005b03290012036e00540329001a0378004604f40052066f003604f50052
04e3004204e300410501003b04fe003d0530003b078e00420329000e0194
00610236005c0378005903290012036e00540329001a0378006d0329000e
040a00460604001202390089043c005c0898002907240037052c00210558
001d0320000e052b002303730017031c000f031f00100239009204000092
0239008504000097023900920400009202390085040000970519001b0702
00090310007e05d500a208c00022047300400351002e0493006004730036
04730036047300360473004004730034046000360473003d03cc000903cc
000903cc0009046d001603a2003a044d003804b2003a0797003a0454003a
0459003a05a0003a079e003a04d2003a042c003a090a003a0459003a047e
006b06e2003a044f003a0490003f0672003a043c006b0616003a06dc003a
0630003a0467003a0678003a043d003a0485003a042d006b0497003a046e
003a0442003a04aa003a043f006b0657003a03c0003a0568003a04c3003a
0469003a0409003a0463003a06fc003a041c00bc04d500b10473003e0473
003100000000000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
00000184000002680000034c000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000100000895007a0009006c00080002001000100066000007e8
0b9700040001000000450342000100000000000000500000000100000000
0001000900500001000000000002000400590001000000000003002401ad
0001000000000004000e01d1000100000000000500080298000100000000
0006000e02a00001000000000007003202ae0001000000000012000e0457
00010000000001000009046500010000000001010010046e000100000000
0102000e047e00010000000001030014048c0001000000000104001204a0
0001000000000105000904b20001000000010004000e01df000100000001
0007002f02e00001000000020004000e01ed0001000000020007003c030f
0001000000030004001301fb00010000000300070030034b000100000004
0004000d020e0001000000040007003a037b0001000000050004000d021b
0001000000050007003603b5000100000006000400110228000100000006
0007003003eb0001000000070007003c041b000100000008000400130239
00010000000900040011024c00010000000d00040010025d00010004000c
0004000e026d00010004001f00040010027b00010005000a0004000d028b
0003000104030002000e01170003000104040002000400ad000300010405
0002000801390003000104060002000600c700030001040700020008006d
0003000104080002000c014900030001040900020008005d00030001040b
0002000c00cd00030001040c00020008006500030001040d000200060155
00030001040e00020010015b000300010410000200120087000300010411
000200080075000300010412000200060099000300010413000200060081
0003000104140002000600d90003000104150002000800df000300010416
0002000e00b90003000104180002000a017f0003000104190002000c00f5
00030001041a00020014012500030001041b00020008018900030001041d
00020006010100030001041e00020006010700030001041f0002000a010d
0003000104210002000a016b0003000104220002000c019100030001042a
0002000601a70003000104390002000a019d00030001043e0002000a0175
00030001080400020004007d000300010809000200080141000300010816
0002000e00e7000300010c010002000800b1000300010c0a0002000e009f
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636142
6f6c640042006f006c00640047007200610073004600650074007430dc30
fc30eb30c97c974f53005600650074004700720061007300730065007400
74006fbcfcb4dcccb4004e0065006700720069007400617c979ad4063906
31064a0636004e00650067007200690074006f004600650064004c006900
680061007600610046006500740042006f006c0064004e00650067007200
690074006f041604380440043d044b04390046006500740e2b0e190e3200
4b0061006c0131006e004e0065006700720065007400610050006f006400
650062006c006a0061006e00690042006f006c00640042006f006c006403
8803bd03c403bf03bd03b105e205d105d4004600e9006c006b00f6007600
e900720054006500620061006c0054006500620061006c0041006c006400
69006e0042006f006c0064041604380440043d04380439092c094b093209
4d092101101ead006d48656c76657469636120426f6c643b2031302e3064
3465313b20323031352d30342d313648656c76657469636120426f6c6448
656c766574696361204772617348656c766574696361204665747448656c
7665746963612067726173736574746f48656c7665746963612076657448
656c7665746963612046657448656c766574696361204e65677269746148
656c7665746963612043617272656761646f48656c766574696361204861
6c7666657448656c766574696361206c696861766148656c766574696361
20c3d3e8cf48656c76657469636120c8d1ccd3cae748656c766574696361
20f2e1e431302e306434653148656c7665746963612d426f6c6448656c76
6574696361206973206120726567697374657265642074726164656d6172
6b206f66204c696e6f7479706520414748656c7665746963612065737420
756e65206d617271756520648e706f738e65206465204c696e6f74797065
20414748656c766574696361206973742065696e2065696e676574726167
656e657320576172656e7a65696368656e20646572204c696e6f74797065
20414748656c766574696361208f20756e206d61726368696f2072656769
73747261746f206469204c696e6f7479706520414748656c766574696361
2069732065656e20676572656769737472656572642068616e64656c736d
65726b2076616e204c696e6f7479706520414748656c766574696361208a
722065747420726567697374726572617420766172756d8a726b6520669a
72204c696e6f7479706520414748656c76657469636120657320756e6120
6d617263612072656769737472616461206465204c696e6f747970652041
4748656c7665746963612065722065742072656769737472657265742076
6172656dbe726b652074696c68bf72656e6465204c696e6f747970652041
4748656c76657469636120426f6c644c6967617475726573436f6d6d6f6e
204c69676174757265734e756d6265722053706163696e6750726f706f72
74696f6e616c204e756d626572734d6f6e6f737061636564204e756d6265
72734e6f204368616e6765000000b8005c2bb800522bb800482bb8003e2b
b800342bb8002a2bb10840ba019000145df44009011f04000b1fd819eebe
012e000d00e6012e000d00b0012e400c0d000963833c1f63838348294109
014b00370401001f014500240401001f0144b224ab1fb8013eb224231fb8
013db224231fb80102b2371d1fb80100400937241ffd37621ffc37b80801
401b1ff824931ff724931ff6243f1ff524311fd1371d1fd037471fcd41b8
0801b21fcb2ab80201b21fca24b80401400f1fc824811fb537291fb4373b
1fb227b80401b21fb141b80401b61fa437811fa384b80401b21fa22ab804
01b21fa124b8019ab21fa024b8019ab61f9f243f1f9683b80401b21f9527
b80401b21f8227b80401b21f7084b80801b21f6fb3b80801b21f6eb3b802
abb61f6d24261f6224b80101400b1f5d246c1f5c24391f5441b80125b21f
4d27b80401b61f4c27cd1f4b41b80401b21f4024b8019ab21f3683b80401
b21f3524b80201b21f3224b8019ab61f2c24bb1f2884b80801b21f2241b8
040140131f20244c1f1d24261f2ca0961f2c245e1f412ab801a8b748282a
2448279636b801f4b21f4d27b801f4b21f9527b801f4b21f6e27b801f4b2
1f6327bd01a700470029015a00250199b348296fb3b80190b21f83b3b801
9ab348283725b803e840121fb327482784274827362748272527482755b8
0154402c0797076407550733072b072907260721071e071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b806008516763f183f123e113946443e113946443e113946
443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff
1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b35279eb5645652345
6023456560234560b08b766818b080622020b1eb794565234520b0032660
62636820b003266165b079236544b0eb234420b152564565234520b00326
6062636820b003266165b056236544b0522344b10056455458b156406544
b25240524523614459b35045484e456523456023456560234560b0897668
18b080622020b148454565234520b003266062636820b003266165b04523
6544b048234420b1504e4565234520b003266062636820b003266165b04e
236544b0502344b1004e455458b14e406544b250405045236144592b2b45
6953420000>
[1017 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 104 36 <00030034000005a805c20002000a000b00dc406b6802012705280a380637
094806680a780a880488069a0395049806aa03a504a806b801b80ac801c8
0ad803d80a150107060602000809090200080a01070502140a0a25120909
02140505251206060207082a010000020a0b04030206090a0305080b0d17
171a0b0a040605b80114b2090302b80114b60a190c657572182b764e10f4
184dfd3939fd39391139194e456544e6182f003f173c4d3f3c3c1239392f
3cfd3c05872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b0
03c01bb003c4591112393912393987103c3c07103c3c3130015d005d0121
0b012101210321032101022f0176b8ab015c020afeb25ffde166febe02ba
022d02440151fa3e012ffed105c2>GAAAAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>GAAAAA+Helvetica-Bold AddT42Char 
GAAAAA+Helvetica-Bold /CharStrings get begin
/A 36 def
end
GAAAAA+Helvetica-Bold /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
/GZXZLZ+Helvetica-Bold /GAAAAA+Helvetica-Bold findfont ct_VMDictPut/GZXZLZ+Helvetica-Bold*1 [65{/.notdef}rp /A 190{/.notdef}rp]GZXZLZ+Helvetica-Bold nfGZXZLZ+Helvetica-Bold*1 [30 0 0 -30 0 0 ]msf70.0806 33.0756 mo(A)shgrestore
.912474 .787625 .619837 .97467 cmyk
%ADOBeginSubsetFont: GAAAAA+Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GZXZLZ+Helvetica-Bold gcheck setglobal} if
1 388 37 <000300a10000056105c20009001400290059402ca904a707a71203771687
16021c0a2a010127002a28020b2a27081c100536184f10371f1a2b000b25
27192a2bbc011e00210052012a00182b2b4ef44dfd3c4e10f64dedf4ed12
39003fed3ffd12392ffd393130015d005d01112132363534272623011121
323736353427262700171615140706071e0115140706070e012321112101
c7016a617950456bfebc016a6136625f35600146714444264a7173422a3f
47c171fd6402cc04c2febb495d672117fdc7fe771a3088732b1801033599
5e8387522e2629b27f8368452f362805c200>GZXZLZ+Helvetica-Bold AddT42Char 
1 616 38 <0002005cffd7057b05ef001e001f00744029570a94079408035b02591b58
1d660477018905a914b204b70ac604c70bda02db14dd18df1bf8181017b8
010b40231a08081a0c411f030312411a091f16371708371f1e071a210f37
1e1920219921ad56182b2b4ef44ded4e10f64d1139edd4ed2f003fed3f3c
ed12392f10ed3130015d005d123736212017161721262726232202151416
33323736372106002120272611015ccfb401160174ac5f07fecc1e2f54a5
a8c2cd9ea2552f1f013128feb7fefffec2b6b602900457d1b6f4898a6a36
60fef1f8f8f76a3972f1fed2cccd0165031a>GZXZLZ+Helvetica-Bold AddT42Char 
1 844 39 <0002009c0000057b05c2000900170053403277120107082707270c58126a
127b048c038a048a12980398049812ad030d022a15092a16021508063710
1a19012515191819b80120b3215256182b2b4ef44dfd4e10f64ded003f3f
ed10ed3130015d005d011121323736353426233617161716121510070229
01112101c7011cda562f8dd2bd5b9b604d3876a0feb2fd85027b04c2fc3e
d776a3e1f1fe1e33886eff0074fedaccfeed05c20000>GZXZLZ+Helvetica-Bold AddT42Char 
GZXZLZ+Helvetica-Bold /CharStrings get begin
/B 37 def
/C 38 def
/D 39 def
end
GZXZLZ+Helvetica-Bold /Encoding get
dup 66 /B put
dup 67 /C put
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GZXZLZ+Helvetica-Bold*1 [65{/.notdef}rp /A /B /C /D 187{/.notdef}rp]GZXZLZ+Helvetica-Bold nfGZXZLZ+Helvetica-Bold*1 [30 0 0 -30 0 0 ]msf74.2417 475.413 mo(C)sh618.922 36.3325 mo(B)sh618.922 475.413 mo(D)sh617.383 827.695 mo
1007.39 827.695 li
1007.39 485.137 li
617.383 485.137 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[390.005 0 0 342.558 617.383 69.2603 ]ct
snap_to_device
<<
/T 1
/W 148 
/H 148 
/M[148 0 0 -148 0 148 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
%h\jB!<E0$!<<-$!WW6$!WE'*!Wi?%!<<-#!Wi9#)?Bj?!!!$#!X8Z,"on]*!<<-)"onW(!<rN(r;d--
!<E0%!!WK&!!NQ2#QXo2rW"DP"p+l2!<rT+!X8]3!<E0$!WiQ5!<<3&!!iQ,"p>23!<rf2!s8`.!rrB&
!<`9$$3187!sS`0!!!$%r;Zg1rVus"!<*!'!!!3'!WW6"!WE-H#QXo+!WW9%!WW9+"p"c+!<`K)"p4i0
!XJc+"pP)4!X8W,!<N0".00\S#QY#3!!*0'!<WN3!!!'#$3LD5!WiB&#RCJ6"p+i.!<WE)!W`E&!@\!M
!sT)>#QXu2!<E9)!<`E/#R1P8!<rN.!!!3-!WiQ,!<<B-"onW9rW!*&!!3?*!;lj&"p"c0!<<<0rW!!#
!<W6#$3gP3!s8N/"pb27rW)p!+UA,T!<<*$!s8T*!!W]0!X8`."pP/6!=/r3"pbA4"oniU!<rT+!!*9,
!=/r8!!a#=!<r`/!!ic1!W`<("98E&!WW<'!!WQ,!rW*r"9o27!=/].!<rQ1!X8o2$4$Y4!"o;4!!*9*
!<WN.!!WH.!<NH-!<<0$#Qau-!!!$(!s/Z-#QOr0"onZ.#Rgb;"p"])!WWE*!X&K'"q!No!!E9+"98W1
!!NQ/!=/],":>/2"p+i+"p>&0"p"l-!<NB($4I%B"pP/5!<rr7$ig;2!WrH)$3L>4!!3$(3",fl!<WB,
%0cq8!!*'#!!**#!!*]4!!*'"!<E0)!!!*&!!E<'!XJf."pbD6!!3-)!Wi?%!sAN&(]ag@!Wi?+!!*0%
!WiB)!X]2=!!N]0"9SQ,0*;=X"TSQ(#64`+!<EN9#RCV=!!*?,#Qb89!=8f.!!3?,!<E?)!!NN.!sf;8
!r`0=!s/H."p+f2$4$_:"p+c0!=Sr2"ono1!X&K(rW!KB!<NH+"pb50$4$h<!X8Z++9hfI!s/Z1!!**%
"p+l,!<N6%"p"u8$3UD3!=/f/!X/K&$NUG?!WWE+!!*3,#6"Wn!W`<*!t#,9"ono5!!iT*$3^\:!sAW+
"9AN*!rrE*"p"`)"9Jo3!rr<&!!36+"pP21":YD:!=T&9!=Su2!=Ar6"p,,5r;eAJ!<<*#&dA@;!!W]1
!!*E2"onW(!rrN0!!30$!WrH+!X8o3!W`<'!!N9$&degC#R1G6#R1D7#S-n9!X8i1rW"k]!sel4!s&H(
!<`T,"pP&3!<<6,!t558!X8Z7#Qt/0!!!$'#R1>7!X/c1!!!H6!<N9&"pP2/!@S'N!X8c0"pY/9!!iW.
!sSi3!<N9&!!**%"qgn;!<E0#!sSc.!!WN(!$2.C!!W]6$31,3$3:,,"pP,7!<rQ/#Qk84!<E9)!W<3U
!<<6,!s/H'!XK,;!Xo&<$j$M<!!WE*%gE(@#7:VC!rrc1!WiB'":,#8%0uq6(B=X@#R1>2#Qb#,!!iZ4
"p#,4$3gP3$N:,-!WE-)"pb8;!<iT(!)rt#"oni.!"o89!!!$"!!*E1!!!$$!<rT0!WiW3!!<3%!!*'"
$3L8/!!*?2"9JT(!<<6&"9\o2!!W]9!"Ao1"V:_:"pP/0"9nr0!sel-$j$M:#RUb:!s&Z3#6"TV!s&B%
#RU\8$3UA2$3:81!XSu0!WW9-!!EB(!<EB*!<rZ6!<E6(#R18/!<iN*#6"W6"p+c*!<N66"p"]*"pb51
rW"GU!<<3'!<WN,"p=u/"onZ*!X8Z+!!WW."onZ)$3gM5"pb83#RCV=!X8X!$3gM5!XB,8$4$\;#RCM5
"pG&1!!3E."pP,4%g<4L$3:5/#QY27#R:J7!<N?+&-)k<!WiQ+!<rQ*#QOi,!<<H-"Te`4!s8T,!=8Z*
!s/N)!<*!+"onZ."qgq@!!`W)!>>_C!sSf-!WiQ-$3C82!<<Q3!<`<&!!ZI.!WW9&!sSc/!!iQ*!Wi?&
!rr?("p>/2!<rQ*!s/f3!WiN0#R:>1!<WT-"p=r-$31,5#Rgb=$j[+=!<W`7#QOl+!!**%!t5M@!XJo4
"9A]9!s8H-,QRlP"ptA<!t#,3"pPD9!!!*%#R1;0!<Ef7!<E9'$3gn=#R4Z<!!3T0!s/Q,!<N<3!!!$"
!s/Z,!<N?'!s/Z/!!<W0#RCJ3!<NH/"p"c0!<EH3"9SW.!=/c3"U55A!!!$"!=TA<$3U>1!!*-*"p+u5
$j-q>$46e9#QOu.#QP&7r;dW7!s&E)!<rN("p#/9!sJ],!!i]7#lXf("p=r2!!*B)!'g_i&dAC;"pP&3
!s&Z0"p#&3"pP,4!s/`1"98K-"9JT0!=T/8!<NN.!!WK/"p"o4#QXr-"9Jo2"9no.#QXr)!Y>A8"oni.
!s8],!<NH0!!*0#!!i`8!=B#3$4%(;!=oG;!!WE'"qLe9#R180"q;(C!W`W."oni-!=/l:!!iT(#&=5>
!<WN+!WW6&!!*9:"p"`)!X8o1!W`K+!W`<*"p"o6!<WN3"ptD3"98W/$3C5:#RUY;"pG>:"p+o0!<E0/
"ptG7%0d(?$ipP6"Tni4"9JT*!<E?(!X8Z+!"&f1!<rZ0%0ce5!<>@g!<<0)!Wrc8!!WQ7!!3E7#Qb#;
#R(26!s8Q)"pP/6"pG24"pP21!W`9$$31/."pY/1"qgn:"TS`/!!<3)rW,%]!<<<)#Qk20!X8W1!!*9(
"98]1!X/Z-!!E<(!"&]-!=]/4!sB#7!XK28#6G/3!<WT7!!!'$!Y%0k"p589!=];=!rrE'!!E?/!X\o1
"on])#7(_B!t524!sAo9!!33-$4$h<!!*3&!sf#6!rrQ5#Qju+-NF/O!!iT0!!iZ/!!*'4!<NH*!s/T+
!!<E+!=Al/"onl6!XJc0!r`07"98Q2!=o8>!!WK)"U,)3"p4o2#6>)2$3UG2!!W]5rW3r<!s8]-!!iQ)
!<rN*#RLb>!=/c7!sSl1!WE-R!!NK0"p4o0!s/`3"p##5!<<B,!Y#A=!WiW/"p+c*$3187":>G:!WW3$
!<WN5quHd%rW*uO!sA]-!"&i2#QP24$31&3"p>23$jm%9!!WE.!seu0!WE.E#R1>3%fleB%0-Y7!!!**
!rrN,#QOo."on]+!<rf3$4R1@"p"u:!X8c5$3gP9!s&`0#QP,2"98W+"p4o/%0?e9!XJu7$3:,2"p4o-
"9\c."q1b?!!E<0!<rc7!!*9.!WrW/$3:/7"onf.!tkV=!=/l2)?BjE"98N0!sJ]*"9Ji5!<N9-!X&K(
"pG&1r;mN7!s&T5"98T0!<N?*#R183rW3o;!=T59!!*E-"9ef1$ip_?!s&B-"9ni3rW"8H"9o&4!rrB'
!!!3*!WW6(#RUS@%1!@C"98K'!X8]+!<E?.!s\`)"UY52!!**6!<<0*!!N?'"on])"p=r>!rrB,rW!*&
"pb2/!WE-7!<NK-$ipV6#QOo1"9SW,#Qk>4!r`09!<N9-"p4i*!XK&=!X&T.$4$Y5!s8`7rW+ML$31>7
"pG22!<NH+!W`9)!!*6+!<r`8!t#5>!!3?*"pb83#64r.!WWK5!Y5;4$j$J1"onl,!=o/;!!iW,!WiK/
!!WE'!=\r3+TMTK!tkV9!<rf2!<WT.!!!?-!!<3$#6Fo,!!*0-!!*0##TX$J$3:J8!!*B1$jHe@!!WN,
#R1V<!=Sr0$jZk>quIN:!s/`4"9nl1!s\i1!!3?+$3120!#GVD"p5&9"oni/!"&r3!WW<+!X8`."pk2.
0*)7X!!<Q/$3L8=!<N<,"p"`)!WW3+!!<K/!s/K'!>5A5!sT)5!Wi?1#QY2:!r`3S!s/`1!W`f5#7:M5
"pbP9!!iu8!!!E-#QOl.#R(86!!!*&$3:2.#6P8@!<<-&!=o;6"pb2/!<<N6!WW<,"9nc)rW+GL"9\c3
"pP&.!<<H/#QXo0"p>&5"98N2!=T&1!WrH*"p526!rrB'"9&<U!!*E2#QXo*!WWK-!WWi;!!WW/!<EH1
!W`W.#Rh%C!<rW."pb5<$46b5"ptG6!=/T."pb5<!WW3$(]ssN#R1G;!WiB*!<<*&!XA`,!!3?1!!N9'
!!*!#-NX>V!s8Z+!"8l8$NUP>!!*E/!!rW*!<<-0"98c2"TSl0"p+i+#6"lS!<W?'!!3-%!!*-*!rrB'
!sT#4!sAr8"p"`/&cr7?"U529$j-D/$3^J5#R1VA"9AN+&-r:<!!*'(!!*N1"on]/!s/B&<X&X-!sSc-
!sel4"p"u4!!*0-!!<Z1"p5&0$igD7"p5#5#mLG2"pbA8$jH_4!W`B3%fm";!s8i2"pb87!XA]."UGG9
!X8W/!so&3#6=f*#R187rW!K1!!WK,!<<-'!WWE,!!3c=#R1J>!s/Z4!!`B%%KQP6%06G3!Y#J="on`*
rW=hS$4I(@$46b7!X8W,!!WT0!<rT,!=/i2"oni1!=Su/"on],"9f29&.ARJ"9S`+rW4SY!<WT/#QOi*
"U4r,"pP,5"p+i1#Rgt?!<W<&!Wri<!!3Q/!!30$!=/`;!<NH+"p4o,"pP52!s&B-rW[-D&cr.9$3LJ7
!t5V@!!!$*!!<Q."Te`0!!*'.!!Nc:!=/`/!=/].!<ru6!ser.!<EB,!!3<0!<N9+!<NN."p=r-"ptPA
$3gYB!!WQ.!sJZ*!X\o7!=8f-"onf2!<WB1"onW)!s8Z<$3UD1"pP/?%0-P7#QY8;!s/B$#6Fu3!s/N)
!r`4,!seo-!X],7"p,DG!!!?,!<i`0$3gb9!<rr7"onu9!s/K)!rr<%"p"i.!W`?0!<WN1"9o,4!XJl/
$ig83":,&5#Qk)."p>,2!!!0.!s&E,!X&K,!<EH,"p5,i!s&Q+!s/W+!rrN*"pP22!WW<&":YA9!WWZ0
!!W];!WiQ+!"Ao/!!ic1!!!3(!Y#J<!<rN0rW,@f"U5&;&ci+B#QP)8!!N]<#RUh;!!W`0"pY,4!=Ar6
!X&c1!X/W*!!*E2!=/Z7!XJc1!<`B'"pbY?"p"])!<rZf!WW3+!!iu=!WWE5#Qk&6"p#&3!!WW1":>,2
#R1J="pP5:!<<<(!<rZ-!WrW4#Qau-!!ii3!<N<1!Wi?'#R1>7!WrK(r;eJW"9nr0!<ri2!!*]5!Wi?+
!!NH-!WrE(!<r`0#6Fo+!s8]."TST4"p>#.$N:8/!X&c5!rrB$!&=W\"q(S7!sel-!<N9/!!3Q/$4IOK
!!<6/#QXr/"p+c/!s&T+#QY#0"oni-!<NT2"F^a`!=B)5!X\o."p+c+%0Z_7#QY)0!!*'("T\l1"pP/6
!<N9&!!ii3!=&]6!!E<8"9A].!W`9%!!*9.":>>7!!*0+#QOi-!<NB(#QXr7!!WT1!!NQ,!<<6'!!39+
!!*0+"U,5:%0ut8!!EB4!<NZ7#QOr,!!EK,"CqW9#QY,2%13:H!<``4!!39-!!ii4"p,#5"9er9$3CP7
"p"f/!!`]8!!30&!<<*)#QXu."pG#7$3L8/!!ic1!t#A:";2+K#R1><!<rf3!!3K0":,,3!X&T4!rrK1
$3US4!#>bC"U5)4#Qk&0!!*E-#QXu2":,&/!Y,A@"pb;:!X8]+!<W<'#Q=]+!<E<-!<*1%"9AW2$j6V4
!=/]1$3CY@#QOr.$3gJ1%0?S>!sT#6"pP;8"98E'!!!$$$3g\A!s/Z,!WWK+!"9&?"pP)6!W`]B#RUY9
"p+l2$ip>2!<N<.#Q+W1#QY#0!<rf7!W`LS"Tnl."p+f/!s/Q)#RUn?!W`N0!X8W*!t#)4#RCG2#7:e>
#6>/6"Tel:"p=o,!!ic2#7LqD"oni3$4$b8"p5#7"pb>:!sSr8":>58!t>G:!!3-#!W`B'!!E?*"T\f.
!!<6%#Qb&5!s&B%"pbJI"pb;2!WiQ-!!ijZ!<rW1!WWc3!<`K1"9AN+$3C80!=B)4!X8W/!<`K*#QP,9
!<EH7!s/`4!WrE)"p4r5"pY85$jZhA!!EK+"p+c*!=Al.!Wi]9!!<6+!s/K'!s&H-!W`<%!<<?,$3gb9
!WW3&!<E0#!<<0%!WrK*!<WN,"pbA6$3:0V!<<3*#6k58$3h+G$3C;8!s&B-!s&Q*!!<?2!rrB*!<N?'
!sAZ*$31/2!<<0&!<rT+!sS`*"98W+!=Ao4$3gS@"p589"p"u8!<N6&"T\r:!X8W)$j-b;#Qk)7!"T56
#Qb#6!sSr8!WW3$"9\c1!X8]5#QkM="onZ)!W`3(:]pt&!WrK*#RCD7!<N<.$3:>>#RCD3"p5,6&dAC=
!!!-'"UG5:!s8l2!seo/"q:VB!!*'#"U4u/!<<-&!X8W+!<NB2"9ni.!!*?,!s/B$,ln2S!!!*&!<WH1
!<E9("p4i4!!<Q1!XB,>"9JW1%flk8!s8Q8"p>2;!X8Z,"p+f,"98E'!WE0'!X8i2rW6R:!<rQ+#QY#4
"98K'#QOl*%06G4!<N?*$3h+G$31/."UG)1$4$n<!s/Z,!<rQ)"9Ji3"9Si0!=Sr/"on]/#QOu-%fl\4
"p4o2"onW-$46t;!Xo24"pPJA"9eu1!<<<R!XK2?!s8Q0"V1bF":"o/":,&1!!iZ,!W`B'"Tf#7!!3E1
!!ii2!rrQ)!WiH.!WE'k%0H\8#RCP6!s/`3!!<Q3!rr]5!!33)&d&+7!rr?&!t#&/!rrZ4!W`f7$4Qt9
!!WK,!W`?,!!E<0!!<3&!sJ]4!s/H*!XJif!s8c1%0?M0#RCD1!s\u0#RUhA!<N9-!=/]/!"&`4!W`K+
#R1P:"U#)<!"&o2"Tnr0!rr?&!!*!!5l^lc!!WE'#QOl+%0-M8!!3-%!WW60!WW3)$3UA1!WiH*$3LnF
!<NN2!!30&"T\]+!!WH+!=T#2$3187$3UEO!<`E-!X\r4!!iu;!<N]2!<iZ-!X8`,#RCJ7"9AW6!<E0,
!!WW-!<EB)$jHb="UY58!sSc7!<<*'!WW9-!t5A7$4I7A#QP&5!!WE4"p"i-!WrH'!<N6$!X&K'#Qb8?
#R:>1$3L8.#Rgb7"p4o4rW!0-&cr(6!<<QN!!!$"!<N<+!<`H0"98]0!sSo1"p>24"p+i,!WW9-r;p.)
!W`9%$3CV9"9JW1#QOl.%1!4>%flk8%0cqB!tPG6#RUhA#Qk)."pb27"p=o<"q:b=!X/o=!!WN-"oni-
"9Jo2!<WT0!WiQ+!W`<'"pP&7"p,#1":.g)!<<B-!=/l6!rrE(!<Nl6&-Dn>#QYA=!=/]+"9J].#QY,5
"oo)6!=T/7!!*9("9AW4!!WW-!W`E.#QOi+!s&E*#6Fo,!XJo1"98]5rWXhP$4$bA"on]/"9nl6!<N<*
"p4o2#RUbC!!*?+!X&]/!!EK+#Qk,:!Wb^i!!<3%"ptP:!!Wc1"Te]5!WrH-!!iT4!!WN6!W`E(!s/K'
&e"dF"onu1$j-b8$j$VA!=T/4!<E93!XJc,!s8l3"TABY!sAr8!<<<0!sA]1"9o#5#7(S:!=8c-!!3<4
!!WH4!s/f1":+u-!=&Z,"ono5!X8o=!s(La!s&Z-!!WH2!WrH.!XB&6!sAf2#Qk&-!<N?(!WrQ,#Qau-
!<E6+$3gJ7#Qb21!<<*$"TSf.&.B0WrW#+f#QtA5!<rT8!X8o1"p+i+!XJu4!!3Q0!WW9&!!!?,"p,,8
#R1V:"p=u3!s&Z7!=/r4!snr-"pPD?!Wk([!s&`2$3:59!t#55!!36)!<NH.!WrE0!!WH)!!E<2"onZ0
!<E0$!sSl."p,&1!WE0!!(?no!=/c5%0I"=!<`H(#RCS>!<rQ,!=0;?!<EQ/$j$D0!"',9#QY#2!sSr3
!!W]7!rrN-!W`9$!X\o2#R185!<WN0"98W,$3C,-#mLG5!<WZ5!XJu/#YPL5!!WQ1$4$n;"pb2<!W`9%
!X/i2$3L\@!!!?.!!!$2#7(bG!!E?'#R180!!**#!X8Z.!<<<0!!!*'"9Ai3!!Wc;":,)8!!3'!)?p0D
&ci(8$j-b:!WW3)"U554!XSl.!WW9("T\]7!!!-#!_3Rt!!EH0!WWQ/!W`K-!<W<&#6PA9!X],3#QOo-
!!<<)$3:2/!X8o1"9AK."9\o5!WiH7!X8Z4!!*?+!=Ar2!<rf1!sAN,('"=8#Qt>3"pP&5!!WE'!XJf.
"p"](r<<6(rW*B0!s8T6$3gJ2!>5E^$3g\:!X&c6"p"u0!t5G@!W`B/!seo.#RUV9"p"])$3UV9"p+r.
!=T/4"pY>5&-;t<%flq>"onc3!W`E-#R1VC%0-Y6"9SZ/#64f,!!WK+$igP5$O-e9!!!?-!sSc3!s/f0
!seo3#QOl+"pP)/"onc2"98N)#QY'/"TSi1!X&Q/"UGGB!<<B*!!*0&&ci(=#QXr1#QXu,!"&c7!!`]/
!WW3'!s&H)#R(5/#R1>7!<W`7!rrB-$j6Y>!!WK)!!WH*#RCV?"p"r7"9AN%!@.^H!Y5A8!<i`/!<<H.
"q1_:#QY87!<<0'"9Si2!WW?'!WW3W"onu1"pb52!Xo27!!iQ+#S-q=!Wi]/#65#2!rrE/!<N6%$4%"?
$3:b@!!<B*!!WE-!rW*f$3C25!"8u7!=Af."p#&4!!<3.$31,/!s\f1!!3-&!<<0)#QP&5!<NE+#QOo1
!WrE/!WWK5$31)6!<NT3!!!*%!!,t&#7:S>!tYS:!W`B*%06Y5$ipP4#Qb,/#RCV7!sT)4"9SZ/!!3Q7
%0?e>!W`E0"on`2!!NB4!!iT6"p4o>!sSc6!WiW-!WW92!!NE*!s\`),mFb^%0Zb6"p>2;!s/H0"p4r/
"p+r/!!E9(!!!60$ipA2"9AW(!Ib4S!s&T2#QY8<!X]/5!!!$#!s/N+!s/H&"pbP9!sB#6!!iQ;$ipD0
$j$J;!sAT*!!E?/#lt55!=&r4$3gS;!<WB.!Wrc1!s&B+$j6t@"pP&0&c`%:"ptG4$j-J8!"&`8$3LJ6
!sJ]*!t#;7%0?Y="onu4"onW+":G8:%0He;$3UD9!!*!!DZBe>#QtJ8$3LJ6!<NZ1!=T;8!=B)5!t#&1
#7L\7!<N<0!!!$(!s/`6"q1J;!Wi?'"pP,0!<W?'"9AN,!s/f:!WrE(!!!3)!WW?(!rrE(!<WQ.#Qk>7
"oo8C!=/r8!<<6&$4$t@!!!$"$3gJ>!!!3*"o\K/!X/o6$3C87"p5>5!<NH,$N1$4!sSr<"98T,"UYA7
"p>,7#Qb,0"p"i/$3UV7":>/1!WWH-#RCJ3!<if1!X0#6!!*'$"9nl,!W`<(!Wic3%fue4#Qau+"p"`/
!sf#2&./L@$3:26#QXo,!W`HB!<``B#RCD=%0HY6!t#)0!WrE'#Qk>4!!E0"?j-`?!WW3-!!**&%KHM2
$31,1!=/Z+"pb;<"U"i1$3:24$3:59!"&`.!<Nc3!WWB*!s/l3!=/`2!=]G>$j$\8!s&f2!sS`,"ono7
!<<H2"pbJ<!s/Q-#QXo+!!"PO!<W<(!WW<."pP&/!<<-$!X&N)$NgD8&d&1>!rr?1!s/Z,!!i]2$31/;
rW*T7$3gM>$3gb;!WW63#QXr0!WE'U$3:PC!<EB-!t5A6!s8f1!XJc-#QY;<$3L80!s/K/!so#/!sSl.
$46k:!<E6+$ig>1$N:51#Q]AT"9nl-"p"f-$3LV:!XK&9"on`6!t#23$3C5.!<<0*"TSr8!!!9/!!3?1
#Qk\D!sS`/$k3LE!Y#54!!*9)!rr<&#QP,3"T\l5!<`T,"p+c+!!!$#":,&0!!<<)"9\o5#Qb,/"pb5:
!"9&6!WW<&!WiQ/$NL/6$j\3]!"8o7!rr?'!<`Z0$ipP:!!WK)!s&Q-!!*3&!!<9&#Qb)2#RUe8!!`W.
"9S].!Wr<$7g&kp$31;:"p,,;!!3?;!X8W/!<W`2!Wrc3#QOi3!WiW3$3:S9"p>,3$3C50#Qb>8$ip>1
!<<<(!<<*("9Ji/!rrE1#CZXY!X/W0!<`H4!rrN+"TSQ(!X8Z+!!*'($3:52#RCG6"T\u2!!*?+!!33(
"9SW+"pFu2"p,&1$3L81"TS`1!<<B-"9o&@!sAZ0%L`OG!<<B-"q1\<!YPM9#QXr3$NU>0#Qt/8#QP#6
!!iT-"onu6!sel6"9A].!@e?Z!<EW2!s&B(!<EH1!<<0.!!*9+$jI+C!W`<-"9AT.!!io:!X\o0"8r6$
"p"W'"pY25!!!$%%KQb7!WiK1!<<<0$j$V9rW6m9$31,.!t523!!3<)#QYA8"9AQ,$j$J6!<NH*!!*N2
"pP)@"U5#0"pP,0#QP&4!<rW,#QY>8"q1S<%fchA!!<9&!=],:"p+o3#QkD>$4$V@"p"]."q;"D%06Y?
%0?M1#6Y&5!WiB07LTJ)#QXu4"pG)2#QOi,#QOi+!W`<'!!!'#"pP29!!!3,!<<0*!W`9%%0Hk?"9J]3
!sAZ,!"',?!s&T3"pb21!Xo&2rW!K3"VLh?"9],=$3gJ9#QY#=rW*-+!!i`1rW!c>#QOo,!WrH-!sAW3
!<W?,!sT)4!WiQ3<!Ea:!!*-*"p4o/!=]&2!s/]-$NLA:"98H&!W`9&"pkJ8!s/K'!seo3"oni.!!EK/
!W`Q2$3CAA!rrZ6#6Fl+!=0)6$3L;2$j7"@":,DA!=8W((]smB!<iZ5"p#>F&-`4B!!Wc5"on`6!!<'!
#64i1#RCJ4#^ugU!<rN0"p,5=!"&`0!WiQ1!!*3(!<rN0!s8f@"ono9#QP&0"p+f4!<rc5!sAW/"p4r.
!!EE5"9Ju?"onW)!<W<)"pP,1#QY&."T\W(!Xo8;$4$b9"pb>4!<<*$!!3-$"on`*!t##0!!!*0$ipA1
"q2+K!<iQ*!>GM6"9\c1"9S`-"p+l-#QOl,"pbD3!)iq$$igG:"onf8!<EN/!X/o3!!WE,"ono4!X8r6
!X8Z/!!E]1!tGbB$4Hq:!t#;7#QOl,$4$V4$3U>2!s/N)#R1A:!WiQ1$3gV;!!!**!"Ai.%g2n;"p>#/
#QY8<"oni2!YGhB!"B2@!s8u7!<NB8"qh1ArW6d6!!*''!<WN1!=/r3"pb52!<rT6!<<0*!<r`1!!!$#
!W`K0!sAT*!W`Q,!Y>eJ"pb>9#Qk).!"&].!XK&3!rr<'"p"i4!<E0%!!WK+$jHh8!<WH3"qL_7#QOi/
!WW92$3:/-"r77D!s/W.!<<B4"98Q)!!<B*!Wr`7$N:#D#RUV>$j[%?"p"uB!"9&=#QXr-!s&K)!!<<%
!Cd.m!!30)!=/Z0!<WN,!<<3("9Ai0!<iT1!!30%"9S],!sf/5$3C2-$jm1?"onr0!<`K)!sAZ-!WW60
!WWK.!!3E3!Gqi=!!iu5!!WW.!=/f0"q:\:#lk58"9AN)!"8i4!WiB*"pP/6!<NH+#QP28$46h=!W`Z5
$j-Y5!"o84#RCP=!!<Q1!s/l6!=&l3"pb;A"p"f-":P>9!=Af.!seo-!rrN0!W`9&!X8Z4r;[!*!!W]7
$N0r+!<<3.!X/Z5"T\W+!XAW*=p#*5"pb89!<<-##Qb#0#R1A4!<W?)!!!$($ipG;#Qau5!!!'%!!NH+
"pP&0!!WH*#6Fr-!rr<&!W`?.#Qk,:!"oA7!=B5>"p"c*"qL_7$j-nB"UYA7rWX#>!rr<'!!*3&!"8i3
!W`<%!Wr]."9&Kh#Rq+E!<`H.!!E<)!s&H(!rrN2!!Wc;!=/]+$31/.!t#;@"p"]("onW)"ptD3"p"`6
!XJr8$ig\:$3:J6rWY:^!=B#8!t#2@%0?V5!<rN*$ig>/%0H\5$31&-"p"f=!<`K.!!*N1!<<0'"9\c/
!"9&3!!<93$3:5;%0m.>#RCJ5"pb)."98Q,!=&N("9ni1$3C,+/-H.Y!!!$&!!iZ-!!s&>!Wrc6!t5G=
!<<*)!<rN.$3^V<!rrN+"Te]-"p+]-&-r==!!<6&"pG28!<<-%!X/K((^L*A!s&Z0$31/6!t##6"pP)0
$4$Y5&cki6!"',;!s8Z.!s/N."ptD7"ptA4!Y#23#lk/1!"&u@!!*0%!<<-)"on`0"p+u1!rrE-!sf5@
!<s&D!<<<)!sAl0!<N<,#QP2;$jm(>!r`3<#QP25"p,56!sSl.!=&T*!s8N'!WiB)$3pJ5$jm(<!<E6+
!=/l6!XM[*!!WN+!!E<)#QOi3!!!91!<`E9!<EB)!rr?)!"929!s&Z3!<N<,!sf/5!sSf/!!3<."9nu2
"p#/="p"c,#Qb)8!<rT0#QY,0!<WZ0"pk/-'+G'E!s&K)!=/i3"9A],#Qk)5!WE'1!WW3-"p"c6!s&B'
!"&`,!WW<$#!)ec"p5,6!=T#1":P84#Qk//$igJ3!<iH/"9o,7!!!$&$3LJ5&e"jL!<rl3!!EE,"Tni4
!Wrl;!W<!(!sB&7!sSr:!r`BW$3C;2!"0&7!<E6%#Qau/$j-h@!WW32"9Ai5!<W</!Wi?/!X&K)!=/i0
"p+c)9*,5!!<<-&"p=u7"p=r/!rr<(!<r`;"p"c/"9\]*!!!3+#R1;0#QY22"98K1#RUS4!<i`5"9AN/
$j?V3$k`^D!!*-.#Qb):$N:#Y"T\]+$jlt=$3LV>#QOo-"p=r-!!<K-!<NW1!<`Z0"9\`+"TSW-!!!B.
"onZ)"onW(#QP89rW$j;!<<B,"98W1!XJu1!X&K)"T\i4!=B5B"p4o2#Qk//!<`Z0"p=r.!!**#!<E9)
!WrN*"9ni.!!<3*!"&`-!!E9'!!WE1"p5#A"UG27$3^D0$4$h9!s/T,#Qk).!"&u6"p4i6"onZ)!!*9&
"p"].#n$eA!<rT-":,#,"!%XK!X8u4!!3-&"TSN(!=]&2"9AQ/!<WE-"onZ+rWZ1!#S7(<!<`K,"9So8
!sJl1!s8`-#QP,7"p+l2"9o&1!t5/=!<W?,"Ut_>!=B):!s8T.!s8`.$igV7"VLn=!!WH-!<r`/"onZ5
"pP&-$j-V5%06J="ptVA!=/T.0ED.Z!rr?/#Qb&."p4l,!WW9(#RpqA!seo<%1!4@#QXr.!!WE4!=B59
!WWE,!X/K,3XPoi!<EB,!WrE,#Qb&9!rrT4%0ch8!WW9'!!*-&!=Ai3!!iT4$ip>.%0HY3!tYkF!<EN.
%0Qb69`PG$&dAI=!WrT.#R183!X8i0!s&T1!s&H1!<s)8!!<3$!sA]-!!*-*"9SZ+"9\o3$4I=C!!39*
#Qb#-"ptG:!"&u4!=o84$3CM4!%eNY"pP&3!<WN-#6kG8%0uq<!"&u9#R1J7!<N?'!!*9)"p,,=!X8]-
!rrZ0!<<?'!!`N)!X/T*!!N9'<<<4(!!WH+!X98C"onc-"p+u7!<EB/$3UG6!!36($3CJ;%13:>!Y587
!!!-("qM%F!<<-&"p4l,"9B#9$jI.M$4%(F#7(D3"9A]-!WWK.$NL8-!#5\B!s&Z/"q1M<!<rr4!X&Q/
!!WH-&c_t=!!EE.!<rN.!!**#"98K*rW364!sSi.!<*72!<N?-!<W<&!s&`1"onc3&d/C="q1bE!WWQ-
"p4l0$3C2/!<<3(!!*3*!WrH(!X8l6!!*K4!WWW0!X])3!!*9*!t>57"pb;3#QP,7!!*K4!"9,5#QY>@
!WW6'1'Rj^!"9&5!<`Z6!<rf2":>,4!X&N0!!**#!sAZ,#Qk84"98K(!X&c5"UY>3!<NH*rW,:e"on]/
!!EE*$46t;"p>P>!!3-)"TSQ(!W`9%!ser9$jHe6!rrT1"98c0!!!6."pt\<!<`B'!WiB*!WW9(#6"Z+
"U5#4,6IoI!!!3/#QY22"9ei6"pPJ9!sS`+!XJc.$3LA2!s])3!r`91#6Ou-!sS`*!<N?(!W<!f!<<-#
!X8f/!=/i/"UGG@$jH_6!<W`@!WrE&#R(51!!WH:"9S]2"q1P7#R(5/!"9#5!=/`0$ipS8#QOi,!s&B%
"pP&J!s&B(!s/f2#Qt>4$3gn>$jm%K"qL_7!!`K)!<`<*/--(`!=Al.!W`H.!<Wc2#Qau+$j$V7!X&N*
!XJu7!<E0%$3L;2!X&Q1!X/K&/HPqR$3C5.!"&],!<N6%"pb85!<WE4"9JQ,!sAT(";2+I!!iT0"pbJ7
!X]8D!sSr3"ptD8"pYD7!s8H-%13(@!Wi?)!s&B-!<WK("'c$1$jHb9!<E?(!s&Z-$31/.!sAr?"9\c.
"p"u6!!**/"9Jo7!W`Q.!s&`;$3C2/!t5;4"9AK."p=o.$j[1B!!3K-!!3?6!!!3/%0He?!<NN-!<<6(
$3UHE!!*6)"p+l8&c`+<!snu4"p+u3"98E&%0ZqC"p"u:$jI%>!!*-*!"&`,!rrN2!!!-("p"f."9Sc,
!X/],!<E<-!"&`.#Qb#4#Qk,."pP/8!s&Q,!X8i2!<NH+!X8Z2!!**+!r`04!sAl8!!!?:"U5#.":>J9
!=/Zj"9JQ,!<N6*$j?Y6!<EE6"9JW,$jm1@"q1J5"oo8A"U5AD#6>#5!!!*,$jZk7#Qk51%KR"C!sJf/
!"&`/"TAHI!sT#2!<E9("98W+$3:88"p>G?!<s)>!!WH0$ipS5$4$nArW*Z7!<WE0!XJi/!<N60!<N<*
"p"c2!!*9(!=B)4"TAFB!X8u4!!!?1!sf#2"q1Y>!!<<'!<rQ1!s/Z/"UYM>#Qb89#QP&7&ci1@!<E?4
#R1;1#QkD:"p+c3#QY>6!WW6$!<EB)#RCG4$3LA7!X/i3!X&T*!X]2;$4mXN#RCP6!<<*.!s&H)#QOi*
#R1PK#7:J=!XJi0!<iQ+!XJf8!!**+"o\]4!<NT6"9nl6!Wr?*=Tnp2!WWK4"UGG9":>>5!sf/7!Xo29
!<W<+!<r`8"U557"T]5:!W`<'"p"c0$3C50!<E<(!!*',!<N?(#QY,0#mCA3#Qt/0!WWQ.!<`N*!XJu6
!W`B6!!!*,!XK5:!s&T.!<<*#rW#\!!<<3)!!<<,"p>#6!s/Q,#R:>8"UG5:$NgS7!<<*$!t>;3!<NN1
#R1V<"ptD9#R1GC!!WE(!X8i/$4$_6!!WE/!WWW0!sSr1&dnU=)$U3K"p>&;!WrN*$3:/3!<<6*!X]#2
%13Gk#Qk)4"on],!!<9("9Jc/"TST)"pbDA!sSc1!!WZ4!!iT*$31>3"T\T/"pP>6"pG25$3L;/!s&K(
"9SZ1%0Zq=!W`K-"p+f-!WWQ3"p+f4!WW?'#R1>4!!!9*!WWK0$j$V=!!<3(!<<-%"pk\B!X]PI!<NB(
!XJf`"p>&4!!*0)!!WE/!X&T*!sAW6"U4r."oni-"9A]4"TeZ(":>P<!!WE)!<<*,!<WT7!;us"!=Au1
!WW?*#6"Ti"pbD5#QP#4!<rf9"98W-!WrE+#QY22!!<3%!W`K/!!3?,!!!?5!!30.#R:P>!W`?)$3gV6
!X/W+!W`W/!X8Z6rW+VY&dAC;$3gM8%1!:B#QY>>#Qb>6"q1S9%gW@A#QXu/!sT)4!sf)6!WrE(!X`??
#6Fo-"9\r2!W`W0!<WT-!Y#D:!!!31!<<<+!<i]6"p=o,#RUn>$j$G0!<r`1"Teo;!<E6)"T\`3#R181
$j$b<!X\u3!WWQ5!X8i0%g2k:!WrH+%0d":!XK&9#Q4Z4"qgq:"9SW)!s8N/!!`E'#7(M<!X8o7!#,J9
!<W<-!<<<)!<WZ0#RCP7!"&`*![7gO!<rT*!WW6("p+f+!X8o4!"&],!=/l?$j$D<!<N<&"8r6Q#6P/7
#QY2<!!NH3#R1>7!!WN0!=Au7!X8i1!!!3($31&,#Qb/6!rrZ0%0H\1"q1M9#R1;5!W`?(!>5AZ!<N<.
!<<H-!XJi/"ptP9"9AN'$jm7C!=Ai5!X8`.#Qb,3!X8r0!AOc_!<<?*#RCG6$kEIB!!3?8!XJu7!sSf6
"oni/!s&B(!<EH5"9AN'!=/f/!rr<)rW3H0!X8o1!=/f8!s/K%!tYG<!<E0%"9S]2"UkD4"p4l;"pb58
"p#&5!!*'$"q1\?"TABR&d/7A!WW<(":>,0!!j#<!sAW*"ono1!<N?'!=Ai3$3C83$j$YB$3C20#RCS4
!?VIH$4$\7$3p\8!WrE'"p=r2$igJ5!rr?%!s/N(%0c\2!WW6&rW*K<"U559!rrB($31//"p.p.!!`T+
"p#5=#QXu-!WW6,!sSf.!s&f4!!<?)!<<0*"pb54!"&i0";1b?$4$V7!X8c7!X8Z+!"9&6!!!3."UGM:
!<E6&!X]&1!WrK*"p"f0%06G3!WE9+#Qb2;#6"W@$4I1?!WrW.#RCG:#Qb)/"T]&4"p"])!rrB)$jch5
*!clO"ptA2!sSf,"pP53$j$D1"9S`3!WiQ+!Wi9#('4[I!XJc5!<<-&"Tn`3"98W-#6G)3rW3H?!X&N5
#QY23"oo)2!&"BZ!WWK,#R1_>":>><$3:,,!rr<&!W`B*!!!E.!X]&9!W`E.!!io7!Wrc8!sAN(#RCG2
#7:_B!!*!!<<<@3"p"c7!<NH0!W`K+!X8W/!s8r5"9\]/"pY>:":YhA!"&c.!s&B'"p>)1%0uq6!<WN/
$4%%I"98H,"pb50!XJu3&cr%6":>/1!!<9&$4$\3!#>tC!Wi?-"pP/1$31J8!!!?.!!!-&!$MCE!ser4
!<r`6%0Zb5!WW3%!WWE+!<<<(":>>8!!**(rWWc>!!<?.!!!3+"9AN/rW>^l$3pP2!sSf2!rr`0!WiB&
!<N?(%06Y7"p#,7!s/K'"onc1!!33*!rrE($3UA6!=/`6"9K2A!!W]/!"&u6%0-S7!<N9%"9\l5"p"r-
!=K/8"9nl4!s/Z-!sAK%!X8i7rW$=7%0-P4"p+o1!s/K(!!WW7"pG#3"q1P5!rr?&#Qb#4"pP27!X\o0
$31J7$3LP:!<iZ.!<rZ."UG,0"TSr:!sS`-!<WB'$ipG1$46e9!WWT1"ono7!X&]:!s&B-G6%[L&dSXF
!<iK0!XA]*"p+o.#RUV:!<`K,"p4l+"p"u6$46b:$31G@!W`E)#R1DB#6G54!X8],!<rZ2!!*3&"To/8
"p>>=!Xo,9$Np_>!!<3%!<<*&#Qb)4!<ru=!W`H,$3LM8!!*N0!W`9%"pb;:%/pG5!"B5=:'1S(%06P4
$ipP5$j-M=":,)0!rrc2!!j2>!WWQ1"pP/6$31)/!s&B1#Qau/!!3Q1!s&`0"Tnr7%fcY:!!EH+!=TG?
"9\c6#R:A3rWEf7!XJu5!=0)9!<N9'"pP/8$N:5>#Qt>5!<<*$!s/T0!sSc)!X/]3!<E0)IL6/W!s&`/
!<<-)"9ni1!<E9-!!391!s&H)!<rf3%1!:B!X&i1$3C>9"9o#3&d/18"onZ+!X/Q.!<rQ)#64r4%g!(?
!t#)6!Wi?&!WrN+!!!$$!<W?)!<<-$!!!?3$3LP>"p"u4!=/`.!!i`/$31)-#m(24"98N(H34?O#Rh+G
#QkJ>!WW?/#7(S:!<E0$"9o&1!!*0&!W`?+!s&`/#R1A?"pP)8$31/0"pG#1!<WK,#QY&0!=B):!X',:
!<``1!!iT*#R(28!rrN+!=o22!<N?'"p+u3!Xo>D$igP?!W`W/!s/N2!<E0/!!iZ4r;nnY"p+l2%0d=M
"9AN4#R1;6"on`6":>;4!!*-,!s8N3!!EQ/#RUV<&-`+7"9JW)"9Ar7$4R:?!<*!a!!3E.%06M4!!EW5
!<rQ,!!iQ+$3gb:!!*'"!>5J8!Xo)6"qL_<!!iT,!!WT,!<rZ-!=/]-!=Ar6!<N6&"$H_g!!*?+#6P/4
"9AQ("p"`,!!WN2!=/f0!!WT,!!3-+"9\])!<E9&"U55<$3C2.#R183#QXo+!W`?)rW42E$46nC#QOo1
!=&f/!s/T2!!36&!!WW5!s8r5$4$\9rW*Q7#QOu.!<<91!<E98$3:24r;d$("pk;35lq)m!X&Q3!!i]/
!<rN(!X/Z,!WW9'!<rl6$31&-#64c5#Qt50%0?_>"Te]/!WWK-!WWQ3!=/r3"TSN*$jm+9$jQe5"p"f,
#R(,-/dMXi"98T*"9JT)!X8`4!rr<%!s8N/$3^V8$jmOM!!!$'"p4i+$3L\;!W`W4IK0]U"9nu0$5*LE
!X&c1!WWT6#R1A4!s&`2#RUYB!<E0*!W`]9!!`N)!Wi?/!XB&7!!EQ."pG23"9So2"ono1!<N63#QOi,
!sf5:!Wri5"p525#SI@E#6tM9"oo&7!XT,6!X/Q0!!33-$ip>/!s&`4!<`Z.!XJu7@0-W=!"Ar7#6k24
$31)0#QXu,!WW<.#R189!W`H;#QP&0!rrE)!!i]0$3:>5!XA]-"pbG>!=B)4!s/W-#RCS:!!*'$!<WB*
#6kS:!W`K+!WW6*":YA3$4$Y4!rrH&"rRXO!sT;@!<N<.!"&i7!<rN)%0ut9!s/u;8H8u$!WWT.!<<H2
!=T#1!=T#=":>>5#QP27"Tnu8!!iT+!!iT0#R1\=!s/Z-!=T#3#SI4?!seo5!<<9-!!3<)!=B)7"p>).
!\j]V"9JQ)!=&T/!=T/>!rrE'!!3-)!W`E0!<WQ.!<EH,!s&f3"T\]4!WW6%!WrN5!<i],!-nVQ!s&K4
!s&Z1!<W?0!<EB1!!30%!rrE/!sAW*$31&1!!WK-!<E9,"9\u9$4[(:"pP,7$4R"9!"B/8!rr?+!WW<8
"p,&9!X8W)!X8Z-!s/H)#6=u."UkS8!!iZ2!!!?-!t#;E!<rf1$j[+C!WiK,"TSQ6:':k("9\`-!X8u9
!!<E2!X/Q*"T]#5"p4r4!Xo,5#R:>8!WWN/"pb87$igA6!<W<&$3gP4"on`0#6=r3!<EE*!!3-#!=Su;
$3:,6rWXnS!"&]+"p,&7!<`T-"qgt@!WiQ3!t#&5!!WW7!!<3'!<EN<":>,7!<<<.4obTf!<Wc5!"&]+
"98W/#Qk>5!sS`,!s&Z-!!WW."98W.!!*'%!X9&5":P;2!!`c0#Qt;;!!E?'$3158rW,+c#R1>7!=0#6
$3gM2!WiH+"p"].!!360!!<E7!!*'*!<rT-!!!9/!"&l1"p"u1!s/N:"ptP<!!<<(1CO9e!!3<2!sSr1
!=&Z2!!E?+"p"o4!<rf6!!iW5"p4r5"p"]*!WrH1!<WB(!!iu7$N:/O!<<*$"ptY>"ono9!!!$"!W`H)
!"T&5!!W]5#Qb#-"p=i-+p\/K"p+l1"p"c*"pP&."p5A:!<WB1"p+i/!X8]/":P>4!<WQ*!"f_B!Wr]6
"U5SB"p"`/!rrZ1rW!]<"p"l5"9ni+!s&Z7"p586!!30)!<`<&$NpM4!!!'$"p+f0%/p5g$4$Y<"pPM<
!t##3"p>#4!sAc0#Qt,7$j?Y9#R1;8$jHb5!!WT/!=T;;"9Jc:!X8]/"9nl.!<EN0,R"AT!!*'%#QY#-
!sA`8"p"`/#QOl,!<rf1!<N6%#Qb>9&dJ=9*X2TM!s/W-!s&Z/"98K(!WW3%#m1;1!s8i1!X8Z4rW4nW
!sf/6!"9&5"p=u0!"B8@#R1;6#QXr-!!3<+!WrN*!!*9)!rr?(!=B#8#QP&7!X&c12$<m^"UkS@!<rT*
"TS`.!!3-0!XJu2!sJ`+!=/Z/!<E6(!seo.!s/H("9SZ."U"f-#Qb),"r\*U!<<6'!Y5;3!!39*!!WN*
#RCM6!!<Q0#lXlQ"Tf#:!<<<+&.AXB#R1D=!<EE0!s&Z1"TSr<!!33-"9Ai0"98E(!<EQ,!B()a$3C56
!!*9.$3^J:"pb51!!EK1!!!$(!=Al.!<N6%#Qk)3!!3-)#65#1"98]7!!<E*#6"Te!<E9,!!!32!W`K0
"T\W*&ci(8!WW60$3:5/!"T&8!WiB(!<`Q+$k*.=#Qk,/!t5A9!<<H/#R1;<!<W<+%Kcn=!!*?+!seo7
!WWE.rW!'*!X/i6rWGLg"pkJ6"p#/;!=/r2!W`9'!X/T)#Qk,.#Qt/0!WW<*"pP,0"pb2/#6k/8!WiB'
!s9&6$ig85$igP6!=B)=#lXf)#QXf()%m8Z#R(>:!!WE/"T\T,$3C2-!=/r6"onf,"TAF#!XJi1#RCV=
"9A]6!<<-+"p"`1!"&r5%1E7;!XJu5"98E-!WW6%"p>,7!!36,!<EB/$j$\:!=&Z,#Qb24!WWQ3"p+c*
!<NN/"p"]*!!<6)rWXSI"onZ.!X&c1$4$h:!!EW/!!<6&#RCS6!s8`.!!<Q@!so/j!<NN/"ono<$3pb?
!ser:!<Wc6"p5,4#QY22!WiQ,%0?tE#Qt51"p4l,"onc/$ipA/"98H)rW,@p"Te]/$3C5.$jHn9!WiQ/
!!<9.!sAl6!<`Q5!sA]+"q1M:#QXu/!<<0/$O-S4!rrZ4#QP29!"Ar5!XJi4#Qb/j!Xo;6!WiQ/"p,,6
!sSl/"9T8;%fub9!<rf5"9Si6!Wi?&!=/l6$3L>1#RChC"p5&="p>27!sJ]e!<E6*"TST.!<WN5!<iZ2
"9Si.!<E<3!WrH'#R1J7!"&u4!"'&7"UY;7"9JT2$3:D4$3:SA"onW+rWYRh!XJi8!<r`/$31,7!<<E5
%0HV6!<iZ/#6bA5"on],!rrN+!<<*#!XK)5&dAIE!WW<,#R1A3$3LJ4$jQbg#QOu7!<WB(!!*?+"p"]*
!<`Z6!WW3%!<E<-!WiB.$3:/-"98E+!!*E8!=B)4"p"o2rW#Fs#Rge@$3L\D#QY#3!<`H*"pY>A!!!0(
!s&T,"pb;3!X]&@$ipG3!<WT2$3^\;!<NN9!!WH*"p"o0!X\u0"q1hE!WWB6"qLnN#Rpk<!<EH,!!30"
!<WE(!!`E(AI&>=!<WB*!"&]7#Qk)-#Qb85!<rN*!XK,7!!**#!X8i1$4HtD"p4i-"p5&6!!*K1#QY,?
"9AN'!<rN(!X]#6!XJc.!s&Z3&-<1C!<rT+":>D:$3gM3!!!--!XJu2!"&gW$j$\8"98W,"U>,1"Tn`*
!s9&7"9AQ,#SI=D!s/K/#QY#3!sf#8!!WK5!=Af.#QY)<#RUV5$j-M3!!WH(!s&f6$3^V7!s&K)!WWE)
!<WN/!<EH5!<rQ+"9AN*$3LP8!X]&;"p,,4#m186$4$Y<$k37?!"Au0#QY!U!s&Z.!W`K,"98Q,!W`?)
!!3E,!!!-+"p4u=%fcY3"p"f1"98K($jZn8#RptN#QY,0!sAT,!<rf6$3:>3!<rQ*!!iQ/!!<3$"p,)8
!<r`:!sSi0"Tel0"9\`2!<i]1"onu4":5&0!<iT1%06G9#Qk/0#QY,8!sAX&$3:2/"p=r,$3CD4"p5,<
!rrc7"ptD5"p+i,!!!*'!!33-!<N?(#QXr5"p"f+!W`<)$3L;1"onW,!"&]3"p+l/#SI=A!<N6%%0Qe6
"onZ%!>PbH"pP/8#RUS:"p+c/!=B)5"ptJArW<W2!>#52#Qb85!rrN0!XO5V#RLM7!"&i7!WrK)"9f&2
!"&o3%06G5!X8`.!!Nc8"pbA:#QP23!W`9(!W`E($ipG2"p,,7#6k81!X\r4!s&T-$3183!s/f0$3C2/
!!*9+!<<3(!<s/@!<<-%$k*1=!<rW.$31&0!"T8<#6P/5!<E<'%gWLC!X):+!!!*$!!iW+!<`H+$j6V9
$4-t<!<<0'$4$hA"ono6#QP2=!WW6."on]1#6>#9#Rgb;$3LkA#RCD6"p5&8"9Si2!<E6'!!iZ/!<rQ'
"s*dH#6=i-$j-M5$4$kB!rrK/!s/Q)"pP/1!X8W/')hk;!X\u3!=0#:!<FAH%gW7<!!iT*!!iW+!<W<2
!s/o;#QOl2!!!',"T\W($3pJ3('"OC!<W<%!WW6.$j-P5$j?t<#R1;3rWk[f$4$\=!!*9.!Y#28"p=r2
!=Af.!W`E+"p4o.$4$V9!s/H,$3:55!=B/>!<N?)!<<H,!s\o8"p"i,#QT;Z"p"`)!<E05"p+i1!!!9)
!!iW,!<NK,!!WH(!t5/8!!3-)!WiH2!!**'$j$k="9no5"pb;4%0?S2"ptb>"pG)2!<`W/!=02:#R1D:
$4$V3!X\r:!X];;!<E6(!!ri:!!E<)"onZ0!<`T6!<N9%#R1>3!!!$$$3CqC!!<3'$3L;7!s8`.!!<6-
!rrK1"o\cR!s/H&"qgt?$j6eB!!WN,!W`9,!sf#2!XJu3"pP>8!sAW)!s/B&"onW/!!!'&rW"\^#Qau1
"on`9"TSN.!sAZ6$46n>#Qk>:!WrE*":kJ>!<`E.!X&N(!=/f6!X8]+"pdg("TSQ1!sJf5!sAT*!!<?+
!ser8!"8u7!<N6,":PJ;"Tnr4!WW`3%0Qk9#Qt,.!!337#Qk82#m(;7#Qb8;$46h?"UGA7!XAW(0EqR[
!s/Z2!!<9(!<<0&$jH\9!<i`0!<N9%!<r]0"pPD8$46b7$j$V8!<EN3!<Y^l!=/],!X\o/#QYAA!WrE.
"on`+$igA2$ipA1"9\f-"UY51#RUV7"98H,!=B#8!<N9-"98H,#Qt>3!"&f1!!*'#rW4t\#SIXR#R1>4
!s\f-!rrB0"pb20$3124!<E0#!X8f6!<W?&!s/`."ptV?"9Si/"9ni,#mq%?"oni-"9A],%fun5!?):L
"pb20!t#)<"p"f.$j6e9#R1;0#QOi1#6"]?!"8l.!!WN0!=/]."pP)2"98N(!=/`*!Zh@C#6G&0!<`B)
#R(G;!<N?+%1ERJ$j."Q"p"]*$N:#?"oo)4!<<*(!s/Q)!=Af6!WrH3!W`l6!WWB)!s/H,!=oS@!<NN4
$N0s6!<rf6!!ic2"UG>;$ipA/!<<B0!<EN7!<N6$!s&N+!!**/$3UJ=!"&i2!WW?(!W`B(!s8Q*#QtD9
$j$D/#R1G6"p"o.#QbDA!<rT*!X],;$3182":P>3"9o,9&cr+5!!36'!e(CT!<E6%!!WN*!Wi?%!X8Z+
!WrN)$3182#RCG4!<W<)#m^k>#7:G5"p4i0!!30$!<E]2!<EB+#QP;:#6b/6!!Ef6!WW<'!sSo/$31)2
$3:>2#Qk&-"p527!s/N,!X/W2!WiH($3LV;!!EW/#6=l1%gN(8#Qb&4!\=ES!sSl0"98Z,#QXu>!!33&
!!!9*!!!Q2!!3?-!s8f/"p"u1!<N?*"p4u,"r%%A#QXo,#m:G5!W`B(!sSf2"p"l+"t'ZW!sel4!X8]-
"98]7!<E9&!s/Z1#Qb#,$3gJ4!W`B)!!3E-%g)_7!!E0&"p+l0"pY228-8o#"p"c.!!3K.!!E?'!XJf,
!s/Z-#RCD3!=0#="onZ(&de[I"p"i,"pP58!!*-*!Xo)3"p+i3!!*9)"9JW-"p"i-"9JK-1'%Rf#6G/2
#m(G<"Tel8"p4o2"9ni+"9JZ+"p+c.!"'&7!X8Z*!XAo4!!3-&!!Wc11(+-m"9\f.$igD1!rrB&!!3E7
!Wi?+!!iW7"p+f2!<<H3!rrE)!!iQ)!<`T2!=/Z*rW5Uj!X]PK!W`E+"on]-#RCD2#Qau-!<<*$!X&Q*
"9AW*!!<W3!<iN/$ig87%0-A/!<NH0":,>7!X\u0!=/r7#R1J8!!WK*;?-\&"98H*"UG/0!Xo/8!!*'1
!<<0*"To/B!W`]3"on]/!!3-$$3gM2!<iu9#QY);!!EQ-!!*'$!<E6&$j-bB!!Wc1"pP/:!!331&ci%7
r;n>H!!WT-#R1D;$ipD6"U5A;!<N6,"9AK&#Qt50#Qb84#R1A2%0d"L!!**'#Rq%?$3L>3!X8`4!<E9$
!,)B6#R(JA!"&`7!<<0$!<N92"qLnF"pbD5!Xo89!!3E-"9Jo2!W`B+!t##1%0?V<!s/Q1":,&/":,D:
#64`)!!<E2!sJc,!!*E.!>5YD!!ic2"p,,6!!*9)$3^\E"p"o.!!iQ/!<ru6$3:/+!WE-:!"8i2"p>25
!!3-'#R1D3!s8T.!!E?3rW6+)$3L;2!!36&!=&r3$3LP?!!*3'#Qt,.!s/o9"UY;2$46t@$46b6!!<<(
!rrB($ig;.!WWE*!X]59"UG,7!!!3-!<W?(!XK#2!rrN+!XKDG!='tV"9K#>!s8T/!"&u4%0He9"ono/
#Qb&."p"].!<rQ1!X8Z,!X8Z(![IaM$j-b9!sSc+"9JQ-!sSo2!WiB)$3UG;!!*-0"p#2>!!<?&!#,G7
!!iT7"pP,3!W`Q1!"9&5"p5&.!##_G!!!'%#6b//!!EK.$3122"pda(!W`</!<E6'!!!$"!<`E/$5*IC
"9nr/"q(D3$igJ6!!!'$!s&E,!!iT0"9Jc0%0I%M$4R1B!!WQ5"pP/3!!WW-"p"o4rWk7k#QY&6%fuq8
!W`W0!X\u9"pbDB!!*-$#R189!<N9&$4$\G!<iT1!WiB-!X8o>!!4VM$31&3!rr?'!<<<.!sAZ6"q:b:
!Xo)1!!<6&#Qb23#Qt52!!*38#m1&01]mdZ!!iT.!"&u9$4$_>!!ii2!!!$#!s&B-#R:G3#Qk23!XJl.
!<E6(!s/`2!t#,7$3:&,(CU]Q!WiB2!"9&3"U#&4!sAc3!s&B*!+5d;"pb;8"p"i4$3:/-!WiB.!=Su/
!X&N2!s/H.#7:Y9$igPA!!EW3!W`K+!"T,2#Qk&4!<<<*#R:D;&c_t=!!**&!<<*(!W`9$!=T57!<`Z8
$j$b:!!3?+"U520!Z;1G#7L_<"ptS:"U5#6!!!E:"p4r7"onl5IKKfU!<WT.!sel2$31/1#QY#-!<<32
$4R"<%g;q;&-E+@!<rN,!!*0%!<iN+!s/N0!!3-)!!<9'"U5&9!X\r3"UG>=$31M8!!WE)"pP23!"o\?
"p+f+!s/K)"9nr4!!iQ*!<rr<!sSi3$4$V4!!<9'!"T8:!!!935Rdi%"UYM:!!iW5"pPD8!!<6-!!`T7
!W`K+!<W?'!t5/0$31&/%0HV7#Qk8:!!*'#":Y>:!!39.!<`H0"pFo+3WK0^"U5&0"on`,!sA]-!=/Z+
$igA1!t#)0!<<<*!WrQ0"p,2G!!*9+!<WN3"p"u0!!E9'!<rl3'E\UD!sAW1!"&u3!X&Q*#QP27!X/K'
2$=*f!<<0%"p"f+#RUtI!!io5!rrT0!!!$$!!E<)!sJl8#Qt,5!!ic6!!3-&!=oA7"p+r+!A"QZ"p"`,
$3:>2"9Ai6!<NQ/#QY23!s/N("qL_7#Qb>6!>#D;!!WK,"pb3X!"o>6!!ic1#Qk2:"9S`-$3:,."p=r/
!t#2;"on`+#Qt>4!!<3)!<NH,!X/Q0!<EB,!=Al/!!!3'$NUA1!!`Q*$ipA7!W`?,"9Ai<!!!?+!!3-+
#QOi*"9f&5$ipJ8#QY,4"pbJC!<EH5$31J?!<rQ*"Tnc,#Qb&a#RCV=!!WQ3"on]*"pb21%06Y5"p"c<
!"&i3!!30%"98W5$4$V9!<EB5"p"`+!<EB,"TAHl$igV=#Qk&.!t#23"98Q*!!Nc7#QP&/!<rl:!!*0+
$3C2."p"o1!<N9/#QY#/$j$\A!sS`1#R1;8#Qk&3!XJr6#QXo6"qC_;!<`H)"qLeA"o\Q)!=/u1!=&T,
"pb52"UP&,(^L<Q$3g\8!X8Z*&c_q8!WWE6!!!$%%15W1!!iZ.!=&Z,!WWZ0!<<<+!!3-$!X\o3!!WE1
%0ln:!X/Z5$3:>3!!ic2!sSf4!=B):!<iH-$3UG5!<N<'!X&N)#QOi/rW"\X"9Jc-!WW6&"p+u/"9SZ+
#7:\9$3:S?!<rl3!W`]0!sJl7#6=f+#QP&/!W`9)!s:^p!s&E)!"&]=#QOi,!!WH)"98Q1"onZ*!!<6'
!X]8;"p"f-"p"c+$j$G1"q:h=$3C;0!X8]1!"/i/!=Jf,4:hc"#Rpk<$3gS6!sf/6!XJl0!rr<1!<E<(
#QY8>&-3%;$3C83$4$Y:!"T24!WrE0!WrW/!!<6-!sj>]"p"c7!!iZ,!sf/5!sSr2!<E0&!!36'!=/f/
#SI1C!s&T-"pYS=$3LJ7"U>&8!WrN/!rrN2!"8l."p4i,!WrE."p+i1#6k5:!=/Z.$31//!!!-/$3CV;
!!*'%"p4l,!!WH2"p#&2!<W?'$jZk6!<rQ6"p"`)$j^YN":,D@"9Ai6!!<6%#QP,3$3:P:!!W]2#QkD<
!"9&4$3C;4"pbJ8!W`9%!s8`1"98K9$j-S4!!3?+!!ic5!=]&:!!W]2$3^G7"9Ac3"p"]."p5A9!Wi];
"p4o-"Tn`/"p+o-$31,/rW!E1!<E9'#RLM;!<E6%"pcFS!WW9%%gE4=!s8T)!!3-&$3:Y="pPMG!WiB'
!s/H)!s&c.!YbV="9JZ+!"&],":+u/!WW<&!s/Q'"tg;a!!3?+!!3-)$k`^E$4$nE"onf,!X8i;":,8;
!W`<-!sT)8"onW)#QP8B#6"T3!sf5<!WW3)!s/Q*!!E];!s/Q)!=Su1!s&B+rW#S"!X]#0#Qt/2"p4l+
#R187"on`0#Qb,3!X\o2!"')6!<`W1!WWW/$3C85!ser4"ptD3"p"c2"pP21!Wri2"9AK&#QOl2#Qb#*
"!7[Z"ptD3!<iK*"p+f.!!WK+!!<Q0"pP/0!!<E-!sg+U$31>5!X8i3"p+o/!<rW+!=Su1!X&N,!<iN+
!=/]+!X&Q'!`o@1$3^D1!<<*$$igJ6!W`]1#7:J9!X],;!<iH/!!!$"#Qk&4!!WQ-!s&Z3%06G/"pP).
!!WE,!<NN-!XK,?"p"o0"p4l1!!*0&"qh1D#6=l+#QQ:X#QOu3!t##/!rrZ4!!WQ1!=Ai5!rrK5!"Ar7
$4$t=#QXo0":#,B!WE0u$jI%E"p>2:!s8Z-!!!*'#RCP7!!3T:!!i]3"9Ac1"pP&0!WWH+$3://#7:k@
!<EE,#Qt52!>#58!<rN4$j$J5!<NN,!=Af,!s&f6#Qm3m!X&N,!=]5;!=B/>&dA=D$jQn8!<N6*!WrH(
#RUh;"U>54!!**&!=8f1!XJr3"9SW0!!WE-!!WK)#Q=oj!s/Q)!=T57!XJi9$3gbC!!Nc6!=/o2!XJc0
!=B)@!<W<'#QXu0!<`H."p"u0!"9&9!!WE*!Wri<"q=0-!XJl7!!!*$!rr?%!!WW-!=/]+!!*90$3U>0
!WWK-!sTAD!rrE)!<EB*!"&o6"T\].#R1V=$31)6"p4r9#Qb83"9o&3!s8H%0EqL^!=/r3":Y>4!WrE(
"9ec+":,&2!WrH1!=/`-$4$_>!X]AB!<N9-!WW6*!W`<'!<*%:$4$hA"UkS:"pb27!s8Z-#QY#."pPS<
"p5&0$3C50!!3T=!"&].!!E9%!<rT2!!`K0&de[@!WrE.!!iW.!s/K)$31,5$3:,,!s8Q+!!*9*"98W.
!"Ar7!=]#7$4%(A#Qb#4#R(51$jHV1#Qau-!!Wc1!sT5="9T&4$NUS?"9Sl1!!3'#4q@]%!rrH)"9S`,
"9ni-!X&]-#Qb84%0Qe7!W`<-%0?Y6!!3?1!WiQ1!s/`."on`0!<`W3$3:/8!t#YFrW"DR!<E6&"onZ)
"pbD;!XT&<$31D6#65)2!=/o8%0-M5#QY,4!s/K1!s<uP"ono<$j$G1!!362!=T#8#QOu-!<<3&!!!E3
!<`H(#QOi+%0ck9$jm%=!<`Z6!<W?(!<`Z/!WiW3"pb;:!!!31$3L>1!WiH)!=/`1!<rQ/!<<6)$3L8;
!X8f0$ig>5&cr%5!t##0!<E0)!X8W/"p"c1!!!N2!!*E.#64f+"p>,4"p=i*.fobS!<<3'"99&=!<EN3
$NU;7$jm1E!X]/6#R1J:!WW9/"ptD3$31)6!WE?K!!ii3!sSl6!WrE*!<`K,!!*'(!=B)9#RCV=#QXu/
!!<H)!?2"A"pP,2$4I1?!X]A>!WW3$!!`T,!!3c6!!XnY!<`E)!!*-.!!WQ,!XJi5!<WB'!<Wc4"UYA7
!<<3(!!EW;"98Q/$3:&6)up'F"on`+!<rZ0#RCV8!<WB-"onu1!Xo,4"pk2.0F@j`"p"]+!!39)"p+c6
!sT#7#Qb2=":P;6!<N<'$ipD=$3L>5$j$J2!Xo&5!=0;D!!3K5$4$tE"Ter4!Wi?%!>9n~>

%%EndBinary
grestore
np
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [10 0 0 -10 0 0 ]msf442.745 774.66 mo( )sh446.275 774.66 mo( )sh453.325 774.66 mo( )sh456.855 774.66 mo( )sh460.375 774.66 mo( )sh455.555 774.66 mo(7 )[5.56 0 ]xsh463.895 774.66 mo( )sh467.425 774.66 mo( )sh430.975 294.66 mo( )sh430.975 297.64 mo( )sh430.975 300.62 mo( )sh430.975 303.62 mo( )sh430.975 306.6 mo( )sh430.975 309.58 mo( )sh430.975 312.57 mo( )sh430.975 315.56 mo( )sh430.975 318.55 mo( )sh997.644 311.664 mo
997.644 311.664 li
997.644 753.664 mo
997.644 753.664 li
976.644 311.664 mo
976.644 311.664 li
976.644 753.664 mo
976.644 753.664 li
1 /1 /CSD get_res sepcs
.8 sep
@
1044.5 824.363 mo
1044.5 477.925 li
1025.03 824.363 mo
1025.03 477.925 li
1025.03 477.925 mo
1044.5 477.925 li
1025.03 824.363 mo
1044.5 824.363 li
1 /1 /CSD get_res sepcs
.851 sep
@
gsave
1025.03 824.364 mo
1044.49 824.364 li
1044.49 477.926 li
cp
clp
1025.03 824.363 mo
1044.5 824.363 li
1044.5 477.926 li
1025.03 477.926 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[19.4657 0 0 346.438 1025.03 72.5916 ]ct
snap_to_device
<<
/T 1
/W 42 
/H 884 
/M[42 0 0 -884 0 884 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe!ABJe!ABOUgpiJd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd]a0
\-[`npBcEXJdI#8JdI#8JdI#8JdI#8JdI#8JdI#8\d?I`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4
Jd:oQNs1+=Jd(lPJd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0iru(YJcpZ.JcpZ.JcpZ.JcpZ.JcpZ.JcpZ.
JcpZ.Scn-WJcgT,JcgT,pB-!LJcgT,JcgT,JcgT,JcgT,Jcgu7p&]gIJc^N*Jc^N*Jc^N*Jc^N*Jc^N*
Jc^N*Jc^N*`r`mSJcUH(JcUH(JcYTHJcUH(JcUH(JcUH(JcUH(JcW:\blE=qJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&n,SXVJd-f2Jd-f2Jd-f2pBH3RJd-f2Jd-f2Jd-f2Jd1*:U^2PXJd?r6Jd?r6Jd?r6
Jd?r6Jd?r6Jd?r6Jd@eNkmE"LJdR):JdR):JdR):JdV5ZJdR):JdR):JdR):M$j(fJdd5>Jdd5>Jdd5>
Jdd5>Jdd5>Jdd5>Jdd5>JdfO*^^Yl)Jdm;@Jdm;@Jdm;@Jdm;@pC2]`Jdm;@Jdm;@Z451lJe*GDJe*GD
Je*GDJe*GDJe*GDJe*GDJe*GDJe.2YQOn`[Je3MFJe3MFJe3MFJe3MFJe7YfJe3MFJe3MFgCU:qJe<SH
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHQ4`KsJeEYJJeEYJJeEYJJeEYJJeEYJJeEYJpC`&jJeEYJYS)H
~>

%%EndBinary
grestore
np
grestore
gsave
1025.03 477.926 mo
1025.03 824.364 li
1044.49 477.926 li
cp
clp
1025.03 824.363 mo
1044.5 824.363 li
1044.5 477.926 li
1025.03 477.926 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 896.955 ]ct
[19.4657 0 0 346.438 1025.03 72.5916 ]ct
snap_to_device
<<
/T 1
/W 42 
/H 884 
/M[42 0 0 -884 0 884 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je!ABJe!ABJe!ABJe!ABJe!ABJe!ABJe!ABOUgpiJd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd[/<Jd]a0
\-[`npBcEXJdI#8JdI#8JdI#8JdI#8JdI#8JdI#8\d?I`Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4Jd6l4
Jd:oQNs1+=Jd(lPJd$`0Jd$`0Jd$`0Jd$`0Jd$`0Jd$`0iru(YJcpZ.JcpZ.JcpZ.JcpZ.JcpZ.JcpZ.
JcpZ.Scn-WJcgT,JcgT,pB-!LJcgT,JcgT,JcgT,JcgT,Jcgu7p&]gIJc^N*Jc^N*Jc^N*Jc^N*Jc^N*
Jc^N*Jc^N*`r`mSJcUH(JcUH(JcYTHJcUH(JcUH(JcUH(JcUH(JcW:\blE=qJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&n,SXVJd-f2Jd-f2Jd-f2pBH3RJd-f2Jd-f2Jd-f2Jd1*:U^2PXJd?r6Jd?r6Jd?r6
Jd?r6Jd?r6Jd?r6Jd@eNkmE"LJdR):JdR):JdR):JdV5ZJdR):JdR):JdR):M$j(fJdd5>Jdd5>Jdd5>
Jdd5>Jdd5>Jdd5>Jdd5>JdfO*^^Yl)Jdm;@Jdm;@Jdm;@Jdm;@pC2]`Jdm;@Jdm;@Z451lJe*GDJe*GD
Je*GDJe*GDJe*GDJe*GDJe*GDJe.2YQOn`[Je3MFJe3MFJe3MFJe3MFJe7YfJe3MFJe3MFgCU:qJe<SH
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHQ4`KsJeEYJJeEYJJeEYJJeEYJJeEYJJeEYJpC`&jJeEYJYS)H
~>

%%EndBinary
grestore
np
grestore
1044.5 491.101 mo
1040.4 491.101 li
1044.5 541.436 mo
1040.4 541.436 li
1044.5 591.772 mo
1040.4 591.772 li
1044.5 642.107 mo
1040.4 642.107 li
1044.5 692.442 mo
1040.4 692.442 li
1044.5 742.778 mo
1040.4 742.778 li
1044.5 793.113 mo
1040.4 793.113 li
1044.5 824.363 mo
1044.5 477.925 li
@
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [11.711 0 0 -12 0 0 ]msf1048.01 794.387 mo(0.47)[6.51135 3.25562 6.51135 0 ]xshGZXZLY+Helvetica*1 [11.726 0 0 -12 0 0 ]msf1048.01 744.062 mo(0.48)[6.51965 3.25989 6.51953 0 ]xshGZXZLY+Helvetica*1 [12.0214 0 0 -12 0 0 ]msf1048.01 693.946 mo(0.49)[6.68384 3.34204 6.68384 0 ]xshGZXZLY+Helvetica*1 [12.0202 0 0 -12 0 0 ]msf1048.01 643.598 mo(0.)[6.68323 0 ]xsh1054.97 643.598 mo( 50)[3.34167 6.68323 0 ]xshGZXZLY+Helvetica*1 [12.0214 0 0 -12 0 0 ]msf1048.01 593.266 mo(0.51)[6.68384 3.34204 6.68384 0 ]xshGZXZLY+Helvetica*1 [12.0116 0 0 -12 0 0 ]msf1048.01 542.923 mo(0.52)[6.67847 3.33923 6.67847 0 ]xshGZXZLY+Helvetica*1 [13.1936 0 0 -12 0 0 ]msf1048.01 493.321 mo(0.53)[7.33569 3.66772 7.33569 0 ]xsh1044.5 824.363 mo
1044.5 477.925 li
1025.03 824.363 mo
1025.03 477.925 li
1025.03 824.363 mo
1044.5 824.363 li
1025.03 477.925 mo
1044.5 477.925 li
1 /1 /CSD get_res sepcs
.851 sep
@
1044.5 477.926 mo
1044.5 477.926 li
1044.5 824.364 mo
1044.5 824.364 li
1025.03 477.926 mo
1025.03 477.926 li
1025.03 824.364 mo
1025.03 824.364 li
1 /1 /CSD get_res sepcs
.8 sep
@
1006.89 826.773 mo
1003 826.773 li
1006.89 803.906 mo
1003 803.906 li
1006.89 781.039 mo
1003 781.039 li
1006.89 758.173 mo
1003 758.173 li
1006.89 735.306 mo
1003 735.306 li
1006.89 712.439 mo
1003 712.439 li
1006.89 689.573 mo
1003 689.573 li
1006.89 666.706 mo
1003 666.706 li
1006.89 643.839 mo
1003 643.839 li
1006.89 620.973 mo
1003 620.973 li
1006.89 598.106 mo
1003 598.106 li
1006.89 575.239 mo
1003 575.239 li
1006.89 552.373 mo
1003 552.373 li
1006.89 529.506 mo
1003 529.506 li
1006.89 506.639 mo
1003 506.639 li
1006.89 486.059 mo
1003 486.059 li
617.886 826.773 mo
621.776 826.773 li
617.886 803.906 mo
621.776 803.906 li
617.886 781.039 mo
621.776 781.039 li
617.886 758.173 mo
621.776 758.173 li
617.886 735.306 mo
621.776 735.306 li
617.886 712.439 mo
621.776 712.439 li
617.886 689.573 mo
621.776 689.573 li
617.886 666.706 mo
621.776 666.706 li
617.886 643.839 mo
621.776 643.839 li
617.886 620.973 mo
621.776 620.973 li
617.886 598.106 mo
621.776 598.106 li
617.886 575.239 mo
621.776 575.239 li
617.886 552.373 mo
621.776 552.373 li
617.886 529.506 mo
621.776 529.506 li
617.886 506.639 mo
621.776 506.639 li
617.886 486.059 mo
621.776 486.059 li
1006.89 484.916 mo
1006.89 827.916 li
617.886 484.916 mo
617.886 827.916 li
1 /1 /CSD get_res sepcs
.851 sep
@
1005.99 484.916 mo
1005.99 488.806 li
980.053 484.916 mo
980.053 488.806 li
954.12 484.916 mo
954.12 488.806 li
928.186 484.916 mo
928.186 488.806 li
902.253 484.916 mo
902.253 488.806 li
876.32 484.916 mo
876.32 488.806 li
850.386 484.916 mo
850.386 488.806 li
824.453 484.916 mo
824.453 488.806 li
798.52 484.916 mo
798.52 488.806 li
772.586 484.916 mo
772.586 488.806 li
746.653 484.916 mo
746.653 488.806 li
720.72 484.916 mo
720.72 488.806 li
694.786 484.916 mo
694.786 488.806 li
668.853 484.916 mo
668.853 488.806 li
642.92 484.916 mo
642.92 488.806 li
619.58 484.916 mo
619.58 488.806 li
1005.99 827.916 mo
1005.99 824.026 li
980.053 827.916 mo
980.053 824.026 li
954.12 827.916 mo
954.12 824.026 li
928.186 827.916 mo
928.186 824.026 li
902.253 827.916 mo
902.253 824.026 li
876.32 827.916 mo
876.32 824.026 li
850.386 827.916 mo
850.386 824.026 li
824.453 827.916 mo
824.453 824.026 li
798.52 827.916 mo
798.52 824.026 li
772.586 827.916 mo
772.586 824.026 li
746.653 827.916 mo
746.653 824.026 li
720.72 827.916 mo
720.72 824.026 li
694.786 827.916 mo
694.786 824.026 li
668.853 827.916 mo
668.853 824.026 li
642.92 827.916 mo
642.92 824.026 li
619.58 827.916 mo
619.58 824.026 li
618.283 484.916 mo
1007.28 484.916 li
618.283 827.916 mo
1007.28 827.916 li
@
.625635 .527977 .517327 .50103 cmyk
GZXZLY+Helvetica*1 [0 -12 -12 0 0 0 ]msf97.4971 411.368 mo(0.01)[-6.672 -3.336 -6.672 0 ]ysh123.381 411.368 mo(0.02)[-6.672 -3.336 -6.672 0 ]ysh149.253 411.368 mo(0.03)[-6.672 -3.336 -6.672 0 ]ysh174.117 411.368 mo(0.04)[-6.672 -3.336 -6.672 0 ]ysh199.977 411.368 mo(0.05)[-6.672 -3.336 -6.672 0 ]ysh226.857 411.368 mo(0.06)[-6.672 -3.336 -6.672 0 ]ysh251.721 411.368 mo(0.07)[-6.672 -3.336 -6.672 0 ]ysh278.589 411.368 mo(0.08)[-6.672 -3.336 -6.672 0 ]ysh302.457 411.368 mo(0.09)[-6.672 -3.336 -6.672 0 ]ysh330.321 411.368 mo(0.10)[-6.672 -3.336 -6.672 0 ]ysh356.193 411.368 mo(0.11)[-6.672 -3.336 -6.672 0 ]ysh381.069 411.368 mo(0.12)[-6.672 -3.336 -6.672 0 ]ysh408.921 411.368 mo(0.13)[-6.672 -3.336 -6.672 0 ]ysh432.789 411.368 mo(0.14)[-6.672 -3.336 -6.672 0 ]ysh458.673 411.368 mo(0.15)[-6.672 -3.336 -6.672 0 ]yshGZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf585.893 70.5116 mo(0.01)[6.672 3.336 6.672 0 ]xsh585.893 93.3956 mo(0.02)[6.672 3.336 6.672 0 ]xsh585.893 116.268 mo(0.03)[6.672 3.336 6.672 0 ]xsh585.893 139.128 mo(0.04)[6.672 3.336 6.672 0 ]xsh585.893 161.988 mo(0.05)[6.672 3.336 6.672 0 ]xsh585.893 184.86 mo(0.06)[6.672 3.336 6.672 0 ]xsh585.893 207.732 mo(0.07)[6.672 3.336 6.672 0 ]xsh585.893 230.604 mo(0.08)[6.672 3.336 6.672 0 ]xsh585.893 253.476 mo(0.09)[6.672 3.336 6.672 0 ]xsh585.893 276.336 mo(0.10)[6.672 3.336 6.672 0 ]xsh585.893 299.208 mo(0.11)[6.672 3.336 6.672 0 ]xsh585.893 322.08 mo(0.12)[6.672 3.336 6.672 0 ]xsh585.893 344.928 mo(0.13)[6.672 3.336 6.672 0 ]xsh585.893 367.8 mo(0.14)[6.672 3.336 6.672 0 ]xsh585.893 390.684 mo(0.15)[6.672 3.336 6.672 0 ]xshGZXZLY+Helvetica*1 [0 -16 -16 0 0 0 ]msf571.901 318.793 mo(Proportion of ones in vector 2)[-10.6721 -5.32788 -8.896 -8.896 -8.896 -5.32788 -4.448 -3.552 -8.896 -8.896 -4.448 -8.896 -4.448 -4.448 -8.896 -8.896 -8.896 -8 -4.448 -3.552 -8.896 -4.448 -8 -8.896 -8 -4.448 -8.896 -5.32788 -4.448 0 ]yshGZXZLY+Helvetica*1 [16 0 0 -16 0 0 ]msf720.72 440.941 mo(Proportion of ones in vector 1)[10.6721 5.32788 8.896 8.896 8.896 5.32788 4.448 3.552 8.896 8.896 4.448 8.896 4.448 4.448 8.896 8.896 8.896 8 4.448 3.552 8.896 4.448 8 8.896 8 4.448 8.896 5.32788 4.448 0 ]xshGZXZLY+Helvetica*1 [0 -12 -12 0 0 0 ]msf646.242 421.226 mo(0.01)[-6.672 -3.336 -6.672 0 ]ysh672.126 421.226 mo(0.02)[-6.672 -3.336 -6.672 0 ]ysh697.998 421.226 mo(0.03)[-6.672 -3.336 -6.672 0 ]ysh722.862 421.226 mo(0.04)[-6.672 -3.336 -6.672 0 ]ysh748.722 421.226 mo(0.05)[-6.672 -3.336 -6.672 0 ]ysh775.602 421.226 mo(0.06)[-6.672 -3.336 -6.672 0 ]ysh800.466 421.226 mo(0.07)[-6.672 -3.336 -6.672 0 ]ysh827.334 421.226 mo(0.08)[-6.672 -3.336 -6.672 0 ]ysh851.202 421.226 mo(0.09)[-6.672 -3.336 -6.672 0 ]ysh879.066 421.226 mo(0.10)[-6.672 -3.336 -6.672 0 ]ysh904.938 421.226 mo(0.11)[-6.672 -3.336 -6.672 0 ]ysh929.814 421.226 mo(0.12)[-6.672 -3.336 -6.672 0 ]ysh957.666 421.226 mo(0.13)[-6.672 -3.336 -6.672 0 ]ysh981.534 421.226 mo(0.14)[-6.672 -3.336 -6.672 0 ]ysh1007.42 421.226 mo(0.15)[-6.672 -3.336 -6.672 0 ]yshGZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf42.0801 509.47 mo(0.01)[6.672 3.336 6.672 0 ]xsh42.0801 532.354 mo(0.02)[6.672 3.336 6.672 0 ]xsh42.0801 555.226 mo(0.03)[6.672 3.336 6.672 0 ]xsh42.0801 578.086 mo(0.04)[6.672 3.336 6.672 0 ]xsh42.0801 600.946 mo(0.05)[6.672 3.336 6.672 0 ]xsh42.0801 623.818 mo(0.06)[6.672 3.336 6.672 0 ]xsh42.0801 646.69 mo(0.07)[6.672 3.336 6.672 0 ]xsh42.0801 669.562 mo(0.08)[6.672 3.336 6.672 0 ]xsh42.0801 692.434 mo(0.09)[6.672 3.336 6.672 0 ]xsh42.0801 715.294 mo(0.10)[6.672 3.336 6.672 0 ]xsh42.0801 738.166 mo(0.11)[6.672 3.336 6.672 0 ]xsh42.0801 761.038 mo(0.12)[6.672 3.336 6.672 0 ]xsh42.0801 783.886 mo(0.13)[6.672 3.336 6.672 0 ]xsh42.0801 806.758 mo(0.14)[6.672 3.336 6.672 0 ]xsh42.0801 829.642 mo(0.15)[6.672 3.336 6.672 0 ]xshGZXZLY+Helvetica*1 [0 -16 -16 0 0 0 ]msf28.0879 757.751 mo(Proportion of ones in vector 2)[-10.6721 -5.32788 -8.896 -8.896 -8.896 -5.32788 -4.448 -3.552 -8.896 -8.896 -4.448 -8.896 -4.448 -4.448 -8.896 -8.896 -8.896 -8 -4.448 -3.552 -8.896 -4.448 -8 -8.896 -8 -4.448 -8.896 -5.32788 -4.448 0 ]yshGZXZLY+Helvetica*1 [12 0 0 -12 0 0 ]msf589.414 509.475 mo(0.01)[6.672 3.336 6.672 0 ]xsh589.414 532.359 mo(0.02)[6.672 3.336 6.672 0 ]xsh589.414 555.231 mo(0.03)[6.672 3.336 6.672 0 ]xsh589.414 578.091 mo(0.04)[6.672 3.336 6.672 0 ]xsh589.414 600.951 mo(0.05)[6.672 3.336 6.672 0 ]xsh589.414 623.823 mo(0.06)[6.672 3.336 6.672 0 ]xsh589.414 646.694 mo(0.07)[6.672 3.336 6.672 0 ]xsh589.414 669.566 mo(0.08)[6.672 3.336 6.672 0 ]xsh589.414 692.438 mo(0.09)[6.672 3.336 6.672 0 ]xsh589.414 715.298 mo(0.10)[6.672 3.336 6.672 0 ]xsh589.414 738.17 mo(0.11)[6.672 3.336 6.672 0 ]xsh589.414 761.042 mo(0.12)[6.672 3.336 6.672 0 ]xsh589.414 783.89 mo(0.13)[6.672 3.336 6.672 0 ]xsh589.414 806.762 mo(0.14)[6.672 3.336 6.672 0 ]xsh589.414 829.646 mo(0.15)[6.672 3.336 6.672 0 ]xshGZXZLY+Helvetica*1 [0 -16 -16 0 0 0 ]msf575.421 757.756 mo(Proportion of ones in vector 2)[-10.6721 -5.32788 -8.896 -8.896 -8.896 -5.32788 -4.448 -3.552 -8.896 -8.896 -4.448 -8.896 -4.448 -4.448 -8.896 -8.896 -8.896 -8 -4.448 -3.552 -8.896 -4.448 -8 -8.896 -8 -4.448 -8.896 -5.32788 -4.448 0 ]yshGZXZLY+Helvetica*1 [16 0 0 -16 0 0 ]msf172.789 877.75 mo(Proportion of ones in vector 1)[10.6721 5.32788 8.896 8.896 8.896 5.32788 4.448 3.552 8.896 8.896 4.448 8.896 4.448 4.448 8.896 8.896 8.896 8 4.448 3.552 8.896 4.448 8 8.896 8 4.448 8.896 5.32788 4.448 0 ]xshGZXZLY+Helvetica*1 [0 -12 -12 0 0 0 ]msf98.002 858.035 mo(0.01)[-6.672 -3.336 -6.672 0 ]ysh123.886 858.035 mo(0.02)[-6.672 -3.336 -6.672 0 ]ysh149.758 858.035 mo(0.03)[-6.672 -3.336 -6.672 0 ]ysh174.622 858.035 mo(0.04)[-6.672 -3.336 -6.672 0 ]ysh200.482 858.035 mo(0.05)[-6.672 -3.336 -6.672 0 ]ysh227.362 858.035 mo(0.06)[-6.672 -3.336 -6.672 0 ]ysh252.226 858.035 mo(0.07)[-6.672 -3.336 -6.672 0 ]ysh279.094 858.035 mo(0.08)[-6.672 -3.336 -6.672 0 ]ysh302.962 858.035 mo(0.09)[-6.672 -3.336 -6.672 0 ]ysh330.826 858.035 mo(0.10)[-6.672 -3.336 -6.672 0 ]ysh356.698 858.035 mo(0.11)[-6.672 -3.336 -6.672 0 ]ysh381.574 858.035 mo(0.12)[-6.672 -3.336 -6.672 0 ]ysh409.426 858.035 mo(0.13)[-6.672 -3.336 -6.672 0 ]ysh433.294 858.035 mo(0.14)[-6.672 -3.336 -6.672 0 ]ysh459.178 858.035 mo(0.15)[-6.672 -3.336 -6.672 0 ]yshGZXZLY+Helvetica*1 [16 0 0 -16 0 0 ]msf720.049 881.75 mo(Proportion of ones in vector 1)[10.6721 5.32788 8.896 8.896 8.896 5.32788 4.448 3.552 8.896 8.896 4.448 8.896 4.448 4.448 8.896 8.896 8.896 8 4.448 3.552 8.896 4.448 8 8.896 8 4.448 8.896 5.32788 4.448 0 ]xshGZXZLY+Helvetica*1 [0 -12 -12 0 0 0 ]msf646.747 862.035 mo(0.01)[-6.672 -3.336 -6.672 0 ]ysh672.631 862.035 mo(0.02)[-6.672 -3.336 -6.672 0 ]ysh698.503 862.035 mo(0.03)[-6.672 -3.336 -6.672 0 ]ysh723.367 862.035 mo(0.04)[-6.672 -3.336 -6.672 0 ]ysh749.227 862.035 mo(0.05)[-6.672 -3.336 -6.672 0 ]ysh776.107 862.035 mo(0.06)[-6.672 -3.336 -6.672 0 ]ysh800.971 862.035 mo(0.07)[-6.672 -3.336 -6.672 0 ]ysh827.839 862.035 mo(0.08)[-6.672 -3.336 -6.672 0 ]ysh851.707 862.035 mo(0.09)[-6.672 -3.336 -6.672 0 ]ysh879.571 862.035 mo(0.10)[-6.672 -3.336 -6.672 0 ]ysh905.443 862.035 mo(0.11)[-6.672 -3.336 -6.672 0 ]ysh930.319 862.035 mo(0.12)[-6.672 -3.336 -6.672 0 ]ysh958.171 862.035 mo(0.13)[-6.672 -3.336 -6.672 0 ]ysh982.039 862.035 mo(0.14)[-6.672 -3.336 -6.672 0 ]ysh1007.92 862.035 mo(0.15)[-6.672 -3.336 -6.672 0 ]yshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
/GZXZLY+Helvetica*1 uf/GZXZLY+Helvetica uf/FAAAAA+Helvetica uf/GZXZLZ+Helvetica-Bold*1 uf/GZXZLZ+Helvetica-Bold uf/GAAAAA+Helvetica-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
